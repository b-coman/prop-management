{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\n// src/lib/firebase.ts\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n// Remove dotenv import - let scripts handle their own env loading if needed outside Next.js context\n// import * as dotenv from 'dotenv';\n// import * as path from 'path';\n// import { getAuth } from \"firebase/auth\"; // Add if using Firebase Auth\n// import { getStorage } from \"firebase/storage\"; // Add if using Firebase Storage\n\n// Load environment variables from .env.local at the project root\n// dotenv.config({ path: path.resolve(process.cwd(), '.env.local') }); // No longer needed here, Next.js handles it\n\n// Your web app's Firebase configuration\n// Loaded from environment variables automatically by Next.js\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  // measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID // Optional: for Analytics\n};\n\n// Remove the checkEnvVars function, as Next.js handles env loading for the app runtime.\n// The script now uses Admin SDK and verifies its own specific requirements.\n/*\nfunction checkEnvVars() {\n    // ... (removed) ...\n}\ncheckEnvVars();\n*/\n\n// Initialize Firebase Client SDK\n// Use getApps() to ensure initialization only happens once within the Next.js app runtime\nlet app;\nif (getApps().length === 0) {\n    // Check if critical client config vars are present before initializing client SDK\n    if (!firebaseConfig.apiKey || !firebaseConfig.projectId) {\n        console.error(\"❌ Client Firebase Config Missing: NEXT_PUBLIC_FIREBASE_API_KEY or NEXT_PUBLIC_FIREBASE_PROJECT_ID is missing in environment variables. Client SDK cannot initialize.\");\n        // Throwing here might break the app build/runtime if env vars aren't set during build phase\n        // Consider logging the error and letting parts of the app fail gracefully if Firebase is needed client-side\n        // throw new Error(\"Missing critical client Firebase configuration. Check environment variables.\");\n    } else {\n        try {\n             app = initializeApp(firebaseConfig);\n             // console.log(\"✅ Firebase Client SDK initialized successfully.\"); // Less verbose logging\n        } catch (initError) {\n            console.error(\"❌ Firebase Client SDK initialization failed:\", initError);\n            // Handle or re-throw the initialization error appropriately\n            // throw initError; // Depending on whether the app can function without Firebase client\n        }\n    }\n} else {\n    app = getApp();\n    // console.log(\"ℹ️ Firebase Client SDK app already initialized.\");\n}\n\n// Initialize Firestore Client SDK only if the app was successfully initialized or retrieved\nlet db;\nif (app) {\n    try {\n        db = getFirestore(app);\n        // console.log(\"✅ Firestore Client SDK initialized successfully.\");\n    } catch (firestoreError) {\n         console.error(\"❌ Firestore Client SDK initialization failed:\", firestoreError);\n         // Handle or re-throw the Firestore initialization error\n    }\n} else {\n     console.error(\"❌ Cannot initialize Firestore Client SDK because Firebase app is not available.\");\n}\n\n// const auth = getAuth(app); // Initialize Auth if needed\n// const storage = getStorage(app); // Initialize Storage if needed\n\n// Export only the client SDK instances needed by the application runtime\nexport { app, db /*, auth, storage */ };\n"],"names":[],"mappings":"AACA,sBAAsB;;;;;AACtB;AAAA;AACA;AAAA;;;AACA,oGAAoG;AACpG,oCAAoC;AACpC,gCAAgC;AAChC,yEAAyE;AACzE,kFAAkF;AAElF,iEAAiE;AACjE,mHAAmH;AAEnH,wCAAwC;AACxC,6DAA6D;AAC7D,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AAEP;AAEA,wFAAwF;AACxF,4EAA4E;AAC5E;;;;;AAKA,GAEA,iCAAiC;AACjC,0FAA0F;AAC1F,IAAI;AACJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IACxB,kFAAkF;IAClF,IAAI,CAAC,eAAe,MAAM,IAAI,CAAC,eAAe,SAAS,EAAE;QACrD,QAAQ,KAAK,CAAC;IACd,4FAA4F;IAC5F,4GAA4G;IAC5G,mGAAmG;IACvG,OAAO;QACH,IAAI;YACC,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,0FAA0F;QAC/F,EAAE,OAAO,WAAW;YAChB,QAAQ,KAAK,CAAC,gDAAgD;QAC9D,4DAA4D;QAC5D,wFAAwF;QAC5F;IACJ;AACJ,OAAO;IACH,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACX,kEAAkE;AACtE;AAEA,4FAA4F;AAC5F,IAAI;AACJ,IAAI,KAAK;IACL,IAAI;QACA,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;IAClB,mEAAmE;IACvE,EAAE,OAAO,gBAAgB;QACpB,QAAQ,KAAK,CAAC,iDAAiD;IAC/D,wDAAwD;IAC7D;AACJ,OAAO;IACF,QAAQ,KAAK,CAAC;AACnB","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/booking-sync.ts"],"sourcesContent":["\n/**\n * @fileoverview Service functions for synchronizing booking availability with external platforms like Airbnb and Booking.com.\n * IMPORTANT: These functions currently contain placeholder logic and require actual API integration.\n */\n'use server';\n\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Property } from '@/types'; // Assuming Property type includes external IDs\n\n/**\n * Represents the details of an Airbnb listing relevant for sync.\n */\nexport interface AirbnbListing {\n  listingId: string;\n  isAvailable: boolean;\n  pricePerNight: number;\n}\n\n/**\n * Represents the details of a Booking.com listing relevant for sync.\n */\nexport interface BookingComListing {\n  listingId: string;\n  isAvailable: boolean;\n  pricePerNight: number;\n}\n\n/**\n * Fetches property details including external listing IDs using the property slug.\n *\n * @param propertySlug The slug (which is the document ID) of the property to fetch.\n * @returns The Property object or null if not found.\n */\nexport async function getPropertyForSync(propertySlug: string): Promise<Property | null> {\n    console.log(`[getPropertyForSync] Attempting to fetch property with slug: ${propertySlug}`);\n    const propertyRef = doc(db, 'properties', propertySlug); // Use slug as document ID\n    try {\n        const docSnap = await getDoc(propertyRef);\n        if (docSnap.exists()) {\n             const data = docSnap.data();\n              // Ensure slug is part of the returned object\n             const propertyData = { id: docSnap.id, slug: docSnap.id, ...data } as Property;\n             console.log(`[getPropertyForSync] Found property: ${propertySlug}`);\n             return propertyData;\n        } else {\n            console.warn(`[getPropertyForSync] Property document not found in Firestore: properties/${propertySlug}`);\n            return null;\n        }\n    } catch (error) {\n         console.error(`❌ [getPropertyForSync] Error fetching property ${propertySlug}:`, error);\n         return null;\n    }\n}\n\n\n/**\n * Asynchronously retrieves Airbnb listing details.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Airbnb API call.\n *\n * @param listingId The Airbnb listing ID.\n * @returns A promise that resolves to an AirbnbListing object.\n */\nexport async function getAirbnbListing(listingId: string): Promise<AirbnbListing> {\n  console.log(`[Sync Placeholder] Fetching Airbnb listing details for ID: ${listingId}`);\n  // TODO: Replace with actual API call to Airbnb.\n  await new Promise(resolve => setTimeout(resolve, 100)); // Simulate network delay\n  return {\n    listingId: listingId,\n    isAvailable: true, // Assume available by default for placeholder\n    pricePerNight: 150, // Example price\n  };\n}\n\n/**\n * Asynchronously retrieves Booking.com listing details.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Booking.com API call.\n *\n * @param listingId The Booking.com listing ID.\n * @returns A promise that resolves to a BookingComListing object.\n */\nexport async function getBookingComListing(listingId: string): Promise<BookingComListing> {\n  console.log(`[Sync Placeholder] Fetching Booking.com listing details for ID: ${listingId}`);\n  // TODO: Replace with actual API call to Booking.com.\n  await new Promise(resolve => setTimeout(resolve, 100)); // Simulate network delay\n  return {\n    listingId: listingId,\n    isAvailable: true, // Assume available by default for placeholder\n    pricePerNight: 160, // Example price\n  };\n}\n\n/**\n * Updates Airbnb listing availability for a specific date range.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Airbnb API call.\n * This simplified version only takes a boolean; a real implementation needs date range parameters.\n *\n * @param listingId The Airbnb listing ID.\n * @param isAvailable The new availability status (true for available, false for blocked).\n * @param checkInDate The start date of the range (optional).\n * @param checkOutDate The end date of the range (optional).\n * @returns A promise that resolves when the update attempt is complete.\n */\nexport async function updateAirbnbListingAvailability(\n    listingId: string,\n    isAvailable: boolean,\n    checkInDate?: Date,\n    checkOutDate?: Date\n): Promise<void> {\n  const dateRangeString = checkInDate && checkOutDate\n    ? ` from ${checkInDate.toISOString().split('T')[0]} to ${checkOutDate.toISOString().split('T')[0]}`\n    : '';\n  console.log(`[Sync Placeholder] Updating Airbnb listing ${listingId} availability to ${isAvailable}${dateRangeString}.`);\n  // TODO: Replace with actual API call to Airbnb, passing the specific date range to block/unblock.\n  await new Promise(resolve => setTimeout(resolve, 150)); // Simulate network delay\n  return;\n}\n\n/**\n * Updates Booking.com listing availability for a specific date range.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Booking.com API call.\n * This simplified version only takes a boolean; a real implementation needs date range parameters.\n *\n * @param listingId The Booking.com listing ID.\n * @param isAvailable The new availability status (true for available, false for blocked).\n * @param checkInDate The start date of the range (optional).\n * @param checkOutDate The end date of the range (optional).\n * @returns A promise that resolves when the update attempt is complete.\n */\nexport async function updateBookingComListingAvailability(\n    listingId: string,\n    isAvailable: boolean,\n    checkInDate?: Date,\n    checkOutDate?: Date\n): Promise<void> {\n   const dateRangeString = checkInDate && checkOutDate\n     ? ` from ${checkInDate.toISOString().split('T')[0]} to ${checkOutDate.toISOString().split('T')[0]}`\n     : '';\n   console.log(`[Sync Placeholder] Updating Booking.com listing ${listingId} availability to ${isAvailable}${dateRangeString}.`);\n  // TODO: Replace with actual API call to Booking.com, passing the specific date range to block/unblock.\n  await new Promise(resolve => setTimeout(resolve, 150)); // Simulate network delay\n  return;\n}\n\n// TODO: Add functions for more granular sync (e.g., update price, minimum stay).\n// TODO: Implement webhook handlers to receive availability updates FROM external platforms.\n"],"names":[],"mappings":"AACA;;;CAGC;;;;;;;;;AAGD;AAAA;AACA;;;;;;AA2BO,eAAe,uCAAgB,GAAhB,mBAAmB,YAAoB;IACzD,QAAQ,GAAG,CAAC,CAAC,6DAA6D,EAAE,cAAc;IAC1F,MAAM,cAAc,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,cAAc,eAAe,0BAA0B;IACnF,IAAI;QACA,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,QAAQ,MAAM,IAAI;YACjB,MAAM,OAAO,QAAQ,IAAI;YACxB,6CAA6C;YAC9C,MAAM,eAAe;gBAAE,IAAI,QAAQ,EAAE;gBAAE,MAAM,QAAQ,EAAE;gBAAE,GAAG,IAAI;YAAC;YACjE,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,cAAc;YAClE,OAAO;QACZ,OAAO;YACH,QAAQ,IAAI,CAAC,CAAC,0EAA0E,EAAE,cAAc;YACxG,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACX,QAAQ,KAAK,CAAC,CAAC,+CAA+C,EAAE,aAAa,CAAC,CAAC,EAAE;QACjF,OAAO;IACZ;AACJ;AAUO,eAAe,uCAAc,GAAd,iBAAiB,SAAiB;IACtD,QAAQ,GAAG,CAAC,CAAC,2DAA2D,EAAE,WAAW;IACrF,gDAAgD;IAChD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF,OAAO;QACL,WAAW;QACX,aAAa;QACb,eAAe;IACjB;AACF;AASO,eAAe,uCAAkB,GAAlB,qBAAqB,SAAiB;IAC1D,QAAQ,GAAG,CAAC,CAAC,gEAAgE,EAAE,WAAW;IAC1F,qDAAqD;IACrD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF,OAAO;QACL,WAAW;QACX,aAAa;QACb,eAAe;IACjB;AACF;AAaO,eAAe,uCAA6B,GAA7B,gCAClB,SAAiB,EACjB,WAAoB,EACpB,WAAkB,EAClB,YAAmB;IAErB,MAAM,kBAAkB,eAAe,eACnC,CAAC,MAAM,EAAE,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,GACjG;IACJ,QAAQ,GAAG,CAAC,CAAC,2CAA2C,EAAE,UAAU,iBAAiB,EAAE,cAAc,gBAAgB,CAAC,CAAC;IACvH,kGAAkG;IAClG,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF;AACF;AAaO,eAAe,uCAAiC,GAAjC,oCAClB,SAAiB,EACjB,WAAoB,EACpB,WAAkB,EAClB,YAAmB;IAEpB,MAAM,kBAAkB,eAAe,eACnC,CAAC,MAAM,EAAE,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,GACjG;IACJ,QAAQ,GAAG,CAAC,CAAC,gDAAgD,EAAE,UAAU,iBAAiB,EAAE,cAAc,gBAAgB,CAAC,CAAC;IAC7H,uGAAuG;IACvG,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF;AACF,EAEA,iFAAiF;CACjF,4FAA4F;;;IA/GtE;IA6BA;IAkBA;IAsBA;IA0BA;;AA/FA,+OAAA;AA6BA,+OAAA;AAkBA,+OAAA;AAsBA,+OAAA;AA0BA,+OAAA","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/bookingService.ts"],"sourcesContent":["\n// src/services/bookingService.ts\n'use server';\n\nimport {\n  collection,\n  addDoc,\n  doc,\n  getDoc,\n  updateDoc,\n  query,\n  where,\n  getDocs,\n  serverTimestamp as clientServerTimestamp,\n  Timestamp as ClientTimestamp,\n  writeBatch as clientWriteBatch,\n  setDoc as clientSetDoc,\n  QueryConstraint,\n  limit,\n  documentId,\n} from 'firebase/firestore';\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase';\nimport type { Booking, Availability, Property, SerializableTimestamp } from '@/types';\nimport { differenceInCalendarDays, eachDayOfInterval, format, parse, subDays, startOfMonth, endOfMonth, parseISO, startOfDay } from 'date-fns';\nimport { updateAirbnbListingAvailability, updateBookingComListingAvailability, getPropertyForSync } from './booking-sync';\n\n\n// --- Schemas (Keep Zod schemas for data validation if createBooking is still used elsewhere) ---\n\nexport type CreateBookingData = Omit<Booking,\n  'id' |\n  'checkInDate' |\n  'checkOutDate' |\n  'createdAt' |\n  'updatedAt' |\n  'paymentInfo' | // paymentInfo structure is defined separately now\n  'pricing'\n> & {\n  propertyId: string; // This is the property SLUG now\n  checkInDate: string; // ISO String\n  checkOutDate: string; // ISO String\n  pricing: {\n    baseRate: number;\n    numberOfNights: number;\n    cleaningFee: number;\n    extraGuestFee?: number;\n    numberOfExtraGuests?: number;\n    accommodationTotal: number;\n    subtotal: number;\n    taxes?: number;\n    discountAmount?: number;\n    total: number;\n  };\n  appliedCouponCode?: string;\n  // paymentInput is now handled by the webhook and updateBookingPaymentInfo\n  // status will likely be 'confirmed' when this is called by simulation/webhook\n  status?: Booking['status']; // Optional for flexibility, webhook should set 'confirmed'\n};\n\nconst CreateBookingDataSchema = z.object({\n  propertyId: z.string().min(1), // Property SLUG\n  guestInfo: z.object({\n    firstName: z.string().min(1),\n    lastName: z.string().optional(),\n    email: z.string().email(),\n    phone: z.string().optional(),\n    userId: z.string().optional(),\n  }).passthrough(),\n  checkInDate: z.string().refine(val => !isNaN(Date.parse(val))),\n  checkOutDate: z.string().refine(val => !isNaN(Date.parse(val))),\n  numberOfGuests: z.number().int().positive(),\n  pricing: z.object({\n    baseRate: z.number().nonnegative(),\n    numberOfNights: z.number().int().positive(),\n    cleaningFee: z.number().nonnegative(),\n    extraGuestFee: z.number().nonnegative().optional(),\n    numberOfExtraGuests: z.number().int().nonnegative().optional(),\n    accommodationTotal: z.number().nonnegative(),\n    subtotal: z.number().nonnegative(),\n    taxes: z.number().nonnegative().optional(),\n    discountAmount: z.number().nonnegative().optional(),\n    total: z.number().nonnegative(),\n  }).passthrough(),\n  appliedCouponCode: z.string().optional(),\n  status: z.enum(['pending', 'confirmed', 'cancelled', 'completed']).optional(),\n  // Removed paymentInput validation here, handled separately\n  notes: z.string().optional(),\n  source: z.string().optional(),\n  externalId: z.string().optional(),\n}).refine(data => new Date(data.checkOutDate) > new Date(data.checkInDate), {\n  message: 'Check-out date must be after check-in date.',\n  path: ['checkOutDate'],\n}).refine(data => {\n    const calculatedTotal = (data.pricing.subtotal ?? 0) + (data.pricing.taxes ?? 0) - (data.pricing.discountAmount ?? 0);\n    return Math.abs(calculatedTotal - data.pricing.total) < 0.01;\n}, {\n    message: 'Calculated total does not match provided total price.',\n    path: ['pricing.total'],\n});\n\n\n/**\n * Updates an existing booking (typically 'pending') with payment information\n * and sets its status to 'confirmed'. Called by the Stripe webhook.\n * Also updates property availability.\n *\n * @param bookingId The Firestore document ID of the booking to update.\n * @param paymentInfo The payment details from Stripe.\n * @param propertyId The slug of the property associated with the booking.\n */\nexport async function updateBookingPaymentInfo(\n    bookingId: string,\n    paymentInfo: Booking['paymentInfo'],\n    propertyId: string // Property Slug passed from webhook metadata\n): Promise<void> {\n    console.log(`--- [updateBookingPaymentInfo] Called for booking: ${bookingId}, property: ${propertyId} ---`);\n    if (!bookingId) {\n        throw new Error(\"Booking ID is required to update payment info.\");\n    }\n    if (!propertyId) {\n         throw new Error(\"Property ID (slug) is required to update payment info and availability.\");\n    }\n     if (!paymentInfo || !paymentInfo.stripePaymentIntentId || paymentInfo.status !== 'paid' && paymentInfo.status !== 'succeeded') {\n         console.warn(`[updateBookingPaymentInfo] Invalid or incomplete payment info for booking ${bookingId}. Status: ${paymentInfo?.status}`);\n        throw new Error(\"Valid payment information (status 'paid' or 'succeeded') is required.\");\n    }\n\n    const bookingRef = doc(db, 'bookings', bookingId);\n\n    try {\n        // Fetch the booking to get check-in/out dates for availability update\n        const bookingSnap = await getDoc(bookingRef);\n        if (!bookingSnap.exists()) {\n            console.error(`[updateBookingPaymentInfo] Booking ${bookingId} not found.`);\n            throw new Error(`Booking with ID ${bookingId} not found.`);\n        }\n        const bookingData = bookingSnap.data() as Booking; // Cast to Booking\n\n        // --- Security/Consistency Check ---\n        if (bookingData.propertyId !== propertyId) {\n             console.error(`[updateBookingPaymentInfo] Mismatch: Booking ${bookingId} propertyId (${bookingData.propertyId}) does not match webhook metadata propertyId (${propertyId}).`);\n             throw new Error(\"Property ID mismatch between booking and webhook metadata.\");\n        }\n\n\n        console.log(`[updateBookingPaymentInfo] Updating booking ${bookingId} status to 'confirmed' and adding payment details.`);\n        await updateDoc(bookingRef, {\n            status: 'confirmed',\n            paymentInfo: { // Merge with existing potentially, or overwrite\n                ...bookingData.paymentInfo, // Keep existing fields if any\n                ...paymentInfo, // Add/overwrite with new payment data\n                paidAt: paymentInfo.paidAt instanceof Date ? ClientTimestamp.fromDate(paymentInfo.paidAt) : clientServerTimestamp(), // Ensure Firestore Timestamp\n            },\n            updatedAt: clientServerTimestamp(),\n        });\n        console.log(`✅ [updateBookingPaymentInfo] Successfully updated booking ${bookingId} to confirmed.`);\n\n        // --- Update Property Availability ---\n        const checkInDate = bookingData.checkInDate instanceof ClientTimestamp\n            ? bookingData.checkInDate.toDate()\n            : bookingData.checkInDate ? new Date(bookingData.checkInDate as any) : null; // Handle different types\n        const checkOutDate = bookingData.checkOutDate instanceof ClientTimestamp\n            ? bookingData.checkOutDate.toDate()\n            : bookingData.checkOutDate ? new Date(bookingData.checkOutDate as any) : null;\n\n        if (checkInDate && checkOutDate) {\n             console.log(`[updateBookingPaymentInfo] Triggering availability update for property ${propertyId}, booking ${bookingId}`);\n            try {\n                // Use Client SDK to update availability\n                await updatePropertyAvailability(propertyId, checkInDate, checkOutDate, false);\n                console.log(`✅ [updateBookingPaymentInfo] Availability updated for property ${propertyId}.`);\n            } catch (availabilityError) {\n                 console.error(`❌ [updateBookingPaymentInfo] Failed to update availability for property ${propertyId} after confirming booking ${bookingId}:`, availabilityError);\n                 // Log but don't fail the whole process, booking is confirmed\n            }\n             // --- Trigger External Sync ---\n             // Move sync here, only sync AFTER booking is confirmed\n             console.log(`[updateBookingPaymentInfo] Triggering external sync for property ${propertyId}, booking ${bookingId}...`);\n             try {\n                 // Fetch property details using the slug (propertyId)\n                 const propertyDetails = await getPropertyForSync(propertyId);\n                 if (propertyDetails) {\n                     if (propertyDetails.channelIds?.airbnb) {\n                         await updateAirbnbListingAvailability(propertyDetails.channelIds.airbnb, false, checkInDate, checkOutDate);\n                     }\n                     if (propertyDetails.channelIds?.booking_com) {\n                         await updateBookingComListingAvailability(propertyDetails.channelIds.booking_com, false, checkInDate, checkOutDate);\n                     }\n                 } else {\n                     console.warn(`[updateBookingPaymentInfo Sync] Could not find property ${propertyId} for external sync.`);\n                 }\n             } catch (syncError) {\n                  console.error(`❌ [updateBookingPaymentInfo Sync] Error syncing externally for booking ${bookingId}:`, syncError);\n             }\n\n        } else {\n             console.warn(`[updateBookingPaymentInfo] Missing check-in/out dates for booking ${bookingId}. Cannot update availability.`);\n        }\n\n    } catch (error) {\n        console.error(`❌ [updateBookingPaymentInfo] Error updating booking ${bookingId}:`, error);\n        throw new Error(`Failed to update booking payment info: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n\n/**\n * Creates a new confirmed booking document in Firestore (e.g., for simulations or direct creation).\n * NOTE: The primary flow now uses createPendingBookingAction followed by webhook confirmation.\n * This function might still be useful for the simulation button.\n * Uses Client SDK for Firestore operations.\n */\nexport async function createBooking(rawBookingData: CreateBookingData): Promise<string> {\n    // Validate that propertyId (slug) is present\n   if (!rawBookingData.propertyId) {\n     throw new Error(\"Missing propertyId (slug) in booking data.\");\n   }\n   const propertyId = rawBookingData.propertyId; // This is the SLUG\n\n   const paymentIntentId = (rawBookingData as any)?.paymentInput?.stripePaymentIntentId || 'N/A'; // Handle potential missing paymentInput\n   console.log(`--- [createBooking] Function called (likely simulation) for Payment Intent [${paymentIntentId}], Property [${propertyId}] ---`);\n   console.log(`[createBooking] Received raw data:`, JSON.stringify(rawBookingData, null, 2));\n\n   let bookingData: z.infer<typeof CreateBookingDataSchema>;\n\n   // Zod Validation\n   console.log(`[createBooking] Starting Zod validation for Payment Intent [${paymentIntentId}]...`);\n   const validationResult = CreateBookingDataSchema.safeParse(rawBookingData);\n   if (!validationResult.success) {\n     const errorMessages = validationResult.error.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ');\n     const validationError = new Error(`Invalid booking data: ${errorMessages}`);\n     console.error(`❌ [createBooking] Validation Error:`, validationError.message);\n     throw validationError;\n   }\n   bookingData = validationResult.data; // Contains propertyId as slug\n   console.log(`[createBooking] Data passed validation for Payment Intent [${paymentIntentId}]`);\n\n\n  try {\n     console.log(`[createBooking] Entered main try block for Payment Intent [${paymentIntentId}]`);\n     const bookingsCollection = collection(db, 'bookings');\n\n     // Data Transformation\n     console.log(`[createBooking] Transforming data for Firestore for Payment Intent [${paymentIntentId}]...`);\n     const checkInDate = new Date(bookingData.checkInDate);\n     const checkOutDate = new Date(bookingData.checkOutDate);\n     const checkInTimestamp = ClientTimestamp.fromDate(checkInDate);\n     const checkOutTimestamp = ClientTimestamp.fromDate(checkOutDate);\n\n     // Construct PaymentInfo if paymentInput exists (for simulation)\n      let paymentInfo: Booking['paymentInfo'] | undefined = undefined;\n      if ((rawBookingData as any).paymentInput) {\n          const paymentInput = (rawBookingData as any).paymentInput;\n          paymentInfo = {\n              stripePaymentIntentId: paymentInput.stripePaymentIntentId || `simulated_${Date.now()}`,\n              amount: paymentInput.amount ?? bookingData.pricing.total,\n              status: paymentInput.status || 'succeeded',\n              paidAt: (paymentInput.status === 'succeeded' || paymentInput.status === 'paid')\n                  ? ClientTimestamp.now()\n                  : null,\n          };\n      } else {\n          // Create a default placeholder if no paymentInput provided (shouldn't happen in normal flow)\n           paymentInfo = {\n               stripePaymentIntentId: 'N/A',\n               amount: bookingData.pricing.total,\n               status: 'unknown', // Or 'confirmed' if assuming success?\n               paidAt: null,\n           };\n      }\n\n     // Construct the final booking document data\n     const docData: Omit<Booking, 'id'> = {\n         propertyId: bookingData.propertyId, // Store the SLUG\n         guestInfo: bookingData.guestInfo,\n         checkInDate: checkInTimestamp,\n         checkOutDate: checkOutTimestamp,\n         numberOfGuests: bookingData.numberOfGuests,\n         pricing: bookingData.pricing,\n         appliedCouponCode: bookingData.appliedCouponCode,\n         status: bookingData.status || 'confirmed', // Default to confirmed for direct creation/simulation\n         paymentInfo: paymentInfo,\n         notes: bookingData.notes,\n         source: bookingData.source || 'simulation', // Default source\n         externalId: bookingData.externalId,\n         createdAt: clientServerTimestamp(),\n         updatedAt: clientServerTimestamp(),\n     };\n\n      // Log prepared data (adjust Timestamp representation for readability)\n     console.log(`[createBooking] Firestore Doc Data Prepared for Payment Intent [${paymentIntentId}]:`, JSON.stringify({\n         ...docData,\n         checkInDate: `Timestamp(${checkInDate.toISOString()})`,\n         checkOutDate: `Timestamp(${checkOutDate.toISOString()})`,\n         paidAt: docData.paymentInfo.paidAt ? `Timestamp(${(docData.paymentInfo.paidAt as ClientTimestamp).toDate().toISOString()})` : null,\n         createdAt: 'ServerTimestamp',\n         updatedAt: 'ServerTimestamp'\n     }, null, 2));\n\n\n     // Firestore Operation (Client SDK)\n     console.log(`[createBooking] Attempting to add booking document to Firestore (Client SDK) for Payment Intent [${paymentIntentId}]...`);\n     const docRef = await addDoc(bookingsCollection, docData);\n     const bookingId = docRef.id;\n     console.log(`✅ [createBooking] Booking document created successfully! ID: ${bookingId} for Payment Intent [${paymentIntentId}]`);\n\n     // --- Update Property Availability (Client SDK) ---\n     console.log(`[createBooking] Triggering local availability update (Client SDK) for property ${propertyId}, booking ${bookingId}`);\n     try {\n       await updatePropertyAvailability(propertyId, checkInDate, checkOutDate, false);\n       console.log(`✅ [createBooking] Successfully finished update call for local availability for property ${propertyId}, booking ${bookingId}.`);\n     } catch (availabilityError) {\n       console.error(`❌ [createBooking] Failed to update local availability (Client SDK) for property ${propertyId} after creating booking ${bookingId}:`, availabilityError);\n       // Decide if this should block the entire process or just log a warning\n       // In simulation, maybe log and continue? For real bookings, re-throw.\n        // throw availabilityError; // Uncomment if availability update failure should halt creation\n        console.warn(`⚠️ [createBooking] Availability update failed, but booking ${bookingId} was created (source: ${docData.source}). Manual check needed.`);\n     }\n\n     // --- Synchronize Availability with External Platforms ---\n     // Skip sync for simulation/test bookings or handle differently if needed\n      if (docData.source !== 'simulation' && docData.source !== 'test-button') {\n          console.log(`[createBooking] Starting external platform sync for property ${propertyId}, booking ${bookingId}...`);\n          try {\n             // Fetch property details using the slug (propertyId)\n             const propertyDetails = await getPropertyForSync(propertyId);\n             if (propertyDetails) {\n                 if (propertyDetails.channelIds?.airbnb) {\n                     await updateAirbnbListingAvailability(propertyDetails.channelIds.airbnb, false, checkInDate, checkOutDate);\n                 }\n                 if (propertyDetails.channelIds?.booking_com) {\n                     await updateBookingComListingAvailability(propertyDetails.channelIds.booking_com, false, checkInDate, checkOutDate);\n                 }\n             } else {\n                  console.warn(`[createBooking Sync] Could not retrieve property details for ${propertyId} to perform external sync.`);\n             }\n         } catch (syncError) {\n             console.error(`❌ [createBooking Sync] Error synchronizing availability with external platforms for property ${propertyId} after creating booking ${bookingId}:`, syncError);\n         }\n     } else {\n          console.log(`[createBooking] Skipping external sync for booking source: ${docData.source}`);\n     }\n\n     console.log(`--- [createBooking] Function returning successfully with booking ID: ${bookingId} ---`);\n     return bookingId;\n\n   } catch (error) {\n      if (!(error instanceof Error && error.message.startsWith('Invalid booking data:'))) {\n          console.error(`❌ [createBooking] Error during booking creation process:`, error);\n      }\n     const errorMessage = error instanceof Error\n         ? (error.message.startsWith('Invalid booking data:') ? error.message : `Failed to create booking (Ref: ${paymentIntentId}). Please contact support.`)\n         : `An unexpected error occurred while creating the booking (Ref: ${paymentIntentId}). Please contact support.`;\n\n     throw new Error(errorMessage);\n   }\n }\n\n/**\n * Retrieves a booking document by its ID using the Client SDK.\n */\nexport async function getBookingById(bookingId: string): Promise<Booking | null> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        const docSnap = await getDoc(bookingRef);\n\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n            // Convert Timestamps if needed for client consumption, or keep as Timestamps\n            const bookingResult = {\n                id: docSnap.id,\n                ...data,\n                // Ensure propertyId is the slug\n                propertyId: data.propertyId,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking;\n            return bookingResult;\n        } else {\n            console.warn(`[getBookingById] No booking found with ID: ${bookingId}`);\n            return null;\n        }\n    } catch (error) {\n        console.error(`❌ [getBookingById] Error fetching booking with ID ${bookingId}:`, error);\n        throw new Error(`Failed to fetch booking: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Updates the status of a specific booking document using the Client SDK.\n * Calls updatePropertyAvailability (Client SDK) if status is 'cancelled'.\n */\nexport async function updateBookingStatus(bookingId: string, status: Booking['status']): Promise<void> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        await updateDoc(bookingRef, {\n            status: status,\n            updatedAt: clientServerTimestamp(), // Use Client serverTimestamp\n        });\n        console.log(`✅ [updateBookingStatus] Successfully updated booking ${bookingId} to status: ${status}`);\n\n        if (status === 'cancelled') {\n          const booking = await getBookingById(bookingId); // Re-fetch using Client SDK\n          if (booking && booking.checkInDate && booking.checkOutDate) {\n             // propertyId is already the slug from getBookingById\n             const propertyId = booking.propertyId;\n            // Convert Client Timestamps back to Dates\n             const checkInDate = booking.checkInDate instanceof ClientTimestamp\n                ? booking.checkInDate.toDate()\n                : booking.checkInDate ? new Date(booking.checkInDate as any) : null;\n             const checkOutDate = booking.checkOutDate instanceof ClientTimestamp\n                ? booking.checkOutDate.toDate()\n                : booking.checkOutDate ? new Date(booking.checkOutDate as any) : null;\n\n             if (checkInDate && checkOutDate && propertyId) {\n                 try {\n                     // Make dates available again\n                     await updatePropertyAvailability(propertyId, checkInDate, checkOutDate, true);\n                     console.log(`✅ [updateBookingStatus] Successfully updated local availability (Client SDK) for cancelled booking ${bookingId}.`);\n\n                      // Trigger external sync to release dates\n                     await triggerExternalSyncForDateUpdate(propertyId, checkInDate, checkOutDate, true);\n\n                 } catch (availError) {\n                      console.error(`❌ [updateBookingStatus] Failed to update local availability or sync for cancelled booking ${bookingId}:`, availError);\n                 }\n             } else {\n                  console.warn(`[updateBookingStatus] Could not parse dates or missing propertyId for booking ${bookingId} to update availability after cancellation.`);\n             }\n          } else {\n             console.warn(`[updateBookingStatus] Could not find booking ${bookingId} or its dates to update availability after cancellation.`);\n          }\n        }\n\n    } catch (error) {\n        console.error(`❌ [updateBookingStatus] Error updating status for booking ${bookingId} (Client SDK):`, error);\n        throw new Error(`Failed to update booking status: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific property slug using the Client SDK.\n */\nexport async function getBookingsForProperty(propertySlug: string): Promise<Booking[]> {\n    const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        // Query using the property slug\n        const q = query(bookingsCollection, where('propertyId', '==', propertySlug));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n            const data = doc.data();\n            bookings.push({\n                id: doc.id,\n                ...data,\n                propertyId: data.propertyId, // Should be the slug\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForProperty] Error fetching bookings for property ${propertySlug}:`, error);\n        throw new Error(`Failed to fetch bookings for property: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific user ID using the Client SDK.\n */\nexport async function getBookingsForUser(userId: string): Promise<Booking[]> {\n     const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        const q = query(bookingsCollection, where('guestInfo.userId', '==', userId));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n             const data = doc.data();\n             bookings.push({\n                 id: doc.id,\n                ...data,\n                propertyId: data.propertyId, // Should be the slug\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n             } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForUser] Error fetching bookings for user ${userId}:`, error);\n        throw new Error(`Failed to fetch bookings for user: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Updates the availability status for a given property and date range in Firestore\n * using the **Firebase Client SDK**. Requires appropriate security rules.\n * The propertyId parameter is expected to be the property slug.\n */\nexport async function updatePropertyAvailability(propertyId: string, checkInDate: Date, checkOutDate: Date, available: boolean): Promise<void> {\n  console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function called ---`);\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Args: propertyId=${propertyId} (slug), checkIn=${format(checkInDate, 'yyyy-MM-dd')}, checkOut=${format(checkOutDate, 'yyyy-MM-dd')} (exclusive), available=${available}`);\n\n  if (!db) {\n    console.error(\"❌ [updatePropertyAvailability - CLIENT SDK] Firestore Client SDK (db) is not initialized.\");\n    throw new Error(\"Firestore Client SDK is not initialized.\");\n  }\n\n  if (checkOutDate <= checkInDate) {\n    console.warn(`[updatePropertyAvailability] Check-out date (${format(checkOutDate, 'yyyy-MM-dd')}) must be after check-in date (${format(checkInDate, 'yyyy-MM-dd')}). No update performed.`);\n    return;\n  }\n\n  // Ensure dates are at the start of the day UTC for consistency\n  const start = startOfDay(checkInDate);\n  const end = startOfDay(subDays(checkOutDate, 1)); // Make checkout date exclusive\n\n  const datesToUpdate = eachDayOfInterval({ start, end });\n\n  if (datesToUpdate.length === 0) {\n    console.log(\"[updatePropertyAvailability - CLIENT SDK] No dates need updating.\");\n    return;\n  }\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Dates to update (${datesToUpdate.length}): ${datesToUpdate.map(d => format(d, 'yyyy-MM-dd')).join(', ')}`);\n\n  const updatesByMonth: { [month: string]: { [day: number]: boolean } } = {};\n  datesToUpdate.forEach(date => {\n    const monthStr = format(date, 'yyyy-MM'); // Use UTC month\n    const dayOfMonth = date.getUTCDate(); // Use UTC day\n    if (!updatesByMonth[monthStr]) {\n      updatesByMonth[monthStr] = {};\n    }\n    updatesByMonth[monthStr][dayOfMonth] = available;\n  });\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Updates grouped by month:`, JSON.stringify(updatesByMonth));\n\n  const batch = clientWriteBatch(db);\n  const availabilityCollection = collection(db, 'availability');\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Initialized Firestore Client batch.`);\n\n  try {\n    const monthStrings = Object.keys(updatesByMonth);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Processing months: ${monthStrings.join(', ')}`);\n\n    if (monthStrings.length === 0) return;\n\n    // Generate document IDs using the property slug\n    const docIdsToFetch = monthStrings.map(monthStr => `${propertyId}_${monthStr}`);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetching existing availability docs for ${monthStrings.length} months...`);\n\n    // Firestore 'in' query limit is 30 values\n    const idBatches: string[][] = [];\n    for (let i = 0; i < docIdsToFetch.length; i += 30) {\n      idBatches.push(docIdsToFetch.slice(i, i + 30));\n    }\n\n    const fetchedDocsMap = new Map<string, Availability>();\n    await Promise.all(idBatches.map(async (batchIds) => {\n      if (batchIds.length === 0) return;\n      const q = query(availabilityCollection, where(documentId(), 'in', batchIds));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(docSnap => {\n        if (docSnap.exists()) {\n          fetchedDocsMap.set(docSnap.id, { id: docSnap.id, ...docSnap.data() } as Availability);\n        }\n      });\n    }));\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetched ${fetchedDocsMap.size} existing doc snapshots.`);\n\n    monthStrings.forEach(monthStr => {\n      const availabilityDocId = `${propertyId}_${monthStr}`; // Use slug in doc ID\n      console.log(`[updatePropertyAvailability Batch Prep] Processing month ${monthStr} (Doc ID: ${availabilityDocId}). Days: ${Object.keys(updatesByMonth[monthStr]).join(', ')}`);\n      const availabilityDocRef = doc(availabilityCollection, availabilityDocId);\n      const updatesForDay = updatesByMonth[monthStr];\n\n      const updatePayload: { [key: string]: any } = {};\n      for (const day in updatesForDay) {\n        updatePayload[`available.${String(day)}`] = updatesForDay[day];\n      }\n      updatePayload.updatedAt = clientServerTimestamp();\n      console.log(`[updatePropertyAvailability Batch Prep] Payload for ${availabilityDocId}:`, JSON.stringify({ ...updatePayload, updatedAt: 'ServerTimestamp' }));\n\n\n      const existingDoc = fetchedDocsMap.get(availabilityDocId);\n\n      if (existingDoc) {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} exists. Adding UPDATE.`);\n        batch.update(availabilityDocRef, updatePayload);\n      } else {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} DOES NOT exist. Creating initial.`);\n        const [year, month] = monthStr.split('-').map(Number);\n        const daysInMonth = new Date(year, month, 0).getDate();\n        const initialAvailableMap: { [day: number]: boolean } = {};\n        for (let day = 1; day <= daysInMonth; day++) {\n          initialAvailableMap[day] = updatesForDay[day] !== undefined ? updatesForDay[day] : true;\n        }\n\n        // When creating a new doc, ensure propertyId is the slug\n        const newDocData: Partial<Availability> = {\n          propertyId: propertyId, // Store slug here\n          month: monthStr,\n          available: initialAvailableMap,\n          updatedAt: clientServerTimestamp(),\n        };\n        console.log(`[updatePropertyAvailability Batch Prep] Adding SET (merge: true) for ${availabilityDocId}.`);\n        batch.set(availabilityDocRef, newDocData, { merge: true });\n      }\n    });\n\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Committing client batch for property ${propertyId}...`);\n    await batch.commit();\n    console.log(`✅ [updatePropertyAvailability - CLIENT SDK] Batch committed for property ${propertyId}.`);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function finished successfully ---`);\n\n  } catch (error) {\n    console.error(`❌ Error during Client SDK batch update/creation for property availability ${propertyId}:`, error);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function throwing error ---`);\n    // Rethrow with a more specific message if it's a permission error\n     if (error instanceof Error && (error.message.includes('PERMISSION_DENIED') || error.message.includes('Missing or insufficient permissions'))) {\n        throw new Error(`Permission denied updating availability for property ${propertyId}. Check Firestore rules.`);\n     }\n    throw new Error(`Failed to update local property availability using Client SDK: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\n/**\n * Helper function to trigger external sync after availability update.\n * Expects propertyId to be the slug.\n */\nasync function triggerExternalSyncForDateUpdate(propertyId: string, checkInDate: Date, checkOutDate: Date, isAvailable: boolean): Promise<void> {\n    console.log(`[Sync Trigger] Syncing availability change for property ${propertyId} (slug) (${isAvailable ? 'Release' : 'Block'})`);\n     try {\n       // Fetch property using the slug\n       const propertyDetails = await getPropertyForSync(propertyId);\n       if (propertyDetails) {\n           if (propertyDetails.channelIds?.airbnb) {\n               await updateAirbnbListingAvailability(propertyDetails.channelIds.airbnb, isAvailable, checkInDate, checkOutDate);\n           }\n           if (propertyDetails.channelIds?.booking_com) {\n               await updateBookingComListingAvailability(propertyDetails.channelIds.booking_com, isAvailable, checkInDate, checkOutDate);\n           }\n       } else {\n           console.warn(`[Sync Trigger] Could not find property ${propertyId} for external sync.`);\n       }\n   } catch (syncError) {\n        console.error(`❌ [Sync Trigger] Error syncing externally for property ${propertyId}:`, syncError);\n   }\n}\n\n\n/**\n * Fetches all unavailable dates for a given property slug using the Client SDK.\n */\nexport async function getUnavailableDatesForProperty(propertySlug: string, monthsToFetch: number = 12): Promise<Date[]> {\n  const unavailableDates: Date[] = [];\n  console.log(`--- [getUnavailableDatesForProperty] Function called ---`);\n  console.log(`[getUnavailableDatesForProperty] Fetching for property ${propertySlug} for the next ${monthsToFetch} months.`);\n\n  if (!db) {\n      console.error(\"❌ [getUnavailableDatesForProperty] Firestore Client SDK (db) is not initialized.\");\n      return [];\n  }\n\n  const availabilityCollection = collection(db, 'availability');\n  const today = new Date();\n  const currentMonthStart = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), 1));\n\n\n  try {\n    const monthDocIds: string[] = [];\n    for (let i = 0; i < monthsToFetch; i++) {\n      const targetMonth = new Date(Date.UTC(currentMonthStart.getUTCFullYear(), currentMonthStart.getUTCMonth() + i, 1));\n      const monthStr = format(targetMonth, 'yyyy-MM');\n      // Use slug in document ID\n      monthDocIds.push(`${propertySlug}_${monthStr}`);\n    }\n\n     if (monthDocIds.length === 0) {\n        console.log(\"[getUnavailableDatesForProperty] No month document IDs to query.\");\n        return [];\n    }\n    console.log(`[getUnavailableDatesForProperty] Querying for document IDs: ${monthDocIds.join(', ')}`);\n\n    // Firestore 'in' query limit is 30 values\n    const queryBatches: string[][] = [];\n    for (let i = 0; i < monthDocIds.length; i += 30) {\n        queryBatches.push(monthDocIds.slice(i, i + 30));\n    }\n    console.log(`[getUnavailableDatesForProperty] Split into ${queryBatches.length} query batches due to 'in' operator limit.`);\n\n\n    const allQuerySnapshots = await Promise.all(\n      queryBatches.map(async (batchIds, index) => {\n          console.log(`[getUnavailableDatesForProperty] Executing query for batch ${index + 1}: ${batchIds.join(', ')}`);\n          const q = query(availabilityCollection, where(documentId(), 'in', batchIds));\n          return getDocs(q);\n      })\n    );\n    console.log(`[getUnavailableDatesForProperty] Fetched results from ${allQuerySnapshots.length} batches.`);\n\n    let docCount = 0;\n    allQuerySnapshots.forEach((querySnapshot, batchIndex) => {\n        console.log(`[getUnavailableDatesForProperty] Processing batch ${batchIndex + 1}: Found ${querySnapshot.docs.length} documents.`);\n         docCount += querySnapshot.docs.length;\n         querySnapshot.forEach((doc) => {\n            const data = doc.data() as Partial<Availability>;\n            const docId = doc.id;\n            // Ensure propertyId in document matches the requested slug\n             if (data.propertyId !== propertySlug) {\n                 console.warn(`[getUnavailableDates] Mismatch: Doc ${docId} has propertyId ${data.propertyId}, expected ${propertySlug}. Skipping.`);\n                 return;\n             }\n\n            const monthStr = data.month || docId.split('_')[1]; // Prefer data.month\n\n             if (!monthStr || !/^\\d{4}-\\d{2}$/.test(monthStr)) {\n                 console.warn(`[getUnavailableDates] Invalid month string for doc ${docId}. Skipping.`);\n                 return;\n             }\n\n            if (data.available && typeof data.available === 'object') {\n                const [year, monthIndex] = monthStr.split('-').map(num => parseInt(num, 10));\n                const month = monthIndex - 1; // JS months 0-indexed\n\n                for (const dayStr in data.available) {\n                    const day = parseInt(dayStr, 10);\n                    if (!isNaN(day) && data.available[day] === false) {\n                        try {\n                            // Construct date as UTC date\n                            const date = new Date(Date.UTC(year, month, day));\n                             // Double check date validity after creation\n                             if (date.getUTCFullYear() === year && date.getUTCMonth() === month && date.getUTCDate() === day) {\n                                const todayUtcStart = startOfDay(new Date()); // Compare against local start of today\n                                if (date >= todayUtcStart) {\n                                    unavailableDates.push(date);\n                                }\n                             } else {\n                                 console.warn(`[getUnavailableDates] Invalid date created for ${monthStr}-${dayStr}. Skipping.`);\n                             }\n                        } catch (dateError) {\n                             console.warn(`[getUnavailableDates] Error creating date ${monthStr}-${dayStr}:`, dateError);\n                        }\n                    }\n                }\n            }\n        });\n    });\n    console.log(`[getUnavailableDates] Processed ${docCount} total documents.`);\n\n    unavailableDates.sort((a, b) => a.getTime() - b.getTime());\n    console.log(`[getUnavailableDates] Found ${unavailableDates.length} unavailable dates for ${propertySlug}.`);\n    // console.log(`[getUnavailableDates] Returning sorted unavailable dates: ${unavailableDates.map(d => format(d, 'yyyy-MM-dd')).join(', ')}`);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished successfully ---`);\n    return unavailableDates;\n\n  } catch (error) {\n    console.error(`❌ Error fetching unavailable dates for property ${propertySlug}:`, error);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished with error ---`);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/sanitize.ts"],"sourcesContent":["// src/lib/sanitize.ts\n/**\n * Basic HTML tag stripper.\n * WARNING: This is a very basic sanitizer and may not be sufficient for all use cases.\n * For robust sanitization, consider using a dedicated library like DOMPurify (client-side)\n * or a server-side sanitization library.\n * @param html The HTML string to sanitize.\n * @returns The sanitized string.\n */\nexport function stripHtmlTags(html: string | null | undefined): string {\n  if (html === null || html === undefined) {\n    return '';\n  }\n  // Replace HTML tags with an empty string\n  return String(html).replace(/(<([^>]+)>)/gi, '');\n}\n\n/**\n * Sanitizes text by trimming whitespace and stripping HTML tags.\n * @param text The text string to sanitize.\n * @returns The sanitized string.\n */\nexport function sanitizeText(text: string | null | undefined): string {\n  if (text === null || text === undefined) {\n    return '';\n  }\n  return stripHtmlTags(String(text).trim());\n}\n\n/**\n * A more specific sanitizer for email inputs.\n * For emails, we typically want to trim whitespace but not strip characters\n * like '<' or '>' which might (rarely) be part of a display name in an email string,\n * though for simple email address fields, simple trimming is often enough.\n * HTML tags should still be stripped.\n * @param email The email string to sanitize.\n * @returns The sanitized email string.\n */\nexport function sanitizeEmail(email: string | null | undefined): string {\n  if (email === null || email === undefined) {\n    return '';\n  }\n  // Trim whitespace and strip HTML tags.\n  // Avoid overly aggressive sanitization that might break valid email formats.\n  return stripHtmlTags(String(email).trim());\n}\n\n/**\n * A specific sanitizer for phone number inputs.\n * Often involves stripping non-numeric characters except for a leading '+'.\n * This example is basic and might need adjustment based on expected phone formats.\n * @param phone The phone number string to sanitize.\n * @returns The sanitized phone number string.\n */\nexport function sanitizePhone(phone: string | null | undefined): string {\n  if (phone === null || phone === undefined) {\n    return '';\n  }\n  // Basic: remove common non-numeric chars except '+' if it's at the start.\n  // This is highly dependent on the desired phone number formats.\n  // For more robust phone number handling, use a library like 'libphonenumber-js'.\n  let sanitized = String(phone).replace(/[^\\d+]/g, ''); // Allow + and digits\n  if (sanitized.startsWith('+')) {\n    sanitized = '+' + sanitized.substring(1).replace(/\\+/g, ''); // Keep only leading +\n  } else {\n    sanitized = sanitized.replace(/\\+/g, ''); // Remove + if not leading\n  }\n  return sanitized;\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;AACtB;;;;;;;CAOC;;;;;;AACM,SAAS,cAAc,IAA+B;IAC3D,IAAI,SAAS,QAAQ,SAAS,WAAW;QACvC,OAAO;IACT;IACA,yCAAyC;IACzC,OAAO,OAAO,MAAM,OAAO,CAAC,iBAAiB;AAC/C;AAOO,SAAS,aAAa,IAA+B;IAC1D,IAAI,SAAS,QAAQ,SAAS,WAAW;QACvC,OAAO;IACT;IACA,OAAO,cAAc,OAAO,MAAM,IAAI;AACxC;AAWO,SAAS,cAAc,KAAgC;IAC5D,IAAI,UAAU,QAAQ,UAAU,WAAW;QACzC,OAAO;IACT;IACA,uCAAuC;IACvC,6EAA6E;IAC7E,OAAO,cAAc,OAAO,OAAO,IAAI;AACzC;AASO,SAAS,cAAc,KAAgC;IAC5D,IAAI,UAAU,QAAQ,UAAU,WAAW;QACzC,OAAO;IACT;IACA,0EAA0E;IAC1E,gEAAgE;IAChE,iFAAiF;IACjF,IAAI,YAAY,OAAO,OAAO,OAAO,CAAC,WAAW,KAAK,qBAAqB;IAC3E,IAAI,UAAU,UAAU,CAAC,MAAM;QAC7B,YAAY,MAAM,UAAU,SAAS,CAAC,GAAG,OAAO,CAAC,OAAO,KAAK,sBAAsB;IACrF,OAAO;QACL,YAAY,UAAU,OAAO,CAAC,OAAO,KAAK,0BAA0B;IACtE;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/couponService.ts"],"sourcesContent":["// src/services/couponService.ts\n'use server';\n\nimport { collection, doc, getDoc, Timestamp, where, query, getDocs, limit } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Client SDK Firestore instance\nimport type { Coupon, SerializableTimestamp } from '@/types';\nimport { parseISO, isWithinInterval, areIntervalsOverlapping } from 'date-fns';\nimport { sanitizeText } from '@/lib/sanitize'; // Import sanitizer\n\n// Helper function to convert SerializableTimestamp to Date or null\nconst toDate = (timestamp: SerializableTimestamp | undefined | null): Date | null => {\n  if (!timestamp) return null;\n  if (timestamp instanceof Date) return timestamp;\n  if (timestamp instanceof Timestamp) return timestamp.toDate();\n  if (typeof timestamp === 'string') {\n    try {\n      return parseISO(timestamp);\n    } catch {\n      return null;\n    }\n  }\n  if (typeof timestamp === 'number') {\n    return new Date(timestamp);\n  }\n  return null;\n};\n\nexport async function validateAndApplyCoupon(\n  couponCodeInput: string, // Renamed to avoid confusion with sanitized version\n  bookingCheckInDate: Date | null,\n  bookingCheckOutDate: Date | null,\n  propertyId?: string | null\n): Promise<{ discountPercentage?: number; error?: string }> {\n  const couponCode = sanitizeText(couponCodeInput); // Sanitize the input code\n\n  if (!couponCode) {\n    return { error: 'Coupon code cannot be empty.' };\n  }\n  if (!bookingCheckInDate || !bookingCheckOutDate || bookingCheckOutDate <= bookingCheckInDate) {\n    return { error: 'Valid booking dates are required to apply a coupon.' };\n  }\n\n  const couponCodeUpper = couponCode.toUpperCase();\n\n  try {\n    const couponsCollection = collection(db, 'coupons');\n    const q = query(couponsCollection, where('code', '==', couponCodeUpper), limit(1));\n    const querySnapshot = await getDocs(q);\n\n    if (querySnapshot.empty) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" not found.`);\n      return { error: 'Invalid coupon code.' };\n    }\n\n    const couponDoc = querySnapshot.docs[0];\n    const couponData = couponDoc.data() as Coupon;\n\n    if (!couponData.isActive) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" is not active.`);\n      return { error: 'Coupon code is no longer active.' };\n    }\n\n    const couponExpiryDate = toDate(couponData.validUntil);\n    const now = new Date();\n    const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    if (couponExpiryDate && couponExpiryDate < todayStart) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" has expired on ${couponExpiryDate.toISOString().split('T')[0]}.`);\n      return { error: 'Coupon code has expired.' };\n    }\n\n    if (typeof couponData.discount !== 'number' || couponData.discount <= 0 || couponData.discount > 100) {\n      console.error(`[Coupon Service] Invalid discount percentage (${couponData.discount}) for coupon \"${couponCodeUpper}\".`);\n      return { error: 'Invalid coupon configuration.' };\n    }\n\n    if (couponData.propertyId && propertyId && couponData.propertyId !== propertyId) {\n      console.warn(`[Coupon Service] Coupon \"${couponCodeUpper}\" is only valid for property ${couponData.propertyId}, but booking is for ${propertyId}.`);\n      return { error: 'Coupon is not valid for this property.' };\n    }\n    if (couponData.propertyId && !propertyId) {\n      console.warn(`[Coupon Service] Coupon \"${couponCodeUpper}\" requires a specific property, but none was provided for the booking.`);\n      return { error: 'Coupon requires a specific property.' };\n    }\n\n    const bookingValidFrom = toDate(couponData.bookingValidFrom);\n    const bookingValidUntil = toDate(couponData.bookingValidUntil);\n\n    if (bookingValidFrom && bookingCheckInDate < bookingValidFrom) {\n      console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is before coupon booking validity start (${bookingValidFrom.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n      return { error: 'Coupon not valid for selected check-in date.' };\n    }\n\n    if (bookingValidUntil) {\n      const validityEndDate = new Date(bookingValidUntil.getFullYear(), bookingValidUntil.getMonth(), bookingValidUntil.getDate(), 23, 59, 59, 999);\n      if (bookingCheckInDate > validityEndDate) {\n        console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is after coupon booking validity end (${bookingValidUntil.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n        return { error: 'Coupon not valid for selected check-in date.' };\n      }\n    }\n\n    if (couponData.exclusionPeriods && Array.isArray(couponData.exclusionPeriods)) {\n      const bookingInterval = { start: bookingCheckInDate, end: new Date(bookingCheckOutDate.getTime() - 1) };\n      for (const period of couponData.exclusionPeriods) {\n        const exclusionStart = toDate(period.start);\n        const exclusionEnd = toDate(period.end);\n        if (exclusionStart && exclusionEnd) {\n          const exclusionInterval = { start: exclusionStart, end: new Date(exclusionEnd.getFullYear(), exclusionEnd.getMonth(), exclusionEnd.getDate(), 23, 59, 59, 999)};\n          if (areIntervalsOverlapping(bookingInterval, exclusionInterval, { inclusive: true })) {\n            console.warn(`[Coupon Service] Booking dates (${bookingCheckInDate.toISOString().split('T')[0]} - ${bookingCheckOutDate.toISOString().split('T')[0]}) overlap with exclusion period (${exclusionStart.toISOString().split('T')[0]} - ${exclusionEnd.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n            return { error: 'Coupon not valid for the selected dates due to an exclusion period.' };\n          }\n        } else {\n          console.warn(`[Coupon Service] Invalid exclusion period found for coupon \"${couponCodeUpper}\":`, period);\n        }\n      }\n    }\n\n    console.log(`[Coupon Service] Coupon code \"${couponCodeUpper}\" validated successfully for the booking dates. Discount: ${couponData.discount}%`);\n    return { discountPercentage: couponData.discount };\n  } catch (error) {\n    console.error(`❌ [Coupon Service] Error validating coupon code \"${couponCodeUpper}\":`, error);\n    return { error: 'Could not validate coupon code. Please try again.' };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1165, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/booking-actions.ts"],"sourcesContent":["// src/app/actions/booking-actions.ts\n\"use server\";\n\nimport { z } from 'zod';\nimport { collection, addDoc, serverTimestamp, Timestamp } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Client SDK\nimport type { Booking, Property } from '@/types';\nimport { revalidatePath } from 'next/cache';\nimport { sanitizeEmail, sanitizePhone, sanitizeText } from '@/lib/sanitize'; // Import sanitizers\n\n// Schema for creating a PENDING booking\nconst CreatePendingBookingSchema = z.object({\n  propertyId: z.string().min(1), // This is the property SLUG now\n  guestInfo: z.object({\n    firstName: z.string().min(1, \"First name is required.\").transform(sanitizeText),\n    lastName: z.string().min(1, \"Last name is required.\").transform(sanitizeText),\n    email: z.string().email(\"Invalid email address.\").transform(sanitizeEmail),\n    phone: z.string().min(1, \"Phone number is required.\").transform(sanitizePhone),\n  }).passthrough(),\n  checkInDate: z.string().datetime(), // ISO string\n  checkOutDate: z.string().datetime(), // ISO string\n  numberOfGuests: z.number().int().positive(),\n  pricing: z.object({\n    baseRate: z.number().nonnegative(),\n    numberOfNights: z.number().int().positive(),\n    cleaningFee: z.number().nonnegative(),\n    extraGuestFee: z.number().nonnegative().optional(),\n    numberOfExtraGuests: z.number().int().nonnegative().optional(),\n    accommodationTotal: z.number().nonnegative(),\n    subtotal: z.number().nonnegative(),\n    taxes: z.number().nonnegative().optional(),\n    discountAmount: z.number().nonnegative().optional(),\n    total: z.number().nonnegative(),\n  }).passthrough(),\n  status: z.literal('pending'),\n  appliedCouponCode: z.string().trim().toUpperCase().nullable().optional().transform(val => val ? sanitizeText(val) : null),\n});\n\ntype CreatePendingBookingInput = z.infer<typeof CreatePendingBookingSchema>;\n\nexport async function createPendingBookingAction(\n  input: CreatePendingBookingInput\n): Promise<{ bookingId?: string; error?: string }> {\n  const validationResult = CreatePendingBookingSchema.safeParse(input);\n\n  if (!validationResult.success) {\n    const errorMessages = validationResult.error.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ');\n    console.error(\"[Action createPendingBookingAction] Validation Error:\", errorMessages);\n    return { error: `Invalid pending booking data: ${errorMessages}` };\n  }\n\n  const {\n    propertyId,\n    guestInfo, // Already sanitized by Zod transform\n    checkInDate: checkInStr,\n    checkOutDate: checkOutStr,\n    numberOfGuests,\n    pricing,\n    status,\n    appliedCouponCode, // Already sanitized by Zod transform\n  } = validationResult.data;\n\n  try {\n    const bookingsCollection = collection(db, 'bookings');\n    const checkIn = new Date(checkInStr);\n    const checkOut = new Date(checkOutStr);\n\n    const bookingData: Omit<Booking, 'id' | 'paymentInfo'> = {\n      propertyId: propertyId,\n      guestInfo, // Sanitized guestInfo\n      checkInDate: Timestamp.fromDate(checkIn),\n      checkOutDate: Timestamp.fromDate(checkOut),\n      numberOfGuests,\n      pricing,\n      status: 'pending',\n      appliedCouponCode: appliedCouponCode ?? null, // Sanitized appliedCouponCode\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n      paymentInfo: {\n        stripePaymentIntentId: '',\n        amount: pricing.total,\n        status: 'pending',\n        paidAt: null,\n      },\n      source: 'website-pending',\n    };\n\n    const docRef = await addDoc(bookingsCollection, bookingData);\n    return { bookingId: docRef.id };\n  } catch (error) {\n    console.error(`❌ [Action createPendingBookingAction] Error creating pending booking:`, error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    if (errorMessage.includes('PERMISSION_DENIED')) {\n      return { error: 'Permission denied. Could not create pending booking.' };\n    }\n    if (errorMessage.includes('invalid data') || errorMessage.includes('Unsupported field value')) {\n      return { error: `Failed to create pending booking due to invalid data. Please check input values. Details: ${errorMessage.split(' (')[0]}` };\n    }\n    return { error: `Failed to create pending booking: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/create-checkout-session.ts"],"sourcesContent":["\n\"use server\";\n\nimport type { Property } from '@/types';\nimport { headers } from 'next/headers';\nimport Stripe from 'stripe';\n\nconst stripeSecretKey = process.env.STRIPE_SECRET_KEY;\nif (!stripeSecretKey) {\n  throw new Error('STRIPE_SECRET_KEY is not set in environment variables.');\n}\n\nconst stripe = new Stripe(stripeSecretKey);\n\ninterface CreateCheckoutSessionInput {\n  property: Property; // Property object still needed for other details\n  checkInDate: string; // ISO string format\n  checkOutDate: string; // ISO string format\n  numberOfGuests: number;\n  totalPrice: number; // FINAL price in dollars (after discount)\n  numberOfNights: number;\n  // Optional guest info now expected\n  guestFirstName?: string;\n  guestLastName?: string;\n  guestEmail?: string; // Pass guest email if available\n  // Optional coupon info\n  appliedCouponCode?: string;\n  discountPercentage?: number;\n  // Optional pending booking ID\n  pendingBookingId?: string; // Added to link Stripe session to pending booking\n}\n\nexport async function createCheckoutSession(input: CreateCheckoutSessionInput): Promise<{ sessionId?: string; sessionUrl?: string | null; error?: string }> {\n  const {\n    property, // Contains slug and other details\n    checkInDate,\n    checkOutDate,\n    numberOfGuests,\n    totalPrice,\n    numberOfNights,\n    guestEmail,\n    guestFirstName,\n    guestLastName,\n    appliedCouponCode,\n    discountPercentage,\n    pendingBookingId, // Get the pending booking ID\n  } = input;\n\n  // Await the headers call\n  const headersList = headers(); // Await headers() call\n  const origin = headersList.get('origin') || 'http://localhost:9002';\n\n  const numberOfExtraGuests = Math.max(0, numberOfGuests - property.baseOccupancy);\n\n  // --- Prepare metadata ---\n  const metadata: Stripe.MetadataParam = {\n    propertyId: property.slug, // Use SLUG as the identifier in metadata\n    propertyName: property.name,\n    checkInDate: checkInDate,\n    checkOutDate: checkOutDate,\n    numberOfGuests: String(numberOfGuests),\n    numberOfNights: String(numberOfNights),\n    totalPrice: String(totalPrice),\n    cleaningFee: String(property.cleaningFee),\n    pricePerNight: String(property.pricePerNight),\n    baseOccupancy: String(property.baseOccupancy),\n    extraGuestFee: String(property.extraGuestFee),\n    numberOfExtraGuests: String(numberOfExtraGuests),\n    guestFirstName: guestFirstName || '',\n    guestLastName: guestLastName || '',\n    // Add pendingBookingId to metadata\n    pendingBookingId: pendingBookingId || '', // Include if available\n    // userId: loggedInUserId || '', // Add user ID if available\n  };\n\n  if (appliedCouponCode && discountPercentage !== undefined) {\n    metadata.appliedCouponCode = appliedCouponCode;\n    metadata.discountPercentage = String(discountPercentage);\n  }\n\n  // --- Construct Success URL ---\n  // Keep success URL simple, rely on webhook and booking ID for confirmation logic\n  const success_url = `${origin}/booking/success?session_id={CHECKOUT_SESSION_ID}${pendingBookingId ? `&booking_id=${pendingBookingId}` : ''}`; // Optionally pass booking ID\n  const cancel_url = `${origin}/booking/cancel?property_slug=${property.slug}${pendingBookingId ? `&booking_id=${pendingBookingId}` : ''}`; // Pass booking ID to cancel if needed\n\n  try {\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: `${property.name} (${numberOfNights} nights, ${numberOfGuests} guests)${appliedCouponCode ? ` - Coupon: ${appliedCouponCode}` : ''}`,\n              description: `Booking from ${new Date(checkInDate).toLocaleDateString()} to ${new Date(checkOutDate).toLocaleDateString()}. Ref: ${pendingBookingId || 'N/A'}`, // Add ref\n              images: [property.images?.find(img => img.isFeatured)?.url || property.images?.[0]?.url || ''], // Use optional chaining\n            },\n            unit_amount: Math.round(totalPrice * 100),\n          },\n          quantity: 1,\n        },\n      ],\n      mode: 'payment',\n      success_url: success_url,\n      cancel_url: cancel_url,\n      customer_email: guestEmail,\n      phone_number_collection: { enabled: true,}, // Keep phone collection\n      metadata: metadata, // Pass the prepared metadata including propertyId (slug) and pendingBookingId\n    });\n\n    if (!session.id || !session.url) { // Check for session URL as well\n        throw new Error('Failed to create Stripe session or missing session URL.');\n    }\n\n    // Link session to pending booking if ID provided\n    if (pendingBookingId && session.payment_intent) {\n        // You might want to update the pending booking with the payment_intent ID here\n        // This provides another link between the booking and the payment attempt.\n        // Example (requires an update action):\n        // await updatePendingBookingWithPaymentIntent(pendingBookingId, session.payment_intent as string);\n        console.log(`[createCheckoutSession] Stripe session ${session.id} created, linked to pending booking ${pendingBookingId} via metadata. Payment Intent: ${session.payment_intent}`);\n    }\n\n    // Return both sessionId and sessionUrl\n    return { sessionId: session.id, sessionUrl: session.url };\n  } catch (error) {\n    console.error('Error creating Stripe Checkout session:', error);\n    return { error: `Failed to create checkout session: ${error instanceof Error ? error.message : String(error)}` };\n  }\n}\n\n// Optional helper action (if needed)\n// async function updatePendingBookingWithPaymentIntent(bookingId: string, paymentIntentId: string) {\n//   try {\n//     const bookingRef = doc(db, 'bookings', bookingId);\n//     await updateDoc(bookingRef, {\n//       'paymentInfo.stripePaymentIntentId': paymentIntentId,\n//       updatedAt: serverTimestamp(),\n//     });\n//     console.log(`[updatePendingBooking] Updated booking ${bookingId} with Payment Intent ID: ${paymentIntentId}`);\n//   } catch (error) {\n//     console.error(`[updatePendingBooking] Error updating booking ${bookingId} with Payment Intent ID:`, error);\n//     // Handle error appropriately, maybe log it or notify admin\n//   }\n// }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1506, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/generic-header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/generic-header.tsx <module evaluation>\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,mEACA","debugId":null}},
    {"offset": {"line": 1520, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/generic-header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/generic-header.tsx\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,+CACA","debugId":null}},
    {"offset": {"line": 1534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1544, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/availability-check.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AvailabilityCheck = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvailabilityCheck() from the server but AvailabilityCheck is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/availability-check.tsx <module evaluation>\",\n    \"AvailabilityCheck\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+EACA","debugId":null}},
    {"offset": {"line": 1558, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/availability-check.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AvailabilityCheck = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvailabilityCheck() from the server but AvailabilityCheck is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/availability-check.tsx\",\n    \"AvailabilityCheck\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2DACA","debugId":null}},
    {"offset": {"line": 1572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1582, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 1598, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1627, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1687, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/footer.tsx"],"sourcesContent":["\nimport Link from 'next/link';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Facebook, Instagram, Twitter } from 'lucide-react'; // Add social icons\n\nexport function Footer() {\n  return (\n    <footer className=\"border-t bg-muted/50 pt-16 pb-8\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 mb-12\">\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"font-semibold mb-4 text-foreground\">Quick Links</h4>\n            <nav className=\"flex flex-col gap-2 text-sm text-muted-foreground\">\n              <Link href=\"/\" className=\"hover:text-foreground\">Home</Link>\n              <Link href=\"#experience\" className=\"hover:text-foreground\">Experience</Link> {/* Assuming section IDs */}\n              <Link href=\"#features\" className=\"hover:text-foreground\">Features</Link>\n              <Link href=\"#location\" className=\"hover:text-foreground\">Location</Link>\n              <Link href=\"#testimonials\" className=\"hover:text-foreground\">Reviews</Link>\n            </nav>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h4 className=\"font-semibold mb-4 text-foreground\">Contact Us</h4>\n            <address className=\"not-italic text-sm text-muted-foreground space-y-1\">\n              {/* Add actual contact info or link */}\n              <p>info@prahovachalet.com</p> {/* Placeholder */}\n              <p>+40 123 456 789</p> {/* Placeholder */}\n              <p>Comarnic, Prahova, Romania</p> {/* Placeholder */}\n            </address>\n          </div>\n\n           {/* Social Media */}\n           <div>\n             <h4 className=\"font-semibold mb-4 text-foreground\">Follow Us</h4>\n             <div className=\"flex gap-4 text-muted-foreground\">\n               <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:text-primary\"><Facebook size={20} /></a>\n               <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:text-primary\"><Instagram size={20} /></a>\n               <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:text-primary\"><Twitter size={20} /></a>\n             </div>\n           </div>\n\n           {/* Newsletter Signup */}\n          <div>\n            <h4 className=\"font-semibold mb-4 text-foreground\">Stay Updated</h4>\n            <p className=\"text-sm text-muted-foreground mb-3\">Get special offers and updates.</p>\n            <form className=\"flex gap-2\">\n              <Input type=\"email\" placeholder=\"Enter your email\" className=\"bg-background\" />\n              <Button type=\"submit\" variant=\"secondary\" size=\"sm\">Subscribe</Button>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"border-t border-border pt-8 text-center text-xs text-muted-foreground md:flex md:items-center md:justify-between\">\n          <p>&copy; {new Date().getFullYear()} Prahova Mountain Chalet. All rights reserved.</p> {/* Update name */}\n          <nav className=\"mt-4 flex justify-center gap-4 md:mt-0\">\n            <Link href=\"/privacy\" className=\"hover:text-foreground\">Privacy Policy</Link> {/* Add links if needed */}\n            <Link href=\"/terms\" className=\"hover:text-foreground\">Terms of Service</Link>\n          </nav>\n        </div>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,gWAA6D,mBAAmB;AAAhF;AAAA;;;;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqC;;;;;;8CACnD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAI,WAAU;sDAAwB;;;;;;sDACjD,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAc,WAAU;sDAAwB;;;;;;wCAAiB;sDAC5E,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAY,WAAU;sDAAwB;;;;;;sDACzD,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAY,WAAU;sDAAwB;;;;;;sDACzD,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAgB,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;sCAKjE,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqC;;;;;;8CACnD,8OAAC;oCAAQ,WAAU;;sDAEjB,8OAAC;sDAAE;;;;;;wCAA0B;sDAC7B,8OAAC;sDAAE;;;;;;wCAAmB;sDACtB,8OAAC;sDAAE;;;;;;wCAA8B;;;;;;;;;;;;;sCAKpC,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqC;;;;;;8CACnD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAE,MAAK;4CAAI,QAAO;4CAAS,KAAI;4CAAsB,WAAU;sDAAqB,cAAA,8OAAC,0MAAA,CAAA,WAAQ;gDAAC,MAAM;;;;;;;;;;;sDACrG,8OAAC;4CAAE,MAAK;4CAAI,QAAO;4CAAS,KAAI;4CAAsB,WAAU;sDAAqB,cAAA,8OAAC,4MAAA,CAAA,YAAS;gDAAC,MAAM;;;;;;;;;;;sDACtG,8OAAC;4CAAE,MAAK;4CAAI,QAAO;4CAAS,KAAI;4CAAsB,WAAU;sDAAqB,cAAA,8OAAC,wMAAA,CAAA,UAAO;gDAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;sCAKzG,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAqC;;;;;;8CACnD,8OAAC;oCAAE,WAAU;8CAAqC;;;;;;8CAClD,8OAAC;oCAAK,WAAU;;sDACd,8OAAC,iIAAA,CAAA,QAAK;4CAAC,MAAK;4CAAQ,aAAY;4CAAmB,WAAU;;;;;;sDAC7D,8OAAC,kIAAA,CAAA,SAAM;4CAAC,MAAK;4CAAS,SAAQ;4CAAY,MAAK;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;8BAK1D,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;gCAAE;gCAAQ,IAAI,OAAO,WAAW;gCAAG;;;;;;;wBAAkD;sCACtF,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAW,WAAU;8CAAwB;;;;;;gCAAqB;8CAC7E,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAS,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlE","debugId":null}},
    {"offset": {"line": 2032, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/initial-booking-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InitialBookingForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call InitialBookingForm() from the server but InitialBookingForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/initial-booking-form.tsx <module evaluation>\",\n    \"InitialBookingForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iFACA","debugId":null}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/initial-booking-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InitialBookingForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call InitialBookingForm() from the server but InitialBookingForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/initial-booking-form.tsx\",\n    \"InitialBookingForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6DACA","debugId":null}},
    {"offset": {"line": 2060, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2070, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 2112, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/homepage/hero-section.tsx"],"sourcesContent":["import Image from 'next/image';\nimport { InitialBookingForm } from '@/components/booking/initial-booking-form';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\nimport { Star, Home } from 'lucide-react'; // Added Home icon for placeholder\nimport type { Property } from '@/types'; // Still needed for the form prop\nimport { heroSchema } from '@/lib/overridesSchemas'; // Import the schema\nimport { z } from 'zod';\nimport { cn } from '@/lib/utils'; // Import cn for conditional classes\n\n// Infer the type from the Zod schema\ntype HeroData = z.infer<typeof heroSchema> & {\n  // Add properties that are not in the schema but are passed to the component\n  ratings?: { average: number; count: number };\n  bookingFormProperty: Property;\n  'data-ai-hint'?: string;\n};\n\ninterface HeroSectionProps {\n  heroData: HeroData;\n}\n\nexport function HeroSection({ heroData }: HeroSectionProps) {\n  const {\n    backgroundImage: backgroundImageUrl, // Renamed from backgroundImage\n    price: pricePerNight, // Renamed from price\n    showRating,\n    showBookingForm = true, // Default to true if not specified\n    bookingForm,\n    ratings,\n    bookingFormProperty,\n    'data-ai-hint': dataAiHint,\n  } = heroData;\n\n  // Default values for position and size\n  const position = bookingForm?.position || 'center';\n  const size = bookingForm?.size || 'large'; // Default to 'large' if not specified\n\n  // Map position strings to flexbox classes for the overlay container\n  const positionClasses: { [key: string]: string } = {\n    center: 'justify-center items-center',\n    top: 'justify-center items-start pt-20', // Add padding-top for top position\n    bottom: 'justify-center items-end pb-10', // Add padding-bottom for bottom position\n    'top-left': 'justify-start items-start pt-20',\n    'top-right': 'justify-end items-start pt-20',\n    'bottom-left': 'justify-start items-end pb-10',\n    'bottom-right': 'justify-end items-end pb-10',\n  };\n\n  // Classes for the Card based on size\n  const cardSizeClasses = cn(\n    \"w-full bg-background/90 backdrop-blur-sm shadow-xl border-border\",\n    size === 'large' ? 'max-w-4xl p-3 md:p-4' : 'max-w-sm p-3 md:p-4'\n  );\n\n  // Container classes for CardHeader and CardContent based on size\n  const innerContainerClasses = cn(\n    size === 'large' ? 'flex flex-col md:flex-row md:items-end md:gap-4' : 'space-y-4'\n  );\n\n  // Header classes based on size\n  const headerClasses = cn(\n    \"p-0\", // Remove default padding\n    size === 'large' ? 'mb-0 md:flex-grow-0 md:shrink-0' : 'mb-4 text-center' // Adjust flex properties and margin for large\n  );\n\n  // Price/Rating container classes based on size\n  const priceRatingContainerClasses = cn(\n    \"flex items-center gap-2 mb-2 flex-wrap\", // Common classes\n    size === 'large' ? 'justify-start' : 'justify-center' // Adjust justification for large\n  );\n\n  // Content classes based on size\n  const contentClasses = cn(\n     \"p-0\", // Remove default padding\n     size === 'large' ? 'md:flex-grow' : '' // Allow form to grow in large layout\n  );\n\n\n  return (\n    <section className=\"relative h-[60vh] md:h-[75vh] w-full\" id=\"hero\">\n      {/* Background Image */}\n      {backgroundImageUrl ? (\n        <Image\n          src={backgroundImageUrl}\n          alt={`Featured image of ${bookingFormProperty.name}`}\n          fill\n          style={{ objectFit: 'cover' }}\n          priority\n          className=\"brightness-75\"\n          data-ai-hint={dataAiHint || 'property hero image'}\n        />\n      ) : (\n        <div className=\"absolute inset-0 bg-muted flex items-center justify-center\">\n          <Home className=\"h-24 w-24 text-muted-foreground/30\" />\n        </div>\n      )}\n\n      {/* Overlay Content - Apply positioning classes */}\n      {showBookingForm && (\n          <div className={cn(\"absolute inset-0 flex p-4 md:p-8\", positionClasses[position])}>\n            {/* Booking Form Card - Apply size-specific classes */}\n            <Card className={cardSizeClasses} id=\"booking\">\n                {/* Inner container for header and content, layout changes based on size */}\n                 <div className={innerContainerClasses}>\n                    {/* Card Header for Price and Rating */}\n                    <CardHeader className={headerClasses}>\n                        <div className={priceRatingContainerClasses}>\n                            {pricePerNight !== undefined && pricePerNight > 0 && (\n                                <Badge variant=\"secondary\" className=\"text-base md:text-lg px-3 py-1\">\n                                ${pricePerNight}<span className=\"text-xs font-normal ml-1\">/night</span>\n                                </Badge>\n                            )}\n                            {showRating && ratings && ratings.count > 0 && (\n                                <Badge variant=\"secondary\" className=\"text-base md:text-lg px-3 py-1 flex items-center\">\n                                <Star className=\"h-4 w-4 mr-1 text-amber-500 fill-amber-500\" />\n                                {ratings.average.toFixed(1)}\n                                <span className=\"text-xs font-normal ml-1\">({ratings.count} reviews)</span>\n                                </Badge>\n                            )}\n                        </div>\n                    </CardHeader>\n\n                    {/* Card Content for the Booking Form */}\n                    <CardContent className={contentClasses}>\n                        {/* Pass the size prop down to the form */}\n                        <InitialBookingForm property={bookingFormProperty} size={size} />\n                    </CardContent>\n                </div>\n            </Card>\n          </div>\n      )}\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,gVAA2C,kCAAkC;AAA7E;AAIA,wMAAkC,oCAAoC;;;;;;;;AAc/D,SAAS,YAAY,EAAE,QAAQ,EAAoB;IACxD,MAAM,EACJ,iBAAiB,kBAAkB,EACnC,OAAO,aAAa,EACpB,UAAU,EACV,kBAAkB,IAAI,EACtB,WAAW,EACX,OAAO,EACP,mBAAmB,EACnB,gBAAgB,UAAU,EAC3B,GAAG;IAEJ,uCAAuC;IACvC,MAAM,WAAW,aAAa,YAAY;IAC1C,MAAM,OAAO,aAAa,QAAQ,SAAS,sCAAsC;IAEjF,oEAAoE;IACpE,MAAM,kBAA6C;QACjD,QAAQ;QACR,KAAK;QACL,QAAQ;QACR,YAAY;QACZ,aAAa;QACb,eAAe;QACf,gBAAgB;IAClB;IAEA,qCAAqC;IACrC,MAAM,kBAAkB,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACvB,oEACA,SAAS,UAAU,yBAAyB;IAG9C,iEAAiE;IACjE,MAAM,wBAAwB,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAC7B,SAAS,UAAU,oDAAoD;IAGzE,+BAA+B;IAC/B,MAAM,gBAAgB,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACrB,OACA,SAAS,UAAU,oCAAoC,mBAAmB,8CAA8C;;IAG1H,+CAA+C;IAC/C,MAAM,8BAA8B,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACnC,0CACA,SAAS,UAAU,kBAAkB,iBAAiB,iCAAiC;;IAGzF,gCAAgC;IAChC,MAAM,iBAAiB,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACrB,OACA,SAAS,UAAU,iBAAiB,GAAG,qCAAqC;;IAI/E,qBACE,8OAAC;QAAQ,WAAU;QAAuC,IAAG;;YAE1D,mCACC,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK,CAAC,kBAAkB,EAAE,oBAAoB,IAAI,EAAE;gBACpD,IAAI;gBACJ,OAAO;oBAAE,WAAW;gBAAQ;gBAC5B,QAAQ;gBACR,WAAU;gBACV,gBAAc,cAAc;;;;;qCAG9B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;;;;;;YAKnB,iCACG,8OAAC;gBAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,oCAAoC,eAAe,CAAC,SAAS;0BAE9E,cAAA,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAW;oBAAiB,IAAG;8BAEhC,cAAA,8OAAC;wBAAI,WAAW;;0CAEb,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAW;0CACnB,cAAA,8OAAC;oCAAI,WAAW;;wCACX,kBAAkB,aAAa,gBAAgB,mBAC5C,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;4CAAY,WAAU;;gDAAiC;gDACpE;8DAAc,8OAAC;oDAAK,WAAU;8DAA2B;;;;;;;;;;;;wCAG9D,cAAc,WAAW,QAAQ,KAAK,GAAG,mBACtC,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;4CAAY,WAAU;;8DACrC,8OAAC,kMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDACf,QAAQ,OAAO,CAAC,OAAO,CAAC;8DACzB,8OAAC;oDAAK,WAAU;;wDAA2B;wDAAE,QAAQ,KAAK;wDAAC;;;;;;;;;;;;;;;;;;;;;;;;0CAOvE,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAW;0CAEpB,cAAA,8OAAC,2JAAA,CAAA,qBAAkB;oCAAC,UAAU;oCAAqB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjF","debugId":null}},
    {"offset": {"line": 2389, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/homepage/experience-section.tsx"],"sourcesContent":["import { Mountain, Users, Leaf, Map } from 'lucide-react'; // Import appropriate icons\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { cn } from '@/lib/utils';\n\n// Define a type for the icon names we expect\ntype IconName = 'Mountain' | 'Users' | 'Leaf' | 'Map' | string; // Allow string for flexibility\n\ninterface Highlight {\n  icon: IconName;\n  title: string;\n  description: string;\n}\n\ninterface ExperienceSectionProps {\n  title: string;\n  welcomeText: string;\n  highlights: Highlight[];\n}\n\n// Map icon names to actual Lucide components\nconst iconMap: { [key in IconName]: React.ElementType } = {\n  Mountain: Mountain,\n  Users: Users,\n  Leaf: Leaf,\n  Map: Map,\n  // Add more mappings as needed\n};\n\nexport function ExperienceSection({ title, welcomeText, highlights }: ExperienceSectionProps) {\n  // Don't render if required props are missing\n  if (!title || !welcomeText || !highlights || highlights.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"py-16 md:py-24 bg-secondary/50\" id=\"experience\"> {/* Added ID */}\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-3xl mx-auto text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold tracking-tight text-foreground mb-4\">\n            {title}\n          </h2>\n          <p className=\"text-lg text-muted-foreground\">\n            {welcomeText}\n          </p>\n        </div>\n\n        <div className=\"grid gap-8\" style={{ gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))' }}>\n          {highlights.map((highlight, index) => {\n            const IconComponent = iconMap[highlight.icon] || Leaf; // Default to Leaf icon if not found\n            return (\n              // Apply text-center to the Card itself\n              <Card key={index} className=\"text-center border-border hover:shadow-lg transition-shadow duration-300\">\n                 {/* Ensure CardHeader centers its items (icon and title) */}\n                <CardHeader className=\"items-center\">\n                   <div className=\"mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-primary/10 text-primary\">\n                        <IconComponent className=\"h-6 w-6\" />\n                   </div>\n                  <CardTitle className=\"text-xl font-semibold text-foreground\">\n                    {highlight.title}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {/* Ensure CardContent text is centered (already achieved by parent text-center) */}\n                  <p className=\"text-muted-foreground text-sm\">\n                    {highlight.description}\n                  </p>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}"],"names":[],"mappings":";;;;AAAA,gWAA2D,2BAA2B;AAAtF;AAAA;AAAA;AACA;;;;AAkBA,6CAA6C;AAC7C,MAAM,UAAoD;IACxD,UAAU,0MAAA,CAAA,WAAQ;IAClB,OAAO,oMAAA,CAAA,QAAK;IACZ,MAAM,kMAAA,CAAA,OAAI;IACV,KAAK,gMAAA,CAAA,MAAG;AAEV;AAEO,SAAS,kBAAkB,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAA0B;IAC1F,6CAA6C;IAC7C,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,cAAc,WAAW,MAAM,KAAK,GAAG;QACpE,OAAO;IACT;IAEA,qBACE,8OAAC;QAAQ,WAAU;QAAiC,IAAG;;YAAa;0BAClE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CACX;;;;;;0CAEH,8OAAC;gCAAE,WAAU;0CACV;;;;;;;;;;;;kCAIL,8OAAC;wBAAI,WAAU;wBAAa,OAAO;4BAAE,qBAAqB;wBAAuC;kCAC9F,WAAW,GAAG,CAAC,CAAC,WAAW;4BAC1B,MAAM,gBAAgB,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,kMAAA,CAAA,OAAI,EAAE,oCAAoC;4BAC3F,OACE,uCAAuC;0CACvC,8OAAC,gIAAA,CAAA,OAAI;gCAAa,WAAU;;kDAE1B,8OAAC,gIAAA,CAAA,aAAU;wCAAC,WAAU;;0DACnB,8OAAC;gDAAI,WAAU;0DACV,cAAA,8OAAC;oDAAc,WAAU;;;;;;;;;;;0DAE/B,8OAAC,gIAAA,CAAA,YAAS;gDAAC,WAAU;0DAClB,UAAU,KAAK;;;;;;;;;;;;kDAGpB,8OAAC,gIAAA,CAAA,cAAW;kDAEV,cAAA,8OAAC;4CAAE,WAAU;sDACV,UAAU,WAAW;;;;;;;;;;;;+BAbjB;;;;;wBAkBf;;;;;;;;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 2533, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/homepage/host-introduction.tsx"],"sourcesContent":["import Image from 'next/image';\nimport { User } from 'lucide-react'; // Import a fallback icon\n\ninterface HostInfo {\n  name: string;\n  imageUrl?: string | null; // Make optional\n  welcomeMessage: string;\n  backstory: string;\n  'data-ai-hint'?: string;\n}\n\ninterface HostIntroductionProps {\n  host: HostInfo; // Accept the HostInfo object directly\n}\n\nexport function HostIntroduction({ host }: HostIntroductionProps) {\n  // Don't render if required host info is missing\n  if (!host || !host.name || !host.welcomeMessage || !host.backstory) {\n    return null;\n  }\n\n  return (\n    <section className=\"py-16 md:py-24 bg-background\" id=\"host\"> {/* Added ID */}\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex flex-col md:flex-row items-center gap-8 md:gap-12 max-w-4xl mx-auto\">\n          {/* Host Photo */}\n          <div className=\"flex-shrink-0 w-40 h-40 md:w-48 md:h-48 relative rounded-full overflow-hidden shadow-lg border-4 border-primary/20 bg-muted\">\n            {host.imageUrl ? (\n              <Image\n                src={host.imageUrl}\n                alt={`Photo of host, ${host.name}`}\n                fill\n                style={{ objectFit: 'cover' }}\n                className=\"rounded-full\"\n                data-ai-hint={host['data-ai-hint'] || 'host portrait friendly'}\n              />\n            ) : (\n              <div className=\"flex items-center justify-center h-full w-full\">\n                <User className=\"h-20 w-20 text-muted-foreground/50\" /> {/* Fallback Icon */}\n              </div>\n            )}\n          </div>\n\n          {/* Host Message */}\n          <div className=\"text-center md:text-left\">\n            <h3 className=\"text-2xl md:text-3xl font-semibold text-foreground mb-4\">\n              A Warm Welcome from {host.name}\n            </h3>\n            <p className=\"text-lg text-muted-foreground mb-4 italic\">\n              \"{host.welcomeMessage}\"\n            </p>\n            <p className=\"text-muted-foreground\">\n              {host.backstory}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA,gVAAqC,yBAAyB;;;;AAcvD,SAAS,iBAAiB,EAAE,IAAI,EAAyB;IAC9D,gDAAgD;IAChD,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,cAAc,IAAI,CAAC,KAAK,SAAS,EAAE;QAClE,OAAO;IACT;IAEA,qBACE,8OAAC;QAAQ,WAAU;QAA+B,IAAG;;YAAO;0BAC1D,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACZ,KAAK,QAAQ,iBACZ,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAK,KAAK,QAAQ;gCAClB,KAAK,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;gCAClC,IAAI;gCACJ,OAAO;oCAAE,WAAW;gCAAQ;gCAC5B,WAAU;gCACV,gBAAc,IAAI,CAAC,eAAe,IAAI;;;;;qDAGxC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAuC;;;;;;;;;;;;sCAM7D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;;wCAA0D;wCACjD,KAAK,IAAI;;;;;;;8CAEhC,8OAAC;oCAAE,WAAU;;wCAA4C;wCACrD,KAAK,cAAc;wCAAC;;;;;;;8CAExB,8OAAC;oCAAE,WAAU;8CACV,KAAK,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7B","debugId":null}},
    {"offset": {"line": 2658, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/homepage/unique-features.tsx"],"sourcesContent":["import { Button } from '@/components/ui/button';\nimport Link from 'next/link';\nimport Image from 'next/image'; // Assuming you might use images later\nimport { Star } from 'lucide-react'; // Fallback icon\n\ninterface Feature {\n  icon?: string; // Optional icon name (from overrides)\n  title: string;\n  description: string;\n  image?: string | null; // Optional image URL\n  'data-ai-hint'?: string; // Optional AI hint for image generation\n}\n\ninterface UniqueFeaturesProps {\n  features: Feature[]; // Accept the features array directly\n}\n\nexport function UniqueFeatures({ features }: UniqueFeaturesProps) {\n  // Don't render if no features are provided\n  if (!features || features.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"py-16 md:py-24 bg-secondary/50\" id=\"features\"> {/* Added ID */}\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-3xl mx-auto text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold tracking-tight text-foreground mb-4\">\n            Make Your Stay Unforgettable\n          </h2>\n          <p className=\"text-lg text-muted-foreground\">\n            Discover the special touches that set our property apart.\n          </p>\n        </div>\n\n        <div className=\"grid gap-8\" style={{ gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))' }}>\n          {features.map((feature, index) => (\n            // Apply text-center to the card container\n            <div key={index} className=\"flex flex-col items-center text-center p-6 bg-card rounded-lg shadow-md border border-border\">\n              {/* Feature Image or Icon - Use mx-auto to center block elements */}\n              <div className=\"mb-4 h-40 w-full relative rounded-lg overflow-hidden bg-muted mx-auto\">\n                 {feature.image ? (\n                     <Image\n                         src={feature.image}\n                         alt={feature.title}\n                         fill\n                         style={{objectFit: 'cover'}}\n                         className=\"rounded-lg\"\n                         data-ai-hint={feature['data-ai-hint'] || 'feature detail amenity'}\n                     />\n                 ) : (\n                      <div className=\"flex items-center justify-center h-full w-full\">\n                         {/* Placeholder Icon - ideally map feature.icon to a Lucide icon */}\n                         <Star className=\"h-12 w-12 text-muted-foreground/50\" />\n                     </div>\n                 )}\n              </div>\n              <h3 className=\"text-xl font-semibold text-foreground mb-2\">{feature.title}</h3>\n              <p className=\"text-muted-foreground text-sm\">\n                {feature.description}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        {/* Optional: Link to a full amenities list or details page */}\n        {/* <div className=\"text-center mt-12\">\n           <Link href=\"#gallery\" passHref>\n             <Button size=\"lg\">Explore All Amenities</Button>\n           </Link>\n        </div> */}\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA,4NAAgC,sCAAsC;AACtE,gVAAqC,gBAAgB;;;;AAc9C,SAAS,eAAe,EAAE,QAAQ,EAAuB;IAC9D,2CAA2C;IAC3C,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;QACtC,OAAO;IACT;IAEA,qBACE,8OAAC;QAAQ,WAAU;QAAiC,IAAG;;YAAW;0BAChE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAqE;;;;;;0CAGnF,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;kCAK/C,8OAAC;wBAAI,WAAU;wBAAa,OAAO;4BAAE,qBAAqB;wBAAuC;kCAC9F,SAAS,GAAG,CAAC,CAAC,SAAS,QACtB,0CAA0C;0CAC1C,8OAAC;gCAAgB,WAAU;;kDAEzB,8OAAC;wCAAI,WAAU;kDACX,QAAQ,KAAK,iBACV,8OAAC,6HAAA,CAAA,UAAK;4CACF,KAAK,QAAQ,KAAK;4CAClB,KAAK,QAAQ,KAAK;4CAClB,IAAI;4CACJ,OAAO;gDAAC,WAAW;4CAAO;4CAC1B,WAAU;4CACV,gBAAc,OAAO,CAAC,eAAe,IAAI;;;;;iEAG5C,8OAAC;4CAAI,WAAU;sDAEZ,cAAA,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;;;;;;;;;;;kDAI3B,8OAAC;wCAAG,WAAU;kDAA8C,QAAQ,KAAK;;;;;;kDACzE,8OAAC;wCAAE,WAAU;kDACV,QAAQ,WAAW;;;;;;;+BArBd;;;;;;;;;;;;;;;;;;;;;;AAoCtB","debugId":null}},
    {"offset": {"line": 2794, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/homepage/location-highlights.tsx"],"sourcesContent":["\nimport { MapPin, Map as MapIcon } from 'lucide-react'; // Added MapIcon\nimport Image from 'next/image';\n\ninterface Location {\n    city?: string; // Make optional as it comes from property object\n    state?: string; // Make optional\n    country?: string; // Make optional\n    // Add coordinates if needed for an embedded map\n}\n\ninterface Attraction {\n    name: string;\n    description: string;\n    distance?: string; // Add distance field\n    image?: string | null; // Optional image\n     'data-ai-hint'?: string; // Optional AI hint for image generation\n}\n\ninterface LocationHighlightsProps {\n    title: string; // Add title prop\n    propertyLocation: Location; // Base location info\n    attractions: Attraction[]; // Attractions from overrides\n}\n\nexport function LocationHighlights({ title, propertyLocation, attractions }: LocationHighlightsProps) {\n    // Don't render if required info is missing\n    if (!title || !propertyLocation || !attractions || attractions.length === 0) {\n        return null;\n    }\n\n    return (\n        <section className=\"py-16 md:py-24 bg-background\" id=\"location\"> {/* Added ID */}\n            <div className=\"container mx-auto px-4\">\n                 <div className=\"max-w-3xl mx-auto text-center mb-12\">\n                    <h2 className=\"text-3xl md:text-4xl font-bold tracking-tight text-foreground mb-4\">\n                        {title} {/* Use title prop */}\n                    </h2>\n                    {propertyLocation.city && propertyLocation.state && (\n                        <p className=\"text-lg text-muted-foreground mb-4\">\n                        Nestled in {propertyLocation.city}, {propertyLocation.state}, our property offers easy access to stunning natural wonders and historical sites.\n                        </p>\n                    )}\n                     {/* Placeholder for Map */}\n                    <div className=\"aspect-video bg-muted rounded-lg flex items-center justify-center my-8 max-w-2xl mx-auto border border-border\">\n                        <MapIcon className=\"h-12 w-12 text-muted-foreground/50\" />\n                         {/* TODO: Implement an actual map embed here */}\n                    </div>\n                    <p className=\"text-lg text-muted-foreground\">\n                       Discover these nearby attractions:\n                    </p>\n                </div>\n\n\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8\">\n                    {attractions.map((attraction, index) => (\n                        <div key={index} className=\"flex flex-col items-center text-center p-4 bg-card rounded-lg shadow-md border border-border\">\n                             {/* Attraction Image */}\n                            <div className=\"mb-4 h-40 w-full relative rounded-lg overflow-hidden bg-muted\">\n                                {attraction.image ? (\n                                    <Image\n                                        src={attraction.image}\n                                        alt={attraction.name}\n                                        fill\n                                        style={{objectFit: 'cover'}}\n                                        className=\"rounded-lg\"\n                                        data-ai-hint={attraction['data-ai-hint'] || 'landmark nature attraction'}\n                                    />\n                                ) : (\n                                     <div className=\"flex items-center justify-center h-full w-full\">\n                                         <MapPin className=\"h-12 w-12 text-muted-foreground/50\" />\n                                     </div>\n                                )}\n                             </div>\n                            <h3 className=\"text-lg font-semibold text-foreground mb-1\">{attraction.name}</h3>\n                             {attraction.distance && (\n                                 <p className=\"text-xs text-muted-foreground mb-2\">{attraction.distance}</p>\n                             )}\n                            <p className=\"text-muted-foreground text-sm flex-grow\"> {/* Added flex-grow */}\n                                {attraction.description}\n                            </p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </section>\n    );\n}\n"],"names":[],"mappings":";;;;AACA,6VAAuD,gBAAgB;AAAvE;AACA;;;;AAuBO,SAAS,mBAAmB,EAAE,KAAK,EAAE,gBAAgB,EAAE,WAAW,EAA2B;IAChG,2CAA2C;IAC3C,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,eAAe,YAAY,MAAM,KAAK,GAAG;QACzE,OAAO;IACX;IAEA,qBACI,8OAAC;QAAQ,WAAU;QAA+B,IAAG;;YAAW;0BAC5D,8OAAC;gBAAI,WAAU;;kCACV,8OAAC;wBAAI,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;;oCACT;oCAAM;;;;;;;4BAEV,iBAAiB,IAAI,IAAI,iBAAiB,KAAK,kBAC5C,8OAAC;gCAAE,WAAU;;oCAAqC;oCACtC,iBAAiB,IAAI;oCAAC;oCAAG,iBAAiB,KAAK;oCAAC;;;;;;;0CAIhE,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC,gMAAA,CAAA,MAAO;oCAAC,WAAU;;;;;;;;;;;0CAGvB,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;kCAMjD,8OAAC;wBAAI,WAAU;kCACV,YAAY,GAAG,CAAC,CAAC,YAAY,sBAC1B,8OAAC;gCAAgB,WAAU;;kDAEvB,8OAAC;wCAAI,WAAU;kDACV,WAAW,KAAK,iBACb,8OAAC,6HAAA,CAAA,UAAK;4CACF,KAAK,WAAW,KAAK;4CACrB,KAAK,WAAW,IAAI;4CACpB,IAAI;4CACJ,OAAO;gDAAC,WAAW;4CAAO;4CAC1B,WAAU;4CACV,gBAAc,UAAU,CAAC,eAAe,IAAI;;;;;iEAG/C,8OAAC;4CAAI,WAAU;sDACX,cAAA,8OAAC,0MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;;;;;;;;;;;kDAI/B,8OAAC;wCAAG,WAAU;kDAA8C,WAAW,IAAI;;;;;;oCACzE,WAAW,QAAQ,kBAChB,8OAAC;wCAAE,WAAU;kDAAsC,WAAW,QAAQ;;;;;;kDAE3E,8OAAC;wCAAE,WAAU;;4CAA0C;4CAClD,WAAW,WAAW;;;;;;;;+BAvBrB;;;;;;;;;;;;;;;;;;;;;;AA+BlC","debugId":null}},
    {"offset": {"line": 2969, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/homepage/testimonials-section.tsx"],"sourcesContent":["\nimport Image from 'next/image';\nimport { Star, StarHalf, UserCircle } from 'lucide-react'; // Added UserCircle\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent } from '@/components/ui/card';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\n\ninterface Review {\n  id?: string; // Make optional if not always present\n  name: string;\n  date?: string; // Add date field\n  rating: number;\n  text: string; // Renamed from comment for consistency\n  imageUrl?: string | null; // Optional guest image\n   'data-ai-hint'?: string; // Optional AI hint for image generation\n}\n\ninterface TestimonialsData {\n  title: string; // Title for the section\n  overallRating: number; // Overall rating for the property\n  reviews: Review[]; // Array of review objects\n}\n\ninterface TestimonialsSectionProps {\n  testimonials: TestimonialsData; // Accept the structured data\n}\n\n// Helper function to render stars\nconst renderStars = (rating: number) => {\n  const fullStars = Math.floor(rating);\n  const halfStar = rating % 1 >= 0.5;\n  const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);\n  const stars = [];\n\n  for (let i = 0; i < fullStars; i++) {\n    stars.push(<Star key={`full-${i}`} className=\"h-5 w-5 text-amber-400 fill-amber-400\" />);\n  }\n  if (halfStar) {\n    stars.push(<StarHalf key=\"half\" className=\"h-5 w-5 text-amber-400 fill-amber-400\" />);\n  }\n  for (let i = 0; i < emptyStars; i++) {\n    stars.push(<Star key={`empty-${i}`} className=\"h-5 w-5 text-amber-200 fill-amber-200\" />);\n  }\n  return stars;\n};\n\nexport function TestimonialsSection({ testimonials }: TestimonialsSectionProps) {\n  // Don't render if no testimonials data or no reviews\n  if (!testimonials || !testimonials.reviews || testimonials.reviews.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"py-16 md:py-24 bg-secondary/50\" id=\"testimonials\"> {/* Added ID */}\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-3xl mx-auto text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold tracking-tight text-foreground mb-4\">\n             {testimonials.title || \"What Our Guests Say\"} {/* Use title from props */}\n          </h2>\n          {testimonials.overallRating > 0 && (\n             <div className=\"flex items-center justify-center gap-2\">\n                <Badge variant=\"secondary\" className=\"text-lg px-3 py-1\">\n                 Overall Rating: {testimonials.overallRating.toFixed(1)} / 5\n                </Badge>\n                <div className=\"flex\">\n                 {renderStars(testimonials.overallRating)}\n                </div>\n            </div>\n          )}\n\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {testimonials.reviews.slice(0, 3).map((review, index) => ( // Show first 3 reviews\n            <Card key={review.id || index} className=\"flex flex-col border-border\"> {/* Use index as fallback key */}\n              <CardContent className=\"p-6 flex-grow flex flex-col\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"flex-shrink-0 w-12 h-12 relative rounded-full overflow-hidden mr-4 border-2 border-primary/20 bg-muted\">\n                    {review.imageUrl ? (\n                        <Image\n                            src={review.imageUrl}\n                            alt={`Photo of ${review.name}`}\n                            fill\n                            style={{ objectFit: 'cover' }}\n                            className=\"rounded-full\"\n                            data-ai-hint={review['data-ai-hint'] || 'guest portrait'}\n                        />\n                    ) : (\n                         <div className=\"flex items-center justify-center h-full w-full\">\n                             <UserCircle className=\"h-8 w-8 text-muted-foreground/50\" /> {/* Fallback Icon */}\n                         </div>\n                    )}\n                  </div>\n                  <div>\n                    <p className=\"font-semibold text-foreground\">{review.name}</p>\n                     {review.date && <p className=\"text-xs text-muted-foreground\">{review.date}</p>} {/* Display date */}\n                    <div className=\"flex mt-1\">\n                       {renderStars(review.rating)}\n                    </div>\n                  </div>\n                </div>\n                <p className=\"text-muted-foreground text-sm italic flex-grow\">\n                  \"{review.text}\"\n                </p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n         {/* TODO: Add a link to a dedicated reviews page if one exists */}\n         {/* <div className=\"text-center mt-12\">\n           <Link href=\"/reviews\" passHref>\n             <Button variant=\"outline\">See All Reviews</Button>\n           </Link>\n         </div> */}\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA,gVAA2D,mBAAmB;AAA9E;AAAA;AACA;AACA;;;;;;AAwBA,kCAAkC;AAClC,MAAM,cAAc,CAAC;IACnB,MAAM,YAAY,KAAK,KAAK,CAAC;IAC7B,MAAM,WAAW,SAAS,KAAK;IAC/B,MAAM,aAAa,IAAI,YAAY,CAAC,WAAW,IAAI,CAAC;IACpD,MAAM,QAAQ,EAAE;IAEhB,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,IAAK;QAClC,MAAM,IAAI,eAAC,8OAAC,kMAAA,CAAA,OAAI;YAAmB,WAAU;WAAvB,CAAC,KAAK,EAAE,GAAG;;;;;IACnC;IACA,IAAI,UAAU;QACZ,MAAM,IAAI,eAAC,8OAAC,8MAAA,CAAA,WAAQ;YAAY,WAAU;WAAjB;;;;;IAC3B;IACA,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;QACnC,MAAM,IAAI,eAAC,8OAAC,kMAAA,CAAA,OAAI;YAAoB,WAAU;WAAxB,CAAC,MAAM,EAAE,GAAG;;;;;IACpC;IACA,OAAO;AACT;AAEO,SAAS,oBAAoB,EAAE,YAAY,EAA4B;IAC5E,qDAAqD;IACrD,IAAI,CAAC,gBAAgB,CAAC,aAAa,OAAO,IAAI,aAAa,OAAO,CAAC,MAAM,KAAK,GAAG;QAC/E,OAAO;IACT;IAEA,qBACE,8OAAC;QAAQ,WAAU;QAAiC,IAAG;;YAAe;0BACpE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;;oCACV,aAAa,KAAK,IAAI;oCAAsB;;;;;;;4BAE/C,aAAa,aAAa,GAAG,mBAC3B,8OAAC;gCAAI,WAAU;;kDACZ,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;wCAAY,WAAU;;4CAAoB;4CACvC,aAAa,aAAa,CAAC,OAAO,CAAC;4CAAG;;;;;;;kDAExD,8OAAC;wCAAI,WAAU;kDACb,YAAY,aAAa,aAAa;;;;;;;;;;;;;;;;;;kCAOhD,8OAAC;wBAAI,WAAU;kCACZ,aAAa,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,sBAC7C,8OAAC,gIAAA,CAAA,OAAI;gCAA0B,WAAU;;oCAA8B;kDACrE,8OAAC,gIAAA,CAAA,cAAW;wCAAC,WAAU;;0DACrB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;kEACZ,OAAO,QAAQ,iBACZ,8OAAC,6HAAA,CAAA,UAAK;4DACF,KAAK,OAAO,QAAQ;4DACpB,KAAK,CAAC,SAAS,EAAE,OAAO,IAAI,EAAE;4DAC9B,IAAI;4DACJ,OAAO;gEAAE,WAAW;4DAAQ;4DAC5B,WAAU;4DACV,gBAAc,MAAM,CAAC,eAAe,IAAI;;;;;iFAG3C,8OAAC;4DAAI,WAAU;;8EACX,8OAAC,kNAAA,CAAA,aAAU;oEAAC,WAAU;;;;;;gEAAqC;;;;;;;;;;;;kEAItE,8OAAC;;0EACC,8OAAC;gEAAE,WAAU;0EAAiC,OAAO,IAAI;;;;;;4DACvD,OAAO,IAAI,kBAAI,8OAAC;gEAAE,WAAU;0EAAiC,OAAO,IAAI;;;;;;4DAAM;0EAChF,8OAAC;gEAAI,WAAU;0EACX,YAAY,OAAO,MAAM;;;;;;;;;;;;;;;;;;0DAIjC,8OAAC;gDAAE,WAAU;;oDAAiD;oDAC1D,OAAO,IAAI;oDAAC;;;;;;;;;;;;;;+BA5BT,OAAO,EAAE,IAAI;;;;;;;;;;;;;;;;;;;;;;AA2CpC","debugId":null}},
    {"offset": {"line": 3218, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/homepage/call-to-action.tsx"],"sourcesContent":["import { Button } from '@/components/ui/button';\nimport Link from 'next/link';\n\ninterface CallToActionSectionProps {\n    propertySlug: string; // Needed to link to the booking flow or details\n    title: string;\n    description: string;\n    buttonText: string;\n    buttonUrl?: string; // Optional: specific URL or anchor link\n}\n\nexport function CallToActionSection({\n    propertySlug,\n    title,\n    description,\n    buttonText,\n    buttonUrl\n}: CallToActionSectionProps) {\n\n  // Determine the target link: use buttonUrl if provided, otherwise link to booking form on property page\n  const targetHref = buttonUrl || `/properties/${propertySlug}#booking`; // Default to booking section anchor\n\n  // Don't render if required props are missing\n  if (!propertySlug || !title || !description || !buttonText) {\n      return null;\n  }\n\n  return (\n    <section className=\"py-16 md:py-24 bg-gradient-to-r from-primary/80 to-primary\" id=\"cta\"> {/* Added ID */}\n      <div className=\"container mx-auto px-4 text-center text-primary-foreground\">\n        <h2 className=\"text-3xl md:text-4xl font-bold mb-6\">\n          {title}\n        </h2>\n        <p className=\"text-lg mb-8 max-w-2xl mx-auto\">\n          {description}\n        </p>\n        {/* Link to the determined target */}\n         <Link href={targetHref} passHref>\n           <Button size=\"lg\" variant=\"secondary\" className=\"text-primary hover:bg-secondary/90\">\n             {buttonText}\n           </Button>\n         </Link>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAUO,SAAS,oBAAoB,EAChC,YAAY,EACZ,KAAK,EACL,WAAW,EACX,UAAU,EACV,SAAS,EACc;IAEzB,wGAAwG;IACxG,MAAM,aAAa,aAAa,CAAC,YAAY,EAAE,aAAa,QAAQ,CAAC,EAAE,oCAAoC;IAE3G,6CAA6C;IAC7C,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,YAAY;QACxD,OAAO;IACX;IAEA,qBACE,8OAAC;QAAQ,WAAU;QAA6D,IAAG;;YAAM;0BACvF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX;;;;;;kCAEH,8OAAC;wBAAE,WAAU;kCACV;;;;;;kCAGF,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAM;wBAAY,QAAQ;kCAC9B,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAK,SAAQ;4BAAY,WAAU;sCAC7C;;;;;;;;;;;;;;;;;;;;;;;AAMd","debugId":null}},
    {"offset": {"line": 3295, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/gallery-section.tsx"],"sourcesContent":["\n// src/components/property/gallery-section.tsx\nimport Image from 'next/image';\nimport { Home } from 'lucide-react'; // Fallback icon\n\ninterface ImageType {\n    url: string;\n    alt: string;\n    'data-ai-hint'?: string;\n}\n\ninterface GallerySectionProps {\n  title: string; // Add title prop\n  images?: ImageType[]; // Pass the filtered gallery images\n  propertyName: string; // For alt text\n}\n\nexport function GallerySection({ title, images, propertyName }: GallerySectionProps) {\n  if (!images || images.length === 0) {\n    return null; // Don't render if no images\n  }\n\n  return (\n    <section className=\"py-8 md:py-12\" id=\"gallery\">\n      <div className=\"container mx-auto px-4\">\n        <h2 className=\"text-2xl font-semibold text-foreground mb-6\">{title || \"Gallery\"}</h2> {/* Use title prop */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n          {images.map((image, index) => (\n            <div key={index} className=\"relative aspect-[4/3] w-full overflow-hidden rounded-lg shadow-md bg-muted\">\n              <Image\n                src={image.url}\n                alt={image.alt || `Gallery image ${index + 1} of ${propertyName}`}\n                fill\n                style={{ objectFit: \"cover\" }}\n                sizes=\"(max-width: 640px) 100vw, (max-width: 768px) 50vw, 33vw\" // Basic responsive sizes\n                loading=\"lazy\" // Lazy load gallery images\n                className=\"transition-transform duration-300 hover:scale-105\"\n                data-ai-hint={image['data-ai-hint']}\n              />\n            </div>\n          ))}\n           {/* Add more images or a modal viewer if needed */}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AACA,8CAA8C;;;;;AAC9C;;;AAeO,SAAS,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAuB;IACjF,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG;QAClC,OAAO,MAAM,4BAA4B;IAC3C;IAEA,qBACE,8OAAC;QAAQ,WAAU;QAAgB,IAAG;kBACpC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA+C,SAAS;;;;;;gBAAe;8BACrF,8OAAC;oBAAI,WAAU;8BACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC;4BAAgB,WAAU;sCACzB,cAAA,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAK,MAAM,GAAG;gCACd,KAAK,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,cAAc;gCACjE,IAAI;gCACJ,OAAO;oCAAE,WAAW;gCAAQ;gCAC5B,OAAM,0DAA0D,yBAAyB;;gCACzF,SAAQ,OAAO,2BAA2B;;gCAC1C,WAAU;gCACV,gBAAc,KAAK,CAAC,eAAe;;;;;;2BAT7B;;;;;;;;;;;;;;;;;;;;;AAkBtB","debugId":null}},
    {"offset": {"line": 3372, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/property-details-section.tsx"],"sourcesContent":["// src/components/property/property-details-section.tsx\nimport type { Property } from '@/types';\nimport { Users, BedDouble, Bath, Home as HomeIcon } from 'lucide-react'; // Renamed Home to HomeIcon\n\ninterface PropertyDetailsSectionProps {\n  property: Property; // Pass relevant property details\n}\n\nexport function PropertyDetailsSection({ property }: PropertyDetailsSectionProps) {\n  return (\n    <section className=\"py-8 md:py-12\" id=\"details\">\n      <div className=\"container mx-auto px-4\">\n        <h3 className=\"text-xl font-semibold mb-4 text-foreground\">Key Features</h3>\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4 text-sm text-muted-foreground\">\n          {property.maxGuests && (\n             <div className=\"flex items-center\">\n                <Users className=\"h-4 w-4 mr-2 text-primary\" /> Max {property.maxGuests} Guests\n             </div>\n          )}\n           {property.bedrooms && (\n              <div className=\"flex items-center\">\n                 <BedDouble className=\"h-4 w-4 mr-2 text-primary\" /> {property.bedrooms} Bedroom{property.bedrooms > 1 ? 's' : ''}\n              </div>\n            )}\n             {property.beds && (\n                 <div className=\"flex items-center\">\n                     <BedDouble className=\"h-4 w-4 mr-2 text-primary\" /> {property.beds} Bed{property.beds > 1 ? 's' : ''}\n                 </div>\n             )}\n             {property.bathrooms && (\n                 <div className=\"flex items-center\">\n                     <Bath className=\"h-4 w-4 mr-2 text-primary\" /> {property.bathrooms} Bathroom{property.bathrooms > 1 ? 's' : ''}\n                 </div>\n             )}\n           {property.squareFeet && (\n               <div className=\"flex items-center\">\n                   <HomeIcon className=\"h-4 w-4 mr-2 text-primary\" /> {property.squareFeet} sqm\n               </div>\n            )}\n            {/* Add other relevant details here */}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AAEvD,oVAAyE,2BAA2B;AAApG;AAAA;AAAA;;;AAMO,SAAS,uBAAuB,EAAE,QAAQ,EAA+B;IAC9E,qBACE,8OAAC;QAAQ,WAAU;QAAgB,IAAG;kBACpC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA6C;;;;;;8BAC3D,8OAAC;oBAAI,WAAU;;wBACZ,SAAS,SAAS,kBAChB,8OAAC;4BAAI,WAAU;;8CACZ,8OAAC,oMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;gCAA8B;gCAAM,SAAS,SAAS;gCAAC;;;;;;;wBAG5E,SAAS,QAAQ,kBACf,8OAAC;4BAAI,WAAU;;8CACZ,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCAA8B;gCAAE,SAAS,QAAQ;gCAAC;gCAAS,SAAS,QAAQ,GAAG,IAAI,MAAM;;;;;;;wBAGjH,SAAS,IAAI,kBACV,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCAA8B;gCAAE,SAAS,IAAI;gCAAC;gCAAK,SAAS,IAAI,GAAG,IAAI,MAAM;;;;;;;wBAGzG,SAAS,SAAS,kBACf,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAA8B;gCAAE,SAAS,SAAS;gCAAC;gCAAU,SAAS,SAAS,GAAG,IAAI,MAAM;;;;;;;wBAGrH,SAAS,UAAU,kBAChB,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,mMAAA,CAAA,OAAQ;oCAAC,WAAU;;;;;;gCAA8B;gCAAE,SAAS,UAAU;gCAAC;;;;;;;;;;;;;;;;;;;;;;;;AAQ3F","debugId":null}},
    {"offset": {"line": 3523, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/amenities-section.tsx"],"sourcesContent":["// src/components/property/amenities-section.tsx\nimport type { Property } from '@/types';\nimport {\n  Wifi, ParkingCircle, Tv, Utensils, Wind, Home, CheckCircle, MountainSnow, Trees, Building, Snowflake, Flame, WashingMachine // Changed Fireplace to Flame\n} from 'lucide-react'; // Add more icons as needed\n\ninterface AmenitiesSectionProps {\n  amenities?: string[]; // Pass the amenities array\n}\n\n// Map amenity names (lowercase) to icons\nconst amenityIcons: { [key: string]: React.ReactNode } = {\n  wifi: <Wifi className=\"h-4 w-4 mr-1 text-primary\" />,\n  kitchen: <Utensils className=\"h-4 w-4 mr-1 text-primary\" />,\n  parking: <ParkingCircle className=\"h-4 w-4 mr-1 text-primary\" />,\n  tv: <Tv className=\"h-4 w-4 mr-1 text-primary\" />,\n  fireplace: <Flame className=\"h-4 w-4 mr-1 text-primary\" />, // Use Flame icon for fireplace\n  'mountain view': <MountainSnow className=\"h-4 w-4 mr-1 text-primary\" />,\n  garden: <Trees className=\"h-4 w-4 mr-1 text-primary\" />,\n  'air conditioning': <Wind className=\"h-4 w-4 mr-1 text-primary\" />,\n  'washer/dryer': <WashingMachine className=\"h-4 w-4 mr-1 text-primary\" />, // Use WashingMachine icon\n  elevator: <Building className=\"h-4 w-4 mr-1 text-primary\" />,\n  heating: <Snowflake className=\"h-4 w-4 mr-1 text-primary\" />, // Example for heating\n  // Add more specific mappings\n};\n\n\nexport function AmenitiesSection({ amenities }: AmenitiesSectionProps) {\n  if (!amenities || amenities.length === 0) {\n    return null; // Don't render if no amenities\n  }\n\n  return (\n    <section className=\"py-8 md:py-12\" id=\"amenities\">\n      <div className=\"container mx-auto px-4\">\n        <h3 className=\"text-xl font-semibold mb-4 text-foreground\">Amenities</h3>\n        <ul className=\"grid grid-cols-2 sm:grid-cols-3 gap-3 text-sm list-none pl-0 text-muted-foreground\">\n          {amenities.map((amenity) => (\n            <li key={amenity} className=\"flex items-center\">\n              {/* Find icon based on lowercase amenity name, fallback to CheckCircle */}\n              {amenityIcons[amenity.toLowerCase()] || <CheckCircle className=\"h-4 w-4 mr-1 text-primary\" />}\n              {amenity}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;;AAEhD,gVAEuB,2BAA2B;AAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAQA,yCAAyC;AACzC,MAAM,eAAmD;IACvD,oBAAM,8OAAC,kMAAA,CAAA,OAAI;QAAC,WAAU;;;;;;IACtB,uBAAS,8OAAC,0MAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;IAC7B,uBAAS,8OAAC,wNAAA,CAAA,gBAAa;QAAC,WAAU;;;;;;IAClC,kBAAI,8OAAC,8LAAA,CAAA,KAAE;QAAC,WAAU;;;;;;IAClB,yBAAW,8OAAC,oMAAA,CAAA,QAAK;QAAC,WAAU;;;;;;IAC5B,+BAAiB,8OAAC,sNAAA,CAAA,eAAY;QAAC,WAAU;;;;;;IACzC,sBAAQ,8OAAC,oMAAA,CAAA,QAAK;QAAC,WAAU;;;;;;IACzB,kCAAoB,8OAAC,kMAAA,CAAA,OAAI;QAAC,WAAU;;;;;;IACpC,8BAAgB,8OAAC,0NAAA,CAAA,iBAAc;QAAC,WAAU;;;;;;IAC1C,wBAAU,8OAAC,0MAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;IAC9B,uBAAS,8OAAC,4MAAA,CAAA,YAAS;QAAC,WAAU;;;;;;AAEhC;AAGO,SAAS,iBAAiB,EAAE,SAAS,EAAyB;IACnE,IAAI,CAAC,aAAa,UAAU,MAAM,KAAK,GAAG;QACxC,OAAO,MAAM,+BAA+B;IAC9C;IAEA,qBACE,8OAAC;QAAQ,WAAU;QAAgB,IAAG;kBACpC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA6C;;;;;;8BAC3D,8OAAC;oBAAG,WAAU;8BACX,UAAU,GAAG,CAAC,CAAC,wBACd,8OAAC;4BAAiB,WAAU;;gCAEzB,YAAY,CAAC,QAAQ,WAAW,GAAG,kBAAI,8OAAC,2NAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;gCAC9D;;2BAHM;;;;;;;;;;;;;;;;;;;;;AAUrB","debugId":null}},
    {"offset": {"line": 3682, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/rules-section.tsx"],"sourcesContent":["// src/components/property/rules-section.tsx\nimport type { Property } from '@/types';\nimport { ListChecks, CheckCircle, Clock } from 'lucide-react';\n\ninterface RulesSectionProps {\n  houseRules?: string[]; // Pass rules array\n  checkInTime?: string;\n  checkOutTime?: string;\n}\n\nexport function RulesSection({ houseRules, checkInTime, checkOutTime }: RulesSectionProps) {\n   const hasRules = houseRules && houseRules.length > 0;\n   const hasTimes = checkInTime || checkOutTime;\n\n   if (!hasRules && !hasTimes) {\n       return null; // Don't render if no rules or times\n   }\n\n  return (\n    <section className=\"py-8 md:py-12\" id=\"rules\">\n      <div className=\"container mx-auto px-4\">\n\n         {hasRules && (\n             <div className=\"mb-6\">\n                 <h3 className=\"text-xl font-semibold mb-4 text-foreground flex items-center\">\n                   <ListChecks className=\"h-5 w-5 mr-2 text-primary\" /> House Rules\n                 </h3>\n                 <ul className=\"list-none pl-0 space-y-2 text-sm text-muted-foreground\">\n                   {houseRules.map((rule, index) => (\n                     <li key={index} className=\"flex items-start\"> {/* Use items-start for potential multi-line rules */}\n                       <CheckCircle className=\"h-4 w-4 mr-2 text-primary shrink-0 mt-0.5\" />\n                       <span>{rule}</span>\n                     </li>\n                   ))}\n                 </ul>\n             </div>\n         )}\n\n         {hasTimes && (\n              <div>\n                <h3 className=\"text-xl font-semibold mb-3 text-foreground\">Check-in / Check-out</h3>\n                <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-4 text-sm text-muted-foreground\">\n                   {checkInTime && (\n                       <div className=\"flex items-center\">\n                          <Clock className=\"h-4 w-4 mr-1 text-primary\"/> Check-in: {checkInTime}\n                       </div>\n                   )}\n                   {checkOutTime && (\n                       <div className=\"flex items-center\">\n                          <Clock className=\"h-4 w-4 mr-1 text-primary\"/> Check-out: {checkOutTime}\n                       </div>\n                    )}\n                </div>\n              </div>\n         )}\n\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAE5C;AAAA;AAAA;;;AAQO,SAAS,aAAa,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAqB;IACtF,MAAM,WAAW,cAAc,WAAW,MAAM,GAAG;IACnD,MAAM,WAAW,eAAe;IAEhC,IAAI,CAAC,YAAY,CAAC,UAAU;QACxB,OAAO,MAAM,oCAAoC;IACrD;IAED,qBACE,8OAAC;QAAQ,WAAU;QAAgB,IAAG;kBACpC,cAAA,8OAAC;YAAI,WAAU;;gBAEX,0BACG,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC,kNAAA,CAAA,aAAU;oCAAC,WAAU;;;;;;gCAA8B;;;;;;;sCAEtD,8OAAC;4BAAG,WAAU;sCACX,WAAW,GAAG,CAAC,CAAC,MAAM,sBACrB,8OAAC;oCAAe,WAAU;;wCAAmB;sDAC3C,8OAAC,2NAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACvB,8OAAC;sDAAM;;;;;;;mCAFA;;;;;;;;;;;;;;;;gBASpB,0BACI,8OAAC;;sCACC,8OAAC;4BAAG,WAAU;sCAA6C;;;;;;sCAC3D,8OAAC;4BAAI,WAAU;;gCACX,6BACG,8OAAC;oCAAI,WAAU;;sDACZ,8OAAC,oMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;wCAA6B;wCAAY;;;;;;;gCAGhE,8BACG,8OAAC;oCAAI,WAAU;;sDACZ,8OAAC,oMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;wCAA6B;wCAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUrF","debugId":null}},
    {"offset": {"line": 3840, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/map-section.tsx"],"sourcesContent":["// src/components/property/map-section.tsx\nimport type { Property } from '@/types';\nimport { MapPin } from 'lucide-react';\n\ninterface MapSectionProps {\n  location?: Property['location']; // Pass the location object\n}\n\nexport function MapSection({ location }: MapSectionProps) {\n   if (!location) {\n       return null; // Don't render if no location info\n   }\n\n  return (\n    <section className=\"py-8 md:py-12\" id=\"map\">\n      <div className=\"container mx-auto px-4\">\n        <h2 className=\"text-xl font-semibold mb-4 text-foreground\">Location</h2>\n        {location.city && location.state && (\n          <p className=\"text-muted-foreground mb-4\">\n            Located in {location.city}, {location.state}. Exact address provided after booking.\n          </p>\n        )}\n        {/* Placeholder for actual map embed */}\n        <div className=\"aspect-video bg-muted rounded-lg flex items-center justify-center border border-border\">\n          <MapPin className=\"h-12 w-12 text-muted-foreground/50\" />\n           {/* TODO: Replace with Google Maps iframe or Leaflet map */}\n           {/* Example iframe (replace with your actual embed code):\n           <iframe\n             src={`https://www.google.com/maps/embed/v1/place?key=YOUR_API_KEY&q=${location.coordinates?.latitude},${location.coordinates?.longitude}`} // Requires coordinates\n             width=\"100%\"\n             height=\"100%\"\n             style={{ border: 0 }}\n             allowFullScreen={false}\n             loading=\"lazy\"\n             referrerPolicy=\"no-referrer-when-downgrade\"\n           ></iframe>\n           */}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;;AAE1C;;;AAMO,SAAS,WAAW,EAAE,QAAQ,EAAmB;IACrD,IAAI,CAAC,UAAU;QACX,OAAO,MAAM,mCAAmC;IACpD;IAED,qBACE,8OAAC;QAAQ,WAAU;QAAgB,IAAG;kBACpC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA6C;;;;;;gBAC1D,SAAS,IAAI,IAAI,SAAS,KAAK,kBAC9B,8OAAC;oBAAE,WAAU;;wBAA6B;wBAC5B,SAAS,IAAI;wBAAC;wBAAG,SAAS,KAAK;wBAAC;;;;;;;8BAIhD,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,0MAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;AAiB5B","debugId":null}},
    {"offset": {"line": 3912, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/contact-section.tsx"],"sourcesContent":["// src/components/property/contact-section.tsx\nimport { Button } from '@/components/ui/button';\n\ninterface ContactSectionProps {\n  // Define props if needed, e.g., host contact details if they vary\n  // hostEmail?: string;\n  // hostPhone?: string;\n}\n\nexport function ContactSection({ /* pass props if needed */ }: ContactSectionProps) {\n  return (\n    <section className=\"py-8 md:py-12\" id=\"contact\">\n      <div className=\"container mx-auto px-4\">\n        <h2 className=\"text-xl font-semibold mb-4 text-foreground\">Contact Host</h2>\n        <p className=\"text-muted-foreground mb-4\">\n          Have questions about the property or your stay? Reach out to the host.\n        </p>\n        {/* TODO: Implement actual contact functionality (e.g., form, mailto link) */}\n        <Button variant=\"outline\">Contact Owner</Button>\n        {/* Example mailto link:\n         <a href={`mailto:${hostEmail || 'default@example.com'}`}>\n           <Button variant=\"outline\">Contact Owner via Email</Button>\n         </a>\n        */}\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,8CAA8C;;;;;AAC9C;;;AAQO,SAAS,eAAe,EAAmD;IAChF,qBACE,8OAAC;QAAQ,WAAU;QAAgB,IAAG;kBACpC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA6C;;;;;;8BAC3D,8OAAC;oBAAE,WAAU;8BAA6B;;;;;;8BAI1C,8OAAC,kIAAA,CAAA,SAAM;oBAAC,SAAQ;8BAAU;;;;;;;;;;;;;;;;;AASlC","debugId":null}},
    {"offset": {"line": 3969, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iEACA","debugId":null}},
    {"offset": {"line": 3983, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6CACA","debugId":null}},
    {"offset": {"line": 3997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 4007, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/property-page-layout.tsx"],"sourcesContent":["// src/components/property/property-page-layout.tsx\nimport Script from 'next/script'; // Import next/script\nimport type { Property, WebsiteTemplate, PropertyOverrides } from '@/types';\nimport { Header } from '@/components/generic-header';\nimport { Footer } from '@/components/footer';\nimport { HeroSection } from '@/components/homepage/hero-section';\nimport { ExperienceSection } from '@/components/homepage/experience-section';\nimport { HostIntroduction } from '@/components/homepage/host-introduction';\nimport { UniqueFeatures } from '@/components/homepage/unique-features';\nimport { LocationHighlights } from '@/components/homepage/location-highlights';\nimport { TestimonialsSection } from '@/components/homepage/testimonials-section';\nimport { CallToActionSection } from '@/components/homepage/call-to-action';\nimport { GallerySection } from './gallery-section';\nimport { PropertyDetailsSection } from './property-details-section';\nimport { AmenitiesSection } from './amenities-section';\nimport { RulesSection } from './rules-section';\nimport { MapSection } from './map-section';\nimport { ContactSection } from './contact-section';\nimport { Separator } from '@/components/ui/separator';\nimport { heroSchema } from '@/lib/overridesSchemas'; // For HeroData type inference\n\ninterface PropertyPageLayoutProps {\n  property: Property;\n  template: WebsiteTemplate;\n  overrides: PropertyOverrides; // Ensure overrides are always passed, even if empty\n}\n\nexport function PropertyPageLayout({ property, template, overrides }: PropertyPageLayoutProps) {\n    const { slug, name, location, pricePerNight, ratings, amenities, checkInTime, checkOutTime, houseRules, analytics } = property;\n    const { homepage = [], defaults = {} } = template;\n\n    const visibleBlocks = overrides?.visibleBlocks || homepage.map(b => b.id);\n\n    const getMergedBlockData = (blockId: string, blockType: string): any => {\n        const overrideData = overrides?.[blockId as keyof PropertyOverrides];\n        const defaultData = defaults?.[blockId];\n\n        if (blockId === 'features' || blockId === 'attractions' || blockId === 'images') {\n             return overrideData !== undefined ? overrideData : (defaultData || []);\n        }\n        if (blockId === 'testimonials') {\n             const overrideReviews = (overrideData as PropertyOverrides['testimonials'])?.reviews;\n             const defaultReviews = (defaultData as any)?.reviews;\n             return {\n                 ...defaultData,\n                 ...overrideData,\n                 reviews: overrideReviews !== undefined ? overrideReviews : (defaultReviews || [])\n             };\n        }\n         if (blockId === 'hero') {\n            const mergedHero = { ...defaultData, ...overrideData } as z.infer<typeof heroSchema>;\n             if (overrideData?.bookingForm || defaultData?.bookingForm) {\n                 mergedHero.bookingForm = {\n                     ...defaultData?.bookingForm,\n                     ...overrideData?.bookingForm,\n                 };\n             }\n             return mergedHero;\n        }\n        return { ...defaultData, ...overrideData };\n    };\n\n    const mergedHeroData = getMergedBlockData('hero', 'hero');\n    const heroData = {\n        backgroundImage: mergedHeroData?.backgroundImage || property.images?.find(img => img.isFeatured)?.url || property.images?.[0]?.url || null,\n        'data-ai-hint': mergedHeroData?.['data-ai-hint'] || property.images?.find(img => img.isFeatured)?.['data-ai-hint'] || property.images?.[0]?.['data-ai-hint'],\n        price: property.pricePerNight,\n        ratings: property.ratings,\n        bookingFormProperty: property,\n        showRating: mergedHeroData?.showRating,\n        showBookingForm: mergedHeroData?.showBookingForm,\n        title: mergedHeroData?.title,\n        subtitle: mergedHeroData?.subtitle,\n        bookingForm: mergedHeroData?.bookingForm,\n    };\n\n    const mergedExperienceData = getMergedBlockData('experience', 'experience');\n    const experienceData = {\n        title: mergedExperienceData?.title || \"Experience Our Property\",\n        description: mergedExperienceData?.description || \"Discover the unique charm and comfort of your stay.\",\n        highlights: mergedExperienceData?.highlights || [],\n    };\n\n    const mergedHostData = getMergedBlockData('host', 'host');\n    const hostData = {\n        name: mergedHostData?.name || \"Your Host\",\n        imageUrl: mergedHostData?.image || null,\n        description: mergedHostData?.description || \"We're delighted to welcome you!\",\n        backstory: mergedHostData?.backstory || \"We strive to make your stay exceptional.\",\n        'data-ai-hint': mergedHostData?.['data-ai-hint'] || 'host portrait friendly',\n    };\n\n    const featuresData = getMergedBlockData('features', 'features');\n\n    const mergedLocationData = getMergedBlockData('location', 'location');\n    const attractionsData = getMergedBlockData('attractions', 'attractions');\n    const locationHighlightsData = {\n         title: mergedLocationData?.title || \"Explore the Surroundings\",\n         propertyLocation: location,\n         attractions: attractionsData,\n    }\n\n    const mergedTestimonialsData = getMergedBlockData('testimonials', 'testimonials');\n    const testimonialsData = {\n        title: mergedTestimonialsData?.title || \"What Our Guests Say\",\n        overallRating: property.ratings?.average || 0,\n        reviews: mergedTestimonialsData?.reviews || [],\n    };\n\n    const mergedCtaData = getMergedBlockData('cta', 'cta');\n     const ctaData = {\n        title: mergedCtaData?.title || \"Ready for Your Getaway?\",\n        description: mergedCtaData?.description || \"Book your stay today and create unforgettable memories.\",\n        buttonText: mergedCtaData?.buttonText || \"Book Now\",\n        buttonUrl: mergedCtaData?.buttonUrl,\n        propertySlug: slug,\n        backgroundImage: mergedCtaData?.backgroundImage,\n        'data-ai-hint': mergedCtaData?.['data-ai-hint'],\n     };\n\n    const galleryImagesData = getMergedBlockData('images', 'gallery');\n    const galleryImages = galleryImagesData.filter((img: any) => !img.tags?.includes('hero'));\n    const mergedGalleryData = getMergedBlockData('gallery', 'gallery');\n    const galleryData = {\n         title: mergedGalleryData?.title || \"Gallery\",\n         images: galleryImages,\n         propertyName: name,\n    }\n\n    const renderBlock = (block: { id: string; type: string }) => {\n        if (!visibleBlocks.includes(block.id)) {\n            return null;\n        }\n\n        switch (block.type) {\n            case 'hero':\n                return <HeroSection key={block.id} heroData={heroData} />;\n            case 'experience':\n                 if (experienceData.title && experienceData.description && experienceData.highlights.length > 0) {\n                    return <ExperienceSection key={block.id} title={experienceData.title} welcomeText={experienceData.description} highlights={experienceData.highlights} />;\n                 }\n                 return null;\n            case 'host':\n                 if (hostData.name && hostData.description) { // Removed backstory from required check for now\n                     return <HostIntroduction key={block.id} host={{name: hostData.name, welcomeMessage: hostData.description, backstory: hostData.backstory || \"\", imageUrl: hostData.imageUrl, 'data-ai-hint': hostData['data-ai-hint']}} />;\n                 }\n                 return null;\n            case 'features':\n                return featuresData.length > 0 ? <UniqueFeatures key={block.id} features={featuresData} /> : null;\n             case 'location':\n                 return locationHighlightsData.propertyLocation && locationHighlightsData.attractions.length > 0\n                    ? <LocationHighlights key={block.id} {...locationHighlightsData} />\n                    : null;\n             case 'testimonials':\n                  return testimonialsData.reviews.length > 0 ? <TestimonialsSection key={block.id} testimonials={testimonialsData} /> : null;\n            case 'gallery':\n                 return galleryData.images.length > 0 ? <GallerySection key={block.id} {...galleryData} /> : null;\n            case 'details':\n                return <PropertyDetailsSection key={block.id} property={property} />;\n            case 'amenities':\n                 return amenities && amenities.length > 0 ? <AmenitiesSection key={block.id} amenities={amenities} /> : null;\n            case 'rules':\n                 return houseRules || checkInTime || checkOutTime ? <RulesSection key={block.id} houseRules={houseRules} checkInTime={checkInTime} checkOutTime={checkOutTime} /> : null;\n             case 'map':\n                 return location ? <MapSection key={block.id} location={location} /> : null;\n            case 'contact':\n                 return <ContactSection key={block.id} />;\n            case 'cta':\n                 return <CallToActionSection key={block.id} {...ctaData} />;\n            case 'separator':\n                 return <Separator key={block.id} className=\"my-8 md:my-12\" />;\n            default:\n                 console.warn(`Unknown block type \"${block.type}\" for block ID \"${block.id}\".`);\n                return <div key={block.id}>Unsupported block type: {block.type}</div>;\n        }\n    };\n\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n       {analytics?.enabled && analytics.googleAnalyticsId && (\n        <>\n          <Script\n            strategy=\"afterInteractive\"\n            src={`https://www.googletagmanager.com/gtag/js?id=${analytics.googleAnalyticsId}`}\n          />\n          <Script\n            id={`ga-config-${property.slug}`} // Unique ID per property\n            strategy=\"afterInteractive\"\n            dangerouslySetInnerHTML={{\n              __html: `\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n                gtag('config', '${analytics.googleAnalyticsId}', {\n                  page_path: window.location.pathname,\n                });\n              `,\n            }}\n          />\n        </>\n      )}\n       <Header propertyName={name} propertySlug={slug} />\n      <main className=\"flex-grow\">\n         {homepage.map(block => renderBlock(block))}\n      </main>\n       <Footer />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/properties/%5Bslug%5D/page.tsx"],"sourcesContent":["\n// src/app/properties/[slug]/page.tsx\nimport { Suspense } from 'react';\nimport { notFound } from 'next/navigation';\nimport type { Property, WebsiteTemplate, PropertyOverrides } from '@/types';\nimport { PropertyPageLayout } from '@/components/property/property-page-layout';\nimport { collection, doc, getDoc, getDocs, query, where, Timestamp } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Assuming db is correctly initialized\n\n// Function to get core property data by slug (can be reused)\nexport async function getPropertyBySlug(slug: string): Promise<Property | undefined> {\n    if (!slug) {\n        console.warn(\"[getPropertyBySlug] Attempted to fetch property with empty slug.\");\n        return undefined;\n    }\n    const propertyRef = doc(db, 'properties', slug); // Use slug as document ID\n    try {\n        const docSnap = await getDoc(propertyRef);\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n             // Ensure slug is part of the returned object, using the doc ID\n             const propertyData = { id: docSnap.id, slug: docSnap.id, ...data } as Property;\n             // Ensure houseRules is always an array\n             propertyData.houseRules = Array.isArray(propertyData.houseRules) ? propertyData.houseRules : [];\n             return propertyData;\n        } else {\n            console.warn(`[getPropertyBySlug] Property document not found: properties/${slug}`);\n            return undefined;\n        }\n    } catch (error) {\n        console.error(`❌ Error fetching property with slug ${slug}:`, error);\n        return undefined;\n    }\n}\n\n// Function to get website template data (can be reused)\nexport async function getWebsiteTemplate(templateId: string): Promise<WebsiteTemplate | undefined> {\n     if (!templateId) return undefined;\n     const templateRef = doc(db, 'websiteTemplates', templateId);\n     try {\n         const docSnap = await getDoc(templateRef);\n         if (docSnap.exists()) {\n             return { id: docSnap.id, ...docSnap.data() } as WebsiteTemplate;\n         } else {\n             console.warn(`[getWebsiteTemplate] Template document not found: websiteTemplates/${templateId}`);\n             return undefined;\n         }\n     } catch (error) {\n         console.error(`❌ Error fetching website template ${templateId}:`, error);\n         return undefined;\n     }\n}\n\n// Function to get property overrides data (can be reused)\n// TODO: Add Zod validation here after fetching\nexport async function getPropertyOverrides(slug: string): Promise<PropertyOverrides | undefined> {\n     if (!slug) {\n        console.warn(\"[getPropertyOverrides] Attempted to fetch overrides with empty slug.\");\n        return undefined;\n     }\n     const overridesRef = doc(db, 'propertyOverrides', slug); // Use slug as document ID\n     try {\n         const docSnap = await getDoc(overridesRef);\n         if (docSnap.exists()) {\n             // TODO: Use zod.safeParse() here with a combined schema for PropertyOverrides\n             return { id: docSnap.id, ...docSnap.data() } as PropertyOverrides;\n         } else {\n             console.log(`[getPropertyOverrides] No overrides document found for: propertyOverrides/${slug}.`);\n             return undefined; // Return undefined if no overrides exist\n         }\n     } catch (error) {\n         console.error(`❌ Error fetching property overrides for ${slug}:`, error);\n         return undefined;\n     }\n}\n\ninterface PropertyDetailsPageProps {\n  params: { slug: string };\n}\n\n// Optional: Generate static paths if using SSG\n// \"use client\" cannot be used with generateStaticParams\n/*\nexport async function generateStaticParams() {\n    const propertiesCollection = collection(db, 'properties');\n    const snapshot = await getDocs(propertiesCollection);\n    const slugs = snapshot.docs.map(doc => ({ slug: doc.id }));\n    console.log(\"[generateStaticParams] Generating slugs:\", slugs);\n    return slugs;\n}\n*/\n\nexport default async function PropertyDetailsPage({ params }: PropertyDetailsPageProps) {\n    // Await params before using\n    const awaitedParams = await params;\n    const slug = awaitedParams.slug;\n\n    if (!slug) {\n        console.error(\"[PropertyDetailsPage] Slug is missing from params.\");\n        notFound();\n    }\n\n    console.log(`[PropertyDetailsPage] Rendering property: ${slug}`);\n\n    // Fetch all necessary data for the property using the reusable functions\n    const [property, overrides] = await Promise.all([\n        getPropertyBySlug(slug),\n        getPropertyOverrides(slug),\n    ]);\n\n    if (!property) {\n        console.error(`[PropertyDetailsPage] Property \"${slug}\" not found.`);\n        notFound();\n    }\n\n    const template = await getWebsiteTemplate(property.templateId);\n\n    if (!template) {\n        console.error(`[PropertyDetailsPage] Website template \"${property.templateId}\" not found for property \"${slug}\".`);\n        // Decide on fallback behavior - maybe a default template or notFound()\n        notFound();\n    }\n\n    console.log(`[PropertyDetailsPage] Data fetched successfully for ${slug}.`);\n    // console.log(\"[PropertyDetailsPage] Property Data:\", JSON.stringify(property, null, 2));\n    // console.log(\"[PropertyDetailsPage] Template Data:\", JSON.stringify(template, null, 2));\n    // console.log(\"[PropertyDetailsPage] Overrides Data:\", JSON.stringify(overrides, null, 2));\n\n    // Render the property page layout with the fetched data\n    // Ensure overrides are passed correctly, fallback to empty object if undefined/null\n    return (\n        <Suspense fallback={<div>Loading property details...</div>}>\n            <PropertyPageLayout\n                property={property}\n                template={template}\n                overrides={overrides || {}} // Pass overrides or empty object\n            />\n        </Suspense>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/booking/check/%5Bslug%5D/page.tsx"],"sourcesContent":["\n// src/app/booking/check/[slug]/page.tsx\nimport { Suspense } from 'react';\nimport type { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\nimport { Header } from '@/components/generic-header'; // Assuming a generic header\nimport { AvailabilityCheck } from '@/components/booking/availability-check'; // Import the new component\n// Correct import path: Import directly from the file where it's defined\nimport { getPropertyBySlug } from '@/app/properties/[slug]/page';\nimport { db } from '@/lib/firebase'; // Import db for data fetching\nimport { collection, query, where, getDocs } from 'firebase/firestore';\n\ninterface AvailabilityCheckPageProps {\n  params: { slug: string };\n  searchParams: {\n    checkIn?: string;\n    checkOut?: string;\n    // guests?: string; // guests is no longer passed via search params\n  };\n}\n\n// Optional: Function to generate metadata dynamically\nexport async function generateMetadata({ params }: AvailabilityCheckPageProps): Promise<Metadata> {\n  const property = await getPropertyBySlug(params.slug);\n  if (!property) {\n    return { title: 'Availability Check - Not Found' };\n  }\n  return {\n    title: `Check Availability - ${property.name}`,\n    description: `Check booking availability for ${property.name} for your selected dates.`,\n  };\n}\n\n// Main Page Component\nexport default async function AvailabilityCheckPage({ params, searchParams }: AvailabilityCheckPageProps) {\n  // Await the params before using its properties\n  const awaitedParams = await params;\n  const slug = awaitedParams.slug;\n\n  if (!slug) {\n    console.error(\"[AvailabilityCheckPage] Slug is missing from params.\");\n    notFound();\n  }\n\n  const property = await getPropertyBySlug(slug);\n\n  if (!property) {\n    notFound(); // Property slug is invalid\n  }\n\n  // Basic validation for search params (only dates now)\n  // Accessing searchParams directly is the standard pattern in page components\n  const checkIn = searchParams.checkIn;\n  const checkOut = searchParams.checkOut;\n\n  if (!checkIn || !checkOut) {\n    // Handle invalid search params, maybe redirect back or show an error\n    // For now, we can let the AvailabilityCheck component handle it,\n    // or redirect: redirect(`/properties/${params.slug}`);\n    console.warn(\"[AvailabilityCheckPage] Invalid search parameters received:\", searchParams);\n    // Consider rendering an error state within AvailabilityCheck instead of redirecting immediately\n  }\n\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      {/* Use Generic Header for this page */}\n      <Header propertyName={property.name} propertySlug={property.slug}/>\n      <main className=\"flex-grow container py-12 md:py-16\">\n        {/* Wrap AvailabilityCheck in Suspense if it uses useSearchParams directly,\n            but passing props is generally preferred for Server Components */}\n        <Suspense fallback={<div>Loading availability...</div>}>\n          <AvailabilityCheck\n            property={property}\n            initialCheckIn={checkIn}\n            initialCheckOut={checkOut}\n          />\n        </Suspense>\n      </main>\n      {/* Add a generic footer if desired */}\n      {/* <Footer /> */}\n       <footer className=\"border-t bg-muted/50\">\n         <div className=\"container py-4 text-center text-xs text-muted-foreground\">\n           RentalSpot &copy; {new Date().getFullYear()}\n         </div>\n       </footer>\n    </div>\n  );\n}\n\n\n"],"names":[],"mappings":"AACA,wCAAwC;;;;;;AACxC;AAEA;AAAA;AACA,6OAAsD,4BAA4B;AAClF,wQAA6E,2BAA2B;AACxG,wEAAwE;AACxE;;;;;;;AAcO,eAAe,iBAAiB,EAAE,MAAM,EAA8B;IAC3E,MAAM,WAAW,MAAM,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,OAAO,IAAI;IACpD,IAAI,CAAC,UAAU;QACb,OAAO;YAAE,OAAO;QAAiC;IACnD;IACA,OAAO;QACL,OAAO,CAAC,qBAAqB,EAAE,SAAS,IAAI,EAAE;QAC9C,aAAa,CAAC,+BAA+B,EAAE,SAAS,IAAI,CAAC,yBAAyB,CAAC;IACzF;AACF;AAGe,eAAe,sBAAsB,EAAE,MAAM,EAAE,YAAY,EAA8B;IACtG,+CAA+C;IAC/C,MAAM,gBAAgB,MAAM;IAC5B,MAAM,OAAO,cAAc,IAAI;IAE/B,IAAI,CAAC,MAAM;QACT,QAAQ,KAAK,CAAC;QACd,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,MAAM,WAAW,MAAM,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE;IAEzC,IAAI,CAAC,UAAU;QACb,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,KAAK,2BAA2B;IACzC;IAEA,sDAAsD;IACtD,6EAA6E;IAC7E,MAAM,UAAU,aAAa,OAAO;IACpC,MAAM,WAAW,aAAa,QAAQ;IAEtC,IAAI,CAAC,WAAW,CAAC,UAAU;QACzB,qEAAqE;QACrE,iEAAiE;QACjE,uDAAuD;QACvD,QAAQ,IAAI,CAAC,+DAA+D;IAC5E,gGAAgG;IAClG;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,uIAAA,CAAA,SAAM;gBAAC,cAAc,SAAS,IAAI;gBAAE,cAAc,SAAS,IAAI;;;;;;0BAChE,8OAAC;gBAAK,WAAU;0BAGd,cAAA,8OAAC,qMAAA,CAAA,WAAQ;oBAAC,wBAAU,8OAAC;kCAAI;;;;;;8BACvB,cAAA,8OAAC,sJAAA,CAAA,oBAAiB;wBAChB,UAAU;wBACV,gBAAgB;wBAChB,iBAAiB;;;;;;;;;;;;;;;;0BAMtB,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;;wBAA2D;wBACrD,IAAI,OAAO,WAAW;;;;;;;;;;;;;;;;;;AAKpD","debugId":null}}]
}