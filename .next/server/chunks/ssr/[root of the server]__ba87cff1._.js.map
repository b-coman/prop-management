{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/create-checkout-session.ts"],"sourcesContent":["\"use server\";\n\nimport type { Property } from '@/types';\nimport { headers } from 'next/headers';\nimport Stripe from 'stripe';\n\n// Ensure Stripe secret key is set in environment variables\nconst stripeSecretKey = process.env.STRIPE_SECRET_KEY;\nif (!stripeSecretKey) {\n  throw new Error('STRIPE_SECRET_KEY is not set in environment variables.');\n}\n\nconst stripe = new Stripe(stripeSecretKey);\n\ninterface CreateCheckoutSessionInput {\n  property: Property;\n  checkInDate: string; // ISO string format\n  checkOutDate: string; // ISO string format\n  numberOfGuests: number;\n  totalPrice: number; // FINAL price in dollars (after discount)\n  numberOfNights: number;\n  // Optional guest info if available upfront\n  guestFirstName?: string;\n  guestLastName?: string;\n  guestEmail?: string; // Pass guest email if available\n  // Optional coupon info\n  appliedCouponCode?: string;\n  discountPercentage?: number;\n}\n\nexport async function createCheckoutSession(input: CreateCheckoutSessionInput) {\n  const {\n    property,\n    checkInDate,\n    checkOutDate,\n    numberOfGuests,\n    totalPrice, // This is the final price AFTER discount\n    numberOfNights,\n    guestEmail, // Capture guest email if provided\n    guestFirstName,\n    guestLastName,\n    appliedCouponCode, // Get coupon code\n    discountPercentage, // Get discount percentage\n  } = input;\n\n  const origin = headers().get('origin') || 'http://localhost:9002'; // Default for local dev\n\n  // Calculate number of extra guests\n  const numberOfExtraGuests = Math.max(0, numberOfGuests - property.baseOccupancy);\n\n  // --- Prepare metadata ---\n  const metadata: Stripe.MetadataParam = {\n    propertyId: property.id,\n    propertyName: property.name,\n    checkInDate: checkInDate,\n    checkOutDate: checkOutDate,\n    numberOfGuests: String(numberOfGuests),\n    numberOfNights: String(numberOfNights),\n    totalPrice: String(totalPrice), // Final price paid\n    cleaningFee: String(property.cleaningFee),\n    pricePerNight: String(property.pricePerNight),\n    baseOccupancy: String(property.baseOccupancy),\n    extraGuestFee: String(property.extraGuestFee),\n    numberOfExtraGuests: String(numberOfExtraGuests),\n    guestFirstName: guestFirstName || '',\n    guestLastName: guestLastName || '',\n    // userId: loggedInUserId || '', // Add user ID if available\n  };\n\n  // Add coupon info to metadata if applied\n  if (appliedCouponCode && discountPercentage !== undefined) {\n    metadata.appliedCouponCode = appliedCouponCode;\n    metadata.discountPercentage = String(discountPercentage);\n    // Optionally, calculate and add original subtotal and discount amount\n    // const subtotalBeforeDiscount = (property.pricePerNight * numberOfNights) + (property.extraGuestFee * numberOfExtraGuests * numberOfNights) + property.cleaningFee;\n    // const discountAmount = subtotalBeforeDiscount * (discountPercentage / 100);\n    // metadata.subtotalBeforeDiscount = String(subtotalBeforeDiscount);\n    // metadata.discountAmount = String(discountAmount);\n  }\n\n  // --- Construct Success URL with parameters for simulation ---\n  const successUrlParams = new URLSearchParams({\n    session_id: '{CHECKOUT_SESSION_ID}', // Stripe replaces this token\n    // Add params needed for simulation (encode dates)\n    propId: property.id,\n    checkIn: checkInDate,\n    checkOut: checkOutDate,\n    guests: String(numberOfGuests),\n    nights: String(numberOfNights),\n    total: String(totalPrice), // Final price\n    // Include coupon info if applied\n    ...(appliedCouponCode && { coupon: appliedCouponCode }),\n    ...(discountPercentage !== undefined && { discount: String(discountPercentage) }),\n  });\n  const success_url = `${origin}/booking/success?${successUrlParams.toString()}`;\n  const cancel_url = `${origin}/booking/cancel?property_slug=${property.slug}`;\n\n  try {\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: `${property.name} (${numberOfNights} nights, ${numberOfGuests} guests)${appliedCouponCode ? ` - Coupon: ${appliedCouponCode}` : ''}`, // Add coupon info to name\n              description: `Booking from ${new Date(checkInDate).toLocaleDateString()} to ${new Date(checkOutDate).toLocaleDateString()}.`,\n              images: [property.images.find(img => img.isFeatured)?.url || property.images[0]?.url || ''], // Use featured or first image\n            },\n            // Ensure totalPrice is converted to cents correctly\n            unit_amount: Math.round(totalPrice * 100), // Use final price\n          },\n          quantity: 1,\n        },\n      ],\n      mode: 'payment',\n      success_url: success_url, // Use the constructed URL\n      cancel_url: cancel_url,\n       // Include customer email if available, helps Stripe populate customer info\n      customer_email: guestEmail, // Pass guest email to Stripe\n      phone_number_collection: { enabled: true,},\n      // Pass necessary booking details in metadata for the webhook\n      metadata: metadata, // Pass the prepared metadata\n       // payment_intent_data: {\n      //   capture_method: 'automatic', // Or 'manual' if you capture later\n      // },\n    });\n\n    if (!session.id) {\n        throw new Error('Failed to create Stripe session.');\n    }\n\n    return { sessionId: session.id };\n  } catch (error) {\n    console.error('Error creating Stripe Checkout session:', error);\n    // Return a structured error\n    return { error: `Failed to create checkout session: ${error instanceof Error ? error.message : String(error)}` };\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\n// src/lib/firebase.ts\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n// Remove dotenv import - let scripts handle their own env loading if needed outside Next.js context\n// import * as dotenv from 'dotenv';\n// import * as path from 'path';\n// import { getAuth } from \"firebase/auth\"; // Add if using Firebase Auth\n// import { getStorage } from \"firebase/storage\"; // Add if using Firebase Storage\n\n// Load environment variables from .env.local at the project root\n// dotenv.config({ path: path.resolve(process.cwd(), '.env.local') }); // No longer needed here, Next.js handles it\n\n// Your web app's Firebase configuration\n// Loaded from environment variables automatically by Next.js\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  // measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID // Optional: for Analytics\n};\n\n// Remove the checkEnvVars function, as Next.js handles env loading for the app runtime.\n// The script now uses Admin SDK and verifies its own specific requirements.\n/*\nfunction checkEnvVars() {\n    // ... (removed) ...\n}\ncheckEnvVars();\n*/\n\n// Initialize Firebase Client SDK\n// Use getApps() to ensure initialization only happens once within the Next.js app runtime\nlet app;\nif (getApps().length === 0) {\n    // Check if critical client config vars are present before initializing client SDK\n    if (!firebaseConfig.apiKey || !firebaseConfig.projectId) {\n        console.error(\"❌ Client Firebase Config Missing: NEXT_PUBLIC_FIREBASE_API_KEY or NEXT_PUBLIC_FIREBASE_PROJECT_ID is missing in environment variables. Client SDK cannot initialize.\");\n        // Throwing here might break the app build/runtime if env vars aren't set during build phase\n        // Consider logging the error and letting parts of the app fail gracefully if Firebase is needed client-side\n        // throw new Error(\"Missing critical client Firebase configuration. Check environment variables.\");\n    } else {\n        try {\n             app = initializeApp(firebaseConfig);\n             // console.log(\"✅ Firebase Client SDK initialized successfully.\"); // Less verbose logging\n        } catch (initError) {\n            console.error(\"❌ Firebase Client SDK initialization failed:\", initError);\n            // Handle or re-throw the initialization error appropriately\n            // throw initError; // Depending on whether the app can function without Firebase client\n        }\n    }\n} else {\n    app = getApp();\n    // console.log(\"ℹ️ Firebase Client SDK app already initialized.\");\n}\n\n// Initialize Firestore Client SDK only if the app was successfully initialized or retrieved\nlet db;\nif (app) {\n    try {\n        db = getFirestore(app);\n        // console.log(\"✅ Firestore Client SDK initialized successfully.\");\n    } catch (firestoreError) {\n         console.error(\"❌ Firestore Client SDK initialization failed:\", firestoreError);\n         // Handle or re-throw the Firestore initialization error\n    }\n} else {\n     console.error(\"❌ Cannot initialize Firestore Client SDK because Firebase app is not available.\");\n}\n\n// const auth = getAuth(app); // Initialize Auth if needed\n// const storage = getStorage(app); // Initialize Storage if needed\n\n// Export only the client SDK instances needed by the application runtime\nexport { app, db /*, auth, storage */ };\n"],"names":[],"mappings":"AACA,sBAAsB;;;;;AACtB;AAAA;AACA;AAAA;;;AACA,oGAAoG;AACpG,oCAAoC;AACpC,gCAAgC;AAChC,yEAAyE;AACzE,kFAAkF;AAElF,iEAAiE;AACjE,mHAAmH;AAEnH,wCAAwC;AACxC,6DAA6D;AAC7D,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AAEP;AAEA,wFAAwF;AACxF,4EAA4E;AAC5E;;;;;AAKA,GAEA,iCAAiC;AACjC,0FAA0F;AAC1F,IAAI;AACJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IACxB,kFAAkF;IAClF,IAAI,CAAC,eAAe,MAAM,IAAI,CAAC,eAAe,SAAS,EAAE;QACrD,QAAQ,KAAK,CAAC;IACd,4FAA4F;IAC5F,4GAA4G;IAC5G,mGAAmG;IACvG,OAAO;QACH,IAAI;YACC,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,0FAA0F;QAC/F,EAAE,OAAO,WAAW;YAChB,QAAQ,KAAK,CAAC,gDAAgD;QAC9D,4DAA4D;QAC5D,wFAAwF;QAC5F;IACJ;AACJ,OAAO;IACH,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACX,kEAAkE;AACtE;AAEA,4FAA4F;AAC5F,IAAI;AACJ,IAAI,KAAK;IACL,IAAI;QACA,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;IAClB,mEAAmE;IACvE,EAAE,OAAO,gBAAgB;QACpB,QAAQ,KAAK,CAAC,iDAAiD;IAC/D,wDAAwD;IAC7D;AACJ,OAAO;IACF,QAAQ,KAAK,CAAC;AACnB","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/booking-sync.ts"],"sourcesContent":["/**\n * @fileoverview Service functions for synchronizing booking availability with external platforms like Airbnb and Booking.com.\n * IMPORTANT: These functions currently contain placeholder logic and require actual API integration.\n */\n'use server';\n\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Property } from '@/types'; // Assuming Property type includes external IDs\n\n/**\n * Represents the details of an Airbnb listing relevant for sync.\n */\nexport interface AirbnbListing {\n  listingId: string;\n  isAvailable: boolean;\n  pricePerNight: number;\n}\n\n/**\n * Represents the details of a Booking.com listing relevant for sync.\n */\nexport interface BookingComListing {\n  listingId: string;\n  isAvailable: boolean;\n  pricePerNight: number;\n}\n\n/**\n * Fetches property details including external listing IDs.\n *\n * @param propertyId The ID of the property to fetch.\n * @returns The Property object or null if not found.\n */\nexport async function getPropertyForSync(propertyId: string): Promise<Property | null> {\n    const propertyRef = doc(db, 'properties', propertyId);\n    try {\n        const docSnap = await getDoc(propertyRef);\n        if (docSnap.exists()) {\n            return { id: docSnap.id, ...docSnap.data() } as Property;\n        } else {\n            console.warn(`[getPropertyForSync] Property document not found in Firestore: properties/${propertyId}`);\n            return null;\n        }\n    } catch (error) {\n         console.error(`❌ [getPropertyForSync] Error fetching property ${propertyId}:`, error);\n         return null;\n    }\n}\n\n\n/**\n * Asynchronously retrieves Airbnb listing details.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Airbnb API call.\n *\n * @param listingId The Airbnb listing ID.\n * @returns A promise that resolves to an AirbnbListing object.\n */\nexport async function getAirbnbListing(listingId: string): Promise<AirbnbListing> {\n  console.log(`[Sync Placeholder] Fetching Airbnb listing details for ID: ${listingId}`);\n  // TODO: Replace with actual API call to Airbnb.\n  await new Promise(resolve => setTimeout(resolve, 100)); // Simulate network delay\n  return {\n    listingId: listingId,\n    isAvailable: true, // Assume available by default for placeholder\n    pricePerNight: 150, // Example price\n  };\n}\n\n/**\n * Asynchronously retrieves Booking.com listing details.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Booking.com API call.\n *\n * @param listingId The Booking.com listing ID.\n * @returns A promise that resolves to a BookingComListing object.\n */\nexport async function getBookingComListing(listingId: string): Promise<BookingComListing> {\n  console.log(`[Sync Placeholder] Fetching Booking.com listing details for ID: ${listingId}`);\n  // TODO: Replace with actual API call to Booking.com.\n  await new Promise(resolve => setTimeout(resolve, 100)); // Simulate network delay\n  return {\n    listingId: listingId,\n    isAvailable: true, // Assume available by default for placeholder\n    pricePerNight: 160, // Example price\n  };\n}\n\n/**\n * Updates Airbnb listing availability for a specific date range.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Airbnb API call.\n * This simplified version only takes a boolean; a real implementation needs date range parameters.\n *\n * @param listingId The Airbnb listing ID.\n * @param isAvailable The new availability status (true for available, false for blocked).\n * @param checkInDate The start date of the range (optional).\n * @param checkOutDate The end date of the range (optional).\n * @returns A promise that resolves when the update attempt is complete.\n */\nexport async function updateAirbnbListingAvailability(\n    listingId: string,\n    isAvailable: boolean,\n    checkInDate?: Date,\n    checkOutDate?: Date\n): Promise<void> {\n  const dateRangeString = checkInDate && checkOutDate\n    ? ` from ${checkInDate.toISOString().split('T')[0]} to ${checkOutDate.toISOString().split('T')[0]}`\n    : '';\n  console.log(`[Sync Placeholder] Updating Airbnb listing ${listingId} availability to ${isAvailable}${dateRangeString}.`);\n  // TODO: Replace with actual API call to Airbnb, passing the specific date range to block/unblock.\n  await new Promise(resolve => setTimeout(resolve, 150)); // Simulate network delay\n  return;\n}\n\n/**\n * Updates Booking.com listing availability for a specific date range.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Booking.com API call.\n * This simplified version only takes a boolean; a real implementation needs date range parameters.\n *\n * @param listingId The Booking.com listing ID.\n * @param isAvailable The new availability status (true for available, false for blocked).\n * @param checkInDate The start date of the range (optional).\n * @param checkOutDate The end date of the range (optional).\n * @returns A promise that resolves when the update attempt is complete.\n */\nexport async function updateBookingComListingAvailability(\n    listingId: string,\n    isAvailable: boolean,\n    checkInDate?: Date,\n    checkOutDate?: Date\n): Promise<void> {\n   const dateRangeString = checkInDate && checkOutDate\n     ? ` from ${checkInDate.toISOString().split('T')[0]} to ${checkOutDate.toISOString().split('T')[0]}`\n     : '';\n   console.log(`[Sync Placeholder] Updating Booking.com listing ${listingId} availability to ${isAvailable}${dateRangeString}.`);\n  // TODO: Replace with actual API call to Booking.com, passing the specific date range to block/unblock.\n  await new Promise(resolve => setTimeout(resolve, 150)); // Simulate network delay\n  return;\n}\n\n// TODO: Add functions for more granular sync (e.g., update price, minimum stay).\n// TODO: Implement webhook handlers to receive availability updates FROM external platforms.\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;AAGD;AAAA;AACA;;;;;;AA2BO,eAAe,uCAAgB,GAAhB,mBAAmB,UAAkB;IACvD,MAAM,cAAc,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,cAAc;IAC1C,IAAI;QACA,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,QAAQ,MAAM,IAAI;YAClB,OAAO;gBAAE,IAAI,QAAQ,EAAE;gBAAE,GAAG,QAAQ,IAAI,EAAE;YAAC;QAC/C,OAAO;YACH,QAAQ,IAAI,CAAC,CAAC,0EAA0E,EAAE,YAAY;YACtG,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACX,QAAQ,KAAK,CAAC,CAAC,+CAA+C,EAAE,WAAW,CAAC,CAAC,EAAE;QAC/E,OAAO;IACZ;AACJ;AAUO,eAAe,uCAAc,GAAd,iBAAiB,SAAiB;IACtD,QAAQ,GAAG,CAAC,CAAC,2DAA2D,EAAE,WAAW;IACrF,gDAAgD;IAChD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF,OAAO;QACL,WAAW;QACX,aAAa;QACb,eAAe;IACjB;AACF;AASO,eAAe,uCAAkB,GAAlB,qBAAqB,SAAiB;IAC1D,QAAQ,GAAG,CAAC,CAAC,gEAAgE,EAAE,WAAW;IAC1F,qDAAqD;IACrD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF,OAAO;QACL,WAAW;QACX,aAAa;QACb,eAAe;IACjB;AACF;AAaO,eAAe,uCAA6B,GAA7B,gCAClB,SAAiB,EACjB,WAAoB,EACpB,WAAkB,EAClB,YAAmB;IAErB,MAAM,kBAAkB,eAAe,eACnC,CAAC,MAAM,EAAE,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,GACjG;IACJ,QAAQ,GAAG,CAAC,CAAC,2CAA2C,EAAE,UAAU,iBAAiB,EAAE,cAAc,gBAAgB,CAAC,CAAC;IACvH,kGAAkG;IAClG,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF;AACF;AAaO,eAAe,uCAAiC,GAAjC,oCAClB,SAAiB,EACjB,WAAoB,EACpB,WAAkB,EAClB,YAAmB;IAEpB,MAAM,kBAAkB,eAAe,eACnC,CAAC,MAAM,EAAE,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,GACjG;IACJ,QAAQ,GAAG,CAAC,CAAC,gDAAgD,EAAE,UAAU,iBAAiB,EAAE,cAAc,gBAAgB,CAAC,CAAC;IAC7H,uGAAuG;IACvG,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF;AACF,EAEA,iFAAiF;CACjF,4FAA4F;;;IA1GtE;IAwBA;IAkBA;IAsBA;IA0BA;;AA1FA,+OAAA;AAwBA,+OAAA;AAkBA,+OAAA;AAsBA,+OAAA;AA0BA,+OAAA","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/bookingService.ts"],"sourcesContent":["// src/services/bookingService.ts\n'use server'; // Mark this module for server-side execution\n\nimport {\n  collection,\n  addDoc,\n  doc,\n  getDoc,\n  updateDoc,\n  query,\n  where,\n  getDocs,\n  serverTimestamp as clientServerTimestamp, // Rename client timestamp\n  Timestamp as ClientTimestamp, // Rename client timestamp\n  writeBatch as clientWriteBatch, // Rename client batch\n  setDoc as clientSetDoc, // Rename client setDoc\n  QueryConstraint,\n  limit,\n  documentId, // Import documentId for querying by ID\n} from 'firebase/firestore';\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase'; // **** Use Client SDK Firestore instance ****\n// import { dbAdmin } from '@/lib/firebaseAdmin'; // No longer needed\nimport type { Booking, Availability, Property, SerializableTimestamp } from '@/types'; // Import SerializableTimestamp\nimport { differenceInCalendarDays, eachDayOfInterval, format, parse, subDays, startOfMonth, endOfMonth, parseISO } from 'date-fns';\nimport { updateAirbnbListingAvailability, updateBookingComListingAvailability, getPropertyForSync } from './booking-sync';\n\n// Define the structure for creating a booking\n// Aligning pricing with the updated Booking type\n// Export this type so it can be used by the simulation action\nexport type CreateBookingData = Omit<Booking,\n  'id' |\n  'checkInDate' |\n  'checkOutDate' |\n  'createdAt' |\n  'updatedAt' |\n  'paymentInfo' |\n  'pricing' // Pricing structure will be derived but needs explicit fields\n> & {\n  checkInDate: string; // ISO String for input\n  checkOutDate: string; // ISO String for input\n  pricing: { // Explicitly define expected input for pricing calc\n    baseRate: number;\n    numberOfNights: number;\n    cleaningFee: number;\n    extraGuestFee?: number; // From property at time of booking\n    numberOfExtraGuests?: number; // Calculated based on form input\n    accommodationTotal: number; // New field for base + extra guests cost\n    subtotal: number; // New field for accommodation + cleaning\n    taxes?: number; // Still optional\n    discountAmount?: number; // Optional: Amount discounted via coupon\n    total: number; // Final total calculated by the form/client\n  };\n  appliedCouponCode?: string; // Optional: Store the applied coupon code\n  paymentInput: {\n    stripePaymentIntentId: string;\n    amount: number;\n    status: string;\n  };\n};\n\n\n// Define Zod schema for validation - Updated pricing schema\nconst CreateBookingDataSchema = z.object({\n  propertyId: z.string().min(1, { message: 'Property ID is required.' }),\n  guestInfo: z.object({\n    firstName: z.string().min(1, { message: 'Guest first name is required.' }),\n    lastName: z.string().optional(),\n    email: z.string().email({ message: 'Invalid guest email address.' }),\n    phone: z.string().optional(),\n    address: z.string().optional(),\n    city: z.string().optional(),\n    state: z.string().optional(),\n    country: z.string().optional(),\n    zipCode: z.string().optional(),\n    userId: z.string().optional(),\n  }).passthrough(),\n   // Accept ISO string dates for validation\n  checkInDate: z.string().refine(val => !isNaN(Date.parse(val)), { message: 'Invalid check-in date format.' }),\n  checkOutDate: z.string().refine(val => !isNaN(Date.parse(val)), { message: 'Invalid check-out date format.' }),\n  numberOfGuests: z.number().int().positive({ message: 'Number of guests must be positive.' }),\n  pricing: z.object({ // Updated pricing validation\n    baseRate: z.number().nonnegative({ message: 'Base rate cannot be negative.' }), // Allow 0 for free stays? Adjusted to nonnegative\n    numberOfNights: z.number().int().positive({ message: 'Number of nights must be positive.' }),\n    cleaningFee: z.number().nonnegative({ message: 'Cleaning fee cannot be negative.' }),\n    extraGuestFee: z.number().nonnegative({ message: 'Extra guest fee cannot be negative.' }).optional(),\n    numberOfExtraGuests: z.number().int().nonnegative({ message: 'Number of extra guests cannot be negative.' }).optional(),\n    accommodationTotal: z.number().nonnegative({ message: 'Accommodation total cannot be negative.' }), // Adjusted to nonnegative\n    subtotal: z.number().nonnegative({ message: 'Subtotal cannot be negative.' }), // Adjusted to nonnegative\n    taxes: z.number().nonnegative({ message: 'Taxes cannot be negative.' }).optional(),\n    discountAmount: z.number().nonnegative({ message: 'Discount amount cannot be negative.' }).optional(),\n    total: z.number().nonnegative({ message: 'Total price cannot be negative.' }), // Adjusted to nonnegative\n  }).passthrough(),\n  appliedCouponCode: z.string().optional(), // Validate optional coupon code\n  status: z.enum(['pending', 'confirmed', 'cancelled', 'completed']).optional(),\n  paymentInput: z.object({\n    stripePaymentIntentId: z.string().min(1, { message: 'Stripe Payment Intent ID is required.' }),\n    amount: z.number().nonnegative({ message: 'Payment amount cannot be negative.' }), // Allow 0 for free/fully discounted? Adjusted to nonnegative\n    status: z.string().min(1, { message: 'Payment status is required.' }),\n  }).passthrough(),\n  notes: z.string().optional(),\n  source: z.string().optional(),\n  externalId: z.string().optional(),\n}).refine(data => new Date(data.checkOutDate) > new Date(data.checkInDate), {\n  message: 'Check-out date must be after check-in date.',\n  path: ['checkOutDate'],\n}).refine(data => { // Ensure total matches calculated price, allowing for minor float issues\n    const calculatedTotal = (data.pricing.subtotal ?? 0) + (data.pricing.taxes ?? 0) - (data.pricing.discountAmount ?? 0);\n    // Allow for small floating point differences (e.g., $0.01)\n    return Math.abs(calculatedTotal - data.pricing.total) < 0.01;\n}, {\n    message: 'Calculated total does not match provided total price.',\n    path: ['pricing.total'],\n});\n\n\n/**\n * Creates a new booking document in Firestore using the Client SDK.\n * Calls updatePropertyAvailability (which now also uses the Client SDK) upon success.\n */\nexport async function createBooking(rawBookingData: CreateBookingData): Promise<string> {\n   const paymentIntentId = rawBookingData?.paymentInput?.stripePaymentIntentId || 'N/A';\n   console.log(`--- [createBooking] Function called ---`);\n   console.log(`[createBooking] Received raw data for Payment Intent [${paymentIntentId}]`);\n\n   let bookingData: z.infer<typeof CreateBookingDataSchema>;\n\n   // Zod Validation\n   console.log(`[createBooking] Starting Zod validation for Payment Intent [${paymentIntentId}]...`);\n   const validationResult = CreateBookingDataSchema.safeParse(rawBookingData);\n   if (!validationResult.success) {\n     const errorMessages = validationResult.error.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ');\n     const validationError = new Error(`Invalid booking data: ${errorMessages}`);\n     console.error(`❌ [createBooking] Validation Error for Payment Intent [${paymentIntentId}]:`, validationError.message);\n     throw validationError;\n   }\n   bookingData = validationResult.data;\n   console.log(`[createBooking] Data passed validation for Payment Intent [${paymentIntentId}]`);\n\n\n  try {\n     console.log(`[createBooking] Entered main try block for Payment Intent [${paymentIntentId}]`);\n     const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db' for booking creation\n\n     // Data Transformation\n     console.log(`[createBooking] Transforming data for Firestore for Payment Intent [${paymentIntentId}]...`);\n     const checkInDate = new Date(bookingData.checkInDate); // Parse ISO string\n     const checkOutDate = new Date(bookingData.checkOutDate); // Parse ISO string\n     const checkInTimestamp = ClientTimestamp.fromDate(checkInDate); // Use Client Timestamp\n     const checkOutTimestamp = ClientTimestamp.fromDate(checkOutDate); // Use Client Timestamp\n\n     const paymentInfo: Booking['paymentInfo'] = {\n       stripePaymentIntentId: bookingData.paymentInput.stripePaymentIntentId,\n       amount: bookingData.paymentInput.amount,\n       status: bookingData.paymentInput.status,\n       paidAt: bookingData.paymentInput.status === 'succeeded' || bookingData.paymentInput.status === 'paid'\n         ? ClientTimestamp.now() // Use Client Timestamp\n         : null,\n     };\n\n     // Remove paymentInput before creating the main docData\n     const { paymentInput, ...restOfBookingData } = bookingData;\n\n     // Construct the final booking document data, including the updated pricing structure\n     const docData: Omit<Booking, 'id'> = {\n         ...restOfBookingData,\n         checkInDate: checkInTimestamp,\n         checkOutDate: checkOutTimestamp,\n         pricing: { // Use the validated pricing object\n             baseRate: restOfBookingData.pricing.baseRate,\n             numberOfNights: restOfBookingData.pricing.numberOfNights,\n             cleaningFee: restOfBookingData.pricing.cleaningFee,\n             extraGuestFee: restOfBookingData.pricing.extraGuestFee,\n             numberOfExtraGuests: restOfBookingData.pricing.numberOfExtraGuests,\n             accommodationTotal: restOfBookingData.pricing.accommodationTotal,\n             subtotal: restOfBookingData.pricing.subtotal,\n             taxes: restOfBookingData.pricing.taxes ?? 0,\n             discountAmount: restOfBookingData.pricing.discountAmount, // Include discount amount\n             total: restOfBookingData.pricing.total,\n         },\n         appliedCouponCode: restOfBookingData.appliedCouponCode, // Include applied coupon code\n         paymentInfo: paymentInfo,\n         createdAt: clientServerTimestamp(), // Use Client serverTimestamp\n         updatedAt: clientServerTimestamp(), // Use Client serverTimestamp\n         status: restOfBookingData.status || 'confirmed', // Default status to 'confirmed'\n     };\n\n     // Log the prepared data for debugging\n     console.log(`[createBooking] Firestore Doc Data Prepared for Payment Intent [${paymentIntentId}]:`, JSON.stringify({ ...docData, checkInDate: `Timestamp(${checkInDate.toISOString()})`, checkOutDate: `Timestamp(${checkOutDate.toISOString()})`, paidAt: docData.paymentInfo.paidAt ? `Timestamp(${(docData.paymentInfo.paidAt as ClientTimestamp).toDate().toISOString()})` : null, createdAt: 'ServerTimestamp', updatedAt: 'ServerTimestamp' }, null, 2));\n\n\n     // Firestore Operation (Client SDK)\n     console.log(`[createBooking] Attempting to add booking document to Firestore (Client SDK) for Payment Intent [${paymentIntentId}]...`);\n     const docRef = await addDoc(bookingsCollection, docData);\n     const bookingId = docRef.id;\n     console.log(`✅ [createBooking] Booking document created successfully! ID: ${bookingId} for Payment Intent [${paymentIntentId}]`);\n\n     // --- Update Property Availability (Client SDK) ---\n     console.log(`[createBooking] Triggering local availability update (Client SDK) for property ${bookingData.propertyId}, booking ${bookingId}`);\n     try {\n       await updatePropertyAvailability(bookingData.propertyId, checkInDate, checkOutDate, false); // Using Client SDK function\n       console.log(`✅ [createBooking] Successfully finished update call for local availability (Client SDK) for property ${bookingData.propertyId}, booking ${bookingId}.`);\n     } catch (availabilityError) {\n       console.error(`❌ [createBooking] Failed to update local availability (Client SDK) for property ${bookingData.propertyId} after creating booking ${bookingId}:`, availabilityError);\n       // Decide if this should block the entire process or just log a warning\n       // Re-throwing the error might be safer if availability is critical\n       throw availabilityError; // Re-throw to indicate the overall process partially failed\n     }\n\n     // --- Synchronize Availability with External Platforms ---\n      console.log(`[createBooking] Starting external platform sync for property ${bookingData.propertyId}, booking ${bookingId}...`);\n      try {\n         const propertyDetails = await getPropertyForSync(bookingData.propertyId);\n         if (propertyDetails) {\n             if (propertyDetails.airbnbListingId) {\n                 await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, false, checkInDate, checkOutDate);\n                 console.log(`[createBooking Sync] Initiated Airbnb availability update for listing ${propertyDetails.airbnbListingId}.`);\n             } else {\n                  console.log(`[createBooking Sync] No Airbnb Listing ID found for property ${bookingData.propertyId}. Skipping Airbnb sync.`);\n             }\n             if (propertyDetails.bookingComListingId) {\n                 await updateBookingComListingAvailability(propertyDetails.bookingComListingId, false, checkInDate, checkOutDate);\n                 console.log(`[createBooking Sync] Initiated Booking.com availability update for listing ${propertyDetails.bookingComListingId}.`);\n             } else {\n                  console.log(`[createBooking Sync] No Booking.com Listing ID found for property ${bookingData.propertyId}. Skipping Booking.com sync.`);\n             }\n         } else {\n              console.warn(`[createBooking Sync] Could not retrieve property details for ${bookingData.propertyId} to perform external sync.`);\n         }\n     } catch (syncError) {\n         console.error(`❌ [createBooking Sync] Error synchronizing availability with external platforms for property ${bookingData.propertyId} after creating booking ${bookingId}:`, syncError);\n         // Log this but don't necessarily fail the entire booking creation\n     }\n\n     console.log(`--- [createBooking] Function returning successfully with booking ID: ${bookingId} ---`);\n     return bookingId;\n\n   } catch (error) {\n      // Avoid logging validation errors twice\n      if (!(error instanceof Error && error.message.startsWith('Invalid booking data:'))) {\n          console.error(`❌ [createBooking] Error during booking creation process for Payment Intent [${paymentIntentId}]:`, error);\n      }\n     // Construct a user-friendly error message, hiding internal details unless it's a validation error\n     const errorMessage = error instanceof Error\n         ? (error.message.startsWith('Invalid booking data:') ? error.message : `Failed to create booking (Ref: ${paymentIntentId}). Please contact support.`) // More generic for other errors\n         : `An unexpected error occurred while creating the booking (Ref: ${paymentIntentId}). Please contact support.`;\n\n     throw new Error(errorMessage);\n   }\n }\n\n/**\n * Retrieves a booking document by its ID using the Client SDK.\n */\nexport async function getBookingById(bookingId: string): Promise<Booking | null> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        const docSnap = await getDoc(bookingRef);\n\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n            // Convert Timestamps if needed for client consumption, or keep as Timestamps\n            const bookingResult = {\n                id: docSnap.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking;\n            return bookingResult;\n        } else {\n            console.warn(`[getBookingById] No booking found with ID: ${bookingId}`);\n            return null;\n        }\n    } catch (error) {\n        console.error(`❌ [getBookingById] Error fetching booking with ID ${bookingId}:`, error);\n        throw new Error(`Failed to fetch booking: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Updates the status of a specific booking document using the Client SDK.\n * Calls updatePropertyAvailability (Client SDK) if status is 'cancelled'.\n */\nexport async function updateBookingStatus(bookingId: string, status: Booking['status']): Promise<void> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        await updateDoc(bookingRef, {\n            status: status,\n            updatedAt: clientServerTimestamp(), // Use Client serverTimestamp\n        });\n        console.log(`✅ [updateBookingStatus] Successfully updated booking ${bookingId} to status: ${status}`);\n\n        if (status === 'cancelled') {\n          const booking = await getBookingById(bookingId); // Re-fetch using Client SDK\n          if (booking && booking.checkInDate && booking.checkOutDate) {\n            // Convert Client Timestamps back to Dates\n            const checkIn = (booking.checkInDate as ClientTimestamp).toDate();\n            const checkOut = (booking.checkOutDate as ClientTimestamp).toDate();\n            try {\n                // **** Call function using Client SDK ****\n                await updatePropertyAvailability(booking.propertyId, checkIn, checkOut, true);\n                console.log(`✅ [updateBookingStatus] Successfully updated local availability (Client SDK) for cancelled booking ${bookingId}.`);\n            } catch (availError) {\n                 console.error(`❌ [updateBookingStatus] Failed to update local availability (Client SDK) for cancelled booking ${bookingId}:`, availError);\n            }\n\n             // Trigger external sync\n             try {\n                const propertyDetails = await getPropertyForSync(booking.propertyId);\n                if (propertyDetails) {\n                    if (propertyDetails.airbnbListingId) {\n                        await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, true, checkIn, checkOut);\n                         console.log(`[Sync] Initiated Airbnb date release for ${propertyDetails.airbnbListingId}`);\n                    }\n                     if (propertyDetails.bookingComListingId) {\n                        await updateBookingComListingAvailability(propertyDetails.bookingComListingId, true, checkIn, checkOut);\n                         console.log(`[Sync] Initiated Booking.com date release for ${propertyDetails.bookingComListingId}`);\n                    }\n                } else {\n                    console.warn(`[Sync] Could not find property details for ${booking.propertyId} to sync cancellation.`);\n                }\n             } catch (syncError) {\n                 console.error(`❌ [Sync] Error syncing availability after cancellation for booking ${bookingId}:`, syncError);\n             }\n          } else {\n             console.warn(`[updateBookingStatus] Could not find booking ${bookingId} or its dates to update availability after cancellation.`);\n          }\n        }\n\n    } catch (error) {\n        console.error(`❌ [updateBookingStatus] Error updating status for booking ${bookingId} (Client SDK):`, error);\n        throw new Error(`Failed to update booking status: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific property ID using the Client SDK.\n */\nexport async function getBookingsForProperty(propertyId: string): Promise<Booking[]> {\n    const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        const q = query(bookingsCollection, where('propertyId', '==', propertyId));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n            const data = doc.data();\n            bookings.push({\n                id: doc.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForProperty] Error fetching bookings for property ${propertyId}:`, error);\n        throw new Error(`Failed to fetch bookings for property: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific user ID using the Client SDK.\n */\nexport async function getBookingsForUser(userId: string): Promise<Booking[]> {\n     const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        const q = query(bookingsCollection, where('guestInfo.userId', '==', userId));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n             const data = doc.data();\n             bookings.push({\n                 id: doc.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n             } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForUser] Error fetching bookings for user ${userId}:`, error);\n        throw new Error(`Failed to fetch bookings for user: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n\n/**\n * Updates the availability status for a given property and date range in Firestore\n * using the **Firebase Client SDK**.\n *\n * This function relies on Firestore security rules to allow the necessary writes.\n * It should be called from a trusted server environment (e.g., a Next.js server action)\n * that runs under an appropriate authentication context if required by the rules.\n */\nexport async function updatePropertyAvailability(propertyId: string, checkInDate: Date, checkOutDate: Date, available: boolean): Promise<void> {\n  console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function called ---`);\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Args: propertyId=${propertyId}, checkIn=${format(checkInDate, 'yyyy-MM-dd')}, checkOut=${format(checkOutDate, 'yyyy-MM-dd')} (exclusive), available=${available}`);\n\n  if (!db) {\n    console.error(\"❌ [updatePropertyAvailability - CLIENT SDK] Firestore Client SDK (db) is not initialized. Cannot update availability.\");\n    throw new Error(\"Firestore Client SDK is not initialized.\");\n  }\n\n  if (checkOutDate <= checkInDate) {\n    console.warn(`[updatePropertyAvailability] Check-out date (${format(checkOutDate, 'yyyy-MM-dd')}) must be after check-in date (${format(checkInDate, 'yyyy-MM-dd')}). No update performed.`);\n    return;\n  }\n\n  const datesToUpdate = eachDayOfInterval({\n    start: checkInDate,\n    end: subDays(checkOutDate, 1) // Make checkout date exclusive\n  });\n\n  if (datesToUpdate.length === 0) {\n    console.log(\"[updatePropertyAvailability - CLIENT SDK] No dates need updating.\");\n    return;\n  }\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Dates to update (${datesToUpdate.length}): ${datesToUpdate.map(d => format(d, 'yyyy-MM-dd')).join(', ')}`);\n\n  const updatesByMonth: { [month: string]: { [day: number]: boolean } } = {};\n  datesToUpdate.forEach(date => {\n    const monthStr = format(date, 'yyyy-MM');\n    const dayOfMonth = date.getDate();\n    if (!updatesByMonth[monthStr]) {\n      updatesByMonth[monthStr] = {};\n    }\n    updatesByMonth[monthStr][dayOfMonth] = available;\n  });\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Updates grouped by month:`, JSON.stringify(updatesByMonth));\n\n\n  const batch = clientWriteBatch(db); // Use clientWriteBatch with client db\n  const availabilityCollection = collection(db, 'availability'); // Use client db\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Initialized Firestore Client batch.`);\n\n  try {\n    const monthStrings = Object.keys(updatesByMonth);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Processing months: ${monthStrings.join(', ')}`);\n\n    if (monthStrings.length === 0) {\n      console.log(\"[updatePropertyAvailability - CLIENT SDK] No months to process.\");\n      return;\n    }\n\n    // Fetch existing docs using Client SDK 'in' query\n    const docIdsToFetch = monthStrings.map(monthStr => `${propertyId}_${monthStr}`);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetching existing availability docs for ${monthStrings.length} months...`);\n\n    // Split into batches if necessary (max 30 IDs per 'in' query)\n    const idBatches: string[][] = [];\n    for (let i = 0; i < docIdsToFetch.length; i += 30) {\n      idBatches.push(docIdsToFetch.slice(i, i + 30));\n    }\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Split into ${idBatches.length} query batches due to 'in' operator limit.`);\n\n    const fetchedDocsMap = new Map<string, Availability>();\n    await Promise.all(idBatches.map(async (batchIds, index) => {\n      if (batchIds.length === 0) return;\n      console.log(`[updatePropertyAvailability - CLIENT SDK] Executing query for batch ${index + 1}: ${batchIds.join(', ')}`);\n      const q = query(availabilityCollection, where(documentId(), 'in', batchIds));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(docSnap => {\n        if (docSnap.exists()) {\n          fetchedDocsMap.set(docSnap.id, { id: docSnap.id, ...docSnap.data() } as Availability);\n        }\n      });\n    }));\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetched ${fetchedDocsMap.size} existing doc snapshots.`);\n\n    monthStrings.forEach(monthStr => {\n      const availabilityDocId = `${propertyId}_${monthStr}`;\n      console.log(`[updatePropertyAvailability Batch Prep] Processing month ${monthStr} (Doc ID: ${availabilityDocId}). Updates needed for days: ${Object.keys(updatesByMonth[monthStr]).join(', ')}`);\n      const availabilityDocRef = doc(availabilityCollection, availabilityDocId); // Use client db\n      const updatesForDay = updatesByMonth[monthStr];\n\n      const updatePayload: { [key: string]: boolean | SerializableTimestamp } = {}; // Use SerializableTimestamp for serverTimestamp\n      for (const day in updatesForDay) {\n        updatePayload[`available.${String(day)}`] = updatesForDay[day];\n      }\n      updatePayload.updatedAt = clientServerTimestamp(); // Use Client serverTimestamp\n      console.log(`[updatePropertyAvailability Batch Prep] Prepared update payload for ${availabilityDocId}:`, JSON.stringify({ ...updatePayload, updatedAt: 'ServerTimestamp' }));\n\n\n      const existingDoc = fetchedDocsMap.get(availabilityDocId);\n\n      if (existingDoc) {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} exists. Adding UPDATE operation to client batch.`);\n        batch.update(availabilityDocRef, updatePayload);\n      } else {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} DOES NOT exist. Creating initial data for month ${monthStr}.`);\n        const [year, month] = monthStr.split('-').map(Number);\n        const daysInMonth = new Date(year, month, 0).getDate();\n        const initialAvailableMap: { [day: number]: boolean } = {};\n        for (let day = 1; day <= daysInMonth; day++) {\n          initialAvailableMap[day] = updatesForDay[day] !== undefined ? updatesForDay[day] : true; // Apply update if exists, else default to true\n        }\n        console.log(`[updatePropertyAvailability Batch Prep] Calculated initial availability map for ${daysInMonth} days in ${monthStr}.`);\n\n        const newDocData: Partial<Availability> = {\n          propertyId: propertyId,\n          month: monthStr,\n          available: initialAvailableMap,\n          updatedAt: clientServerTimestamp(), // Use Client serverTimestamp\n        };\n        console.log(`[updatePropertyAvailability Batch Prep] New doc data for ${availabilityDocId}:`, JSON.stringify({ ...newDocData, updatedAt: 'ServerTimestamp' }));\n        console.log(`[updatePropertyAvailability Batch Prep] Adding SET operation (merge: true) to client batch for ${availabilityDocId}.`);\n        batch.set(availabilityDocRef, newDocData, { merge: true }); // Use merge: true to avoid overwriting existing fields if any\n      }\n    });\n\n    // Commit the Client SDK batch write\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Preparing to commit client batch for property ${propertyId}, months: ${monthStrings.join(', ')}...`);\n    await batch.commit();\n    console.log(`✅ [updatePropertyAvailability - CLIENT SDK] Successfully committed batch updates for local availability for property ${propertyId}.`);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function finished successfully ---`);\n\n\n  } catch (error) {\n    // This error might be due to Firestore security rules denying the write.\n    console.error(`❌ Error during Client SDK batch update/creation for property availability ${propertyId}:`, error);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function throwing error ---`);\n    throw new Error(`Failed to update local property availability using Client SDK: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\n\n/**\n * Fetches all unavailable dates for a given property within a reasonable future range\n * using the **Client SDK**.\n */\nexport async function getUnavailableDatesForProperty(propertyId: string, monthsToFetch: number = 12): Promise<Date[]> {\n  const unavailableDates: Date[] = [];\n  console.log(`--- [getUnavailableDatesForProperty] Function called ---`);\n  console.log(`[getUnavailableDatesForProperty] Fetching for property ${propertyId} for the next ${monthsToFetch} months.`);\n\n  if (!db) {\n      console.error(\"❌ [getUnavailableDatesForProperty] Firestore Client SDK (db) is not initialized. Cannot fetch availability.\");\n      return []; // Return empty array if DB not ready\n  }\n\n  const availabilityCollection = collection(db, 'availability'); // Use Client SDK 'db'\n  const today = new Date();\n  // Use UTC for consistency when dealing with dates across potential timezones\n  const currentMonthStart = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), 1));\n  console.log(`[getUnavailableDatesForProperty] Today (UTC): ${today.toISOString()}, Current Month Start (UTC): ${currentMonthStart.toISOString()}`);\n\n\n  try {\n    const monthDocIds: string[] = [];\n    for (let i = 0; i < monthsToFetch; i++) {\n      // Calculate target month correctly in UTC\n      const targetMonth = new Date(Date.UTC(currentMonthStart.getUTCFullYear(), currentMonthStart.getUTCMonth() + i, 1));\n      const monthStr = format(targetMonth, 'yyyy-MM');\n      monthDocIds.push(`${propertyId}_${monthStr}`);\n    }\n    console.log(`[getUnavailableDatesForProperty] Querying for document IDs: ${monthDocIds.join(', ')}`);\n\n\n    const queryBatches: string[][] = [];\n    for (let i = 0; i < monthDocIds.length; i += 30) { // Firestore 'in' query supports up to 30 elements\n        queryBatches.push(monthDocIds.slice(i, i + 30));\n    }\n    console.log(`[getUnavailableDatesForProperty] Split into ${queryBatches.length} query batches due to 'in' operator limit.`);\n\n     if (monthDocIds.length === 0) {\n        console.log(\"[getUnavailableDatesForProperty] No month document IDs to query. Returning empty array.\");\n        return [];\n    }\n\n    // Execute queries using Client SDK\n    const allQuerySnapshots = await Promise.all(\n      queryBatches.map(async (batchIds, index) => {\n          console.log(`[getUnavailableDatesForProperty] Executing query for batch ${index + 1}: ${batchIds.join(', ')}`);\n          const q = query(availabilityCollection, where(documentId(), 'in', batchIds)); // Use documentId() for client query\n          return getDocs(q);\n      })\n    );\n    console.log(`[getUnavailableDatesForProperty] Fetched results from ${allQuerySnapshots.length} batches.`);\n\n\n    allQuerySnapshots.forEach((querySnapshot, batchIndex) => {\n         console.log(`[getUnavailableDatesForProperty] Processing batch ${batchIndex + 1}: Found ${querySnapshot.docs.length} documents.`);\n         querySnapshot.forEach((doc) => {\n            const data = doc.data() as Partial<Availability>;\n            const docId = doc.id;\n            console.log(`[getUnavailableDatesForProperty] Processing doc: ${docId}`);\n            const monthStrFromId = docId.split('_')[1];\n            const monthStrFromData = data.month;\n            // Prefer month from data if available, fallback to parsing from ID\n            const monthStr = monthStrFromData || monthStrFromId;\n\n             if (!monthStr || !/^\\d{4}-\\d{2}$/.test(monthStr)) {\n                 console.warn(`[getUnavailableDatesForProperty] Could not determine valid month string for doc ${docId}. Skipping.`);\n                 return;\n             }\n\n            if (data.available && typeof data.available === 'object') {\n                const [year, monthIndex] = monthStr.split('-').map(num => parseInt(num, 10));\n                const month = monthIndex - 1; // JS months are 0-indexed\n                 console.log(`[getUnavailableDatesForProperty] Doc ${docId} (Month: ${monthStr}): Processing availability map...`);\n\n                for (const dayStr in data.available) {\n                    const day = parseInt(dayStr, 10);\n                    if (!isNaN(day) && data.available[day] === false) {\n                        try {\n                            if (year > 0 && month >= 0 && month < 12 && day > 0 && day <= 31) {\n                                const date = new Date(Date.UTC(year, month, day)); // Work in UTC\n                                 if (date.getUTCFullYear() === year && date.getUTCMonth() === month && date.getUTCDate() === day) {\n                                    const todayUtcStart = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate()));\n                                    if (date >= todayUtcStart) {\n                                        console.log(`   - Found unavailable date: ${format(date, 'yyyy-MM-dd')}`);\n                                        unavailableDates.push(date);\n                                    } else {\n                                        console.log(`   - Found past unavailable date: ${format(date, 'yyyy-MM-dd')}. Ignoring.`);\n                                    }\n                                 } else {\n                                     console.warn(`[getUnavailableDatesForProperty] Invalid date created for ${year}-${monthStr}-${dayStr} in doc ${docId}. Skipping.`);\n                                 }\n                            } else {\n                                 console.warn(`[getUnavailableDatesForProperty] Invalid year/month/day components found in doc ${docId}: year=${year}, month=${monthIndex}, day=${dayStr}. Skipping.`);\n                            }\n                        } catch (dateError) {\n                             console.warn(`[getUnavailableDatesForProperty] Error creating date for ${year}-${monthStr}-${dayStr} in doc ${docId}:`, dateError, `. Skipping.`);\n                        }\n                    }\n                }\n            } else {\n                 console.warn(`[getUnavailableDatesForProperty] Document ${docId} has missing or invalid 'available' data. Skipping.`);\n            }\n        });\n    });\n\n    unavailableDates.sort((a, b) => a.getTime() - b.getTime());\n    console.log(`[getUnavailableDatesForProperty] Total unavailable dates found for property ${propertyId}: ${unavailableDates.length}`);\n    console.log(`[getUnavailableDatesForProperty] Returning sorted unavailable dates: ${unavailableDates.map(d => format(d, 'yyyy-MM-dd')).join(', ')}`);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished successfully ---`);\n    return unavailableDates;\n\n  } catch (error) {\n    console.error(`❌ Error fetching unavailable dates for property ${propertyId}:`, error);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished with error ---`);\n    return []; // Return empty array on error\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1042, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/couponService.ts"],"sourcesContent":["\n// src/services/couponService.ts\n'use server';\n\nimport { collection, doc, getDoc, Timestamp, where, query, getDocs, limit } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Client SDK Firestore instance\nimport type { Coupon, SerializableTimestamp } from '@/types';\nimport { parseISO, isWithinInterval, areIntervalsOverlapping } from 'date-fns'; // Changed 'overlaps' to 'areIntervalsOverlapping'\n\n// Helper function to convert SerializableTimestamp to Date or null\nconst toDate = (timestamp: SerializableTimestamp | undefined | null): Date | null => {\n  if (!timestamp) return null;\n  if (timestamp instanceof Date) return timestamp;\n  if (timestamp instanceof Timestamp) return timestamp.toDate();\n  if (typeof timestamp === 'string') {\n    try {\n      return parseISO(timestamp);\n    } catch {\n      return null;\n    }\n  }\n  if (typeof timestamp === 'number') {\n    // Assuming number is milliseconds since epoch\n    return new Date(timestamp);\n  }\n  return null;\n};\n\n/**\n * Validates a coupon code against the Firestore 'coupons' collection.\n * Checks existence, activity status, expiry, booking validity timeframe, and exclusion periods.\n *\n * @param couponCode - The coupon code string entered by the user.\n * @param bookingCheckInDate - The check-in date of the booking.\n * @param bookingCheckOutDate - The check-out date of the booking.\n * @returns A promise resolving to an object with discount percentage or an error message.\n */\nexport async function validateAndApplyCoupon(\n  couponCode: string,\n  bookingCheckInDate: Date | null,\n  bookingCheckOutDate: Date | null\n): Promise<{ discountPercentage?: number; error?: string }> {\n  if (!couponCode) {\n    return { error: 'Coupon code cannot be empty.' };\n  }\n  if (!bookingCheckInDate || !bookingCheckOutDate || bookingCheckOutDate <= bookingCheckInDate) {\n      return { error: 'Valid booking dates are required to apply a coupon.' };\n  }\n\n  const couponCodeUpper = couponCode.toUpperCase(); // Normalize code\n\n  try {\n    const couponsCollection = collection(db, 'coupons');\n    const q = query(couponsCollection, where('code', '==', couponCodeUpper), limit(1));\n    const querySnapshot = await getDocs(q);\n\n    if (querySnapshot.empty) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" not found.`);\n      return { error: 'Invalid coupon code.' };\n    }\n\n    const couponDoc = querySnapshot.docs[0];\n    // Cast data to include new fields, ensuring they can be null/undefined\n    const couponData = couponDoc.data() as Omit<Coupon, 'id' | 'createdAt' | 'updatedAt' | 'validUntil' | 'bookingValidFrom' | 'bookingValidUntil' | 'exclusionPeriods'> & {\n        createdAt: any;\n        updatedAt?: any;\n        validUntil: any;\n        bookingValidFrom?: any | null;\n        bookingValidUntil?: any | null;\n        exclusionPeriods?: Array<{ start: any; end: any }> | null;\n    };\n\n\n    // --- Basic Validations ---\n    if (!couponData.isActive) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" is not active.`);\n      return { error: 'Coupon code is no longer active.' };\n    }\n\n    const couponExpiryDate = toDate(couponData.validUntil);\n    const now = new Date(); // Compare with current date, not just timestamp\n    // Make comparison based on the start of the day for coupon expiry\n    const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    if (couponExpiryDate && couponExpiryDate < todayStart) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" has expired on ${couponExpiryDate.toISOString().split('T')[0]}.`);\n      return { error: 'Coupon code has expired.' };\n    }\n\n\n    if (typeof couponData.discount !== 'number' || couponData.discount <= 0 || couponData.discount > 100) {\n      console.error(`[Coupon Service] Invalid discount percentage (${couponData.discount}) for coupon \"${couponCodeUpper}\".`);\n      return { error: 'Invalid coupon configuration.' };\n    }\n\n    // --- Booking Timeframe Validations ---\n    const bookingValidFrom = toDate(couponData.bookingValidFrom);\n    const bookingValidUntil = toDate(couponData.bookingValidUntil);\n\n    // Check if booking starts before the valid period\n    if (bookingValidFrom && bookingCheckInDate < bookingValidFrom) {\n        console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is before coupon booking validity start (${bookingValidFrom.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n        return { error: 'Coupon not valid for selected check-in date.' };\n    }\n\n    // Check if booking ends after the valid period\n    // For bookingValidUntil, we should check if the *check-in* date is after the validity end date\n    // OR if the check-out date is strictly after the validity end date.\n    if (bookingValidUntil) {\n         // Set validity end to the end of the day for comparison\n         const validityEndDate = new Date(bookingValidUntil.getFullYear(), bookingValidUntil.getMonth(), bookingValidUntil.getDate(), 23, 59, 59, 999);\n         if (bookingCheckInDate > validityEndDate) {\n             console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is after coupon booking validity end (${bookingValidUntil.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n             return { error: 'Coupon not valid for selected check-in date.' };\n         }\n         // Note: Check-out date is typically exclusive. A booking ending on the validity date should be allowed.\n         // However, if the policy is strict, you might compare bookingCheckOutDate > validityEndDate + 1 day or similar.\n         // Sticking to check-in date for simplicity based on typical coupon logic.\n    }\n\n\n    // --- Exclusion Period Validations ---\n    if (couponData.exclusionPeriods && Array.isArray(couponData.exclusionPeriods)) {\n        // The booking interval includes the check-in day but excludes the check-out day for night calculations.\n        // For overlap checking, we should consider the full range of occupied days.\n        const bookingInterval = { start: bookingCheckInDate, end: new Date(bookingCheckOutDate.getTime() - 1) }; // Adjust end date to be inclusive\n\n        for (const period of couponData.exclusionPeriods) {\n            const exclusionStart = toDate(period.start);\n            const exclusionEnd = toDate(period.end);\n\n            if (exclusionStart && exclusionEnd) {\n                // Ensure exclusion end is inclusive for overlap check\n                const exclusionInterval = { start: exclusionStart, end: new Date(exclusionEnd.getFullYear(), exclusionEnd.getMonth(), exclusionEnd.getDate(), 23, 59, 59, 999)};\n                // Check if the booking interval overlaps with any exclusion interval\n                if (areIntervalsOverlapping(bookingInterval, exclusionInterval, { inclusive: true })) { // Use areIntervalsOverlapping\n                     console.warn(`[Coupon Service] Booking dates (${bookingCheckInDate.toISOString().split('T')[0]} - ${bookingCheckOutDate.toISOString().split('T')[0]}) overlap with exclusion period (${exclusionStart.toISOString().split('T')[0]} - ${exclusionEnd.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n                     return { error: 'Coupon not valid for the selected dates due to an exclusion period.' };\n                }\n            } else {\n                 console.warn(`[Coupon Service] Invalid exclusion period found for coupon \"${couponCodeUpper}\":`, period);\n            }\n        }\n    }\n\n\n    // TODO: Add validation for usage limits if implemented (maxUses, currentUses)\n\n    console.log(`[Coupon Service] Coupon code \"${couponCodeUpper}\" validated successfully for the booking dates. Discount: ${couponData.discount}%`);\n    return { discountPercentage: couponData.discount };\n\n  } catch (error) {\n    console.error(`❌ [Coupon Service] Error validating coupon code \"${couponCodeUpper}\":`, error);\n    return { error: 'Could not validate coupon code. Please try again.' }; // Generic error for the user\n  }\n}\n"],"names":[],"mappings":"AACA,gCAAgC;;;;;;AAGhC;AAAA;AACA,8MAAqC,gCAAgC;AAErE,+OAAgF,kDAAkD;AAAlI;;;;;;;AAEA,mEAAmE;AACnE,MAAM,SAAS,CAAC;IACd,IAAI,CAAC,WAAW,OAAO;IACvB,IAAI,qBAAqB,MAAM,OAAO;IACtC,IAAI,qBAAqB,iKAAA,CAAA,YAAS,EAAE,OAAO,UAAU,MAAM;IAC3D,IAAI,OAAO,cAAc,UAAU;QACjC,IAAI;YACF,OAAO,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE;QAClB,EAAE,OAAM;YACN,OAAO;QACT;IACF;IACA,IAAI,OAAO,cAAc,UAAU;QACjC,8CAA8C;QAC9C,OAAO,IAAI,KAAK;IAClB;IACA,OAAO;AACT;AAWO,eAAe,uCAAoB,GAApB,uBACpB,UAAkB,EAClB,kBAA+B,EAC/B,mBAAgC;IAEhC,IAAI,CAAC,YAAY;QACf,OAAO;YAAE,OAAO;QAA+B;IACjD;IACA,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,uBAAuB,oBAAoB;QAC1F,OAAO;YAAE,OAAO;QAAsD;IAC1E;IAEA,MAAM,kBAAkB,WAAW,WAAW,IAAI,iBAAiB;IAEnE,IAAI;QACF,MAAM,oBAAoB,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACzC,MAAM,IAAI,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,mBAAmB,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,MAAM,kBAAkB,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE;QAC/E,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QAEpC,IAAI,cAAc,KAAK,EAAE;YACvB,QAAQ,IAAI,CAAC,CAAC,8BAA8B,EAAE,gBAAgB,YAAY,CAAC;YAC3E,OAAO;gBAAE,OAAO;YAAuB;QACzC;QAEA,MAAM,YAAY,cAAc,IAAI,CAAC,EAAE;QACvC,uEAAuE;QACvE,MAAM,aAAa,UAAU,IAAI;QAUjC,4BAA4B;QAC5B,IAAI,CAAC,WAAW,QAAQ,EAAE;YACxB,QAAQ,IAAI,CAAC,CAAC,8BAA8B,EAAE,gBAAgB,gBAAgB,CAAC;YAC/E,OAAO;gBAAE,OAAO;YAAmC;QACrD;QAEA,MAAM,mBAAmB,OAAO,WAAW,UAAU;QACrD,MAAM,MAAM,IAAI,QAAQ,gDAAgD;QACxE,kEAAkE;QAClE,MAAM,aAAa,IAAI,KAAK,IAAI,WAAW,IAAI,IAAI,QAAQ,IAAI,IAAI,OAAO;QAC1E,IAAI,oBAAoB,mBAAmB,YAAY;YACrD,QAAQ,IAAI,CAAC,CAAC,8BAA8B,EAAE,gBAAgB,iBAAiB,EAAE,iBAAiB,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAChI,OAAO;gBAAE,OAAO;YAA2B;QAC7C;QAGA,IAAI,OAAO,WAAW,QAAQ,KAAK,YAAY,WAAW,QAAQ,IAAI,KAAK,WAAW,QAAQ,GAAG,KAAK;YACpG,QAAQ,KAAK,CAAC,CAAC,8CAA8C,EAAE,WAAW,QAAQ,CAAC,cAAc,EAAE,gBAAgB,EAAE,CAAC;YACtH,OAAO;gBAAE,OAAO;YAAgC;QAClD;QAEA,wCAAwC;QACxC,MAAM,mBAAmB,OAAO,WAAW,gBAAgB;QAC3D,MAAM,oBAAoB,OAAO,WAAW,iBAAiB;QAE7D,kDAAkD;QAClD,IAAI,oBAAoB,qBAAqB,kBAAkB;YAC3D,QAAQ,IAAI,CAAC,CAAC,mCAAmC,EAAE,mBAAmB,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,2CAA2C,EAAE,iBAAiB,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,gBAAgB,EAAE,CAAC;YACxN,OAAO;gBAAE,OAAO;YAA+C;QACnE;QAEA,+CAA+C;QAC/C,+FAA+F;QAC/F,oEAAoE;QACpE,IAAI,mBAAmB;YAClB,wDAAwD;YACxD,MAAM,kBAAkB,IAAI,KAAK,kBAAkB,WAAW,IAAI,kBAAkB,QAAQ,IAAI,kBAAkB,OAAO,IAAI,IAAI,IAAI,IAAI;YACzI,IAAI,qBAAqB,iBAAiB;gBACtC,QAAQ,IAAI,CAAC,CAAC,mCAAmC,EAAE,mBAAmB,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,wCAAwC,EAAE,kBAAkB,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,gBAAgB,EAAE,CAAC;gBACtN,OAAO;oBAAE,OAAO;gBAA+C;YACnE;QACA,wGAAwG;QACxG,gHAAgH;QAChH,0EAA0E;QAC/E;QAGA,uCAAuC;QACvC,IAAI,WAAW,gBAAgB,IAAI,MAAM,OAAO,CAAC,WAAW,gBAAgB,GAAG;YAC3E,wGAAwG;YACxG,4EAA4E;YAC5E,MAAM,kBAAkB;gBAAE,OAAO;gBAAoB,KAAK,IAAI,KAAK,oBAAoB,OAAO,KAAK;YAAG,GAAG,kCAAkC;YAE3I,KAAK,MAAM,UAAU,WAAW,gBAAgB,CAAE;gBAC9C,MAAM,iBAAiB,OAAO,OAAO,KAAK;gBAC1C,MAAM,eAAe,OAAO,OAAO,GAAG;gBAEtC,IAAI,kBAAkB,cAAc;oBAChC,sDAAsD;oBACtD,MAAM,oBAAoB;wBAAE,OAAO;wBAAgB,KAAK,IAAI,KAAK,aAAa,WAAW,IAAI,aAAa,QAAQ,IAAI,aAAa,OAAO,IAAI,IAAI,IAAI,IAAI;oBAAI;oBAC9J,qEAAqE;oBACrE,IAAI,CAAA,GAAA,uJAAA,CAAA,0BAAuB,AAAD,EAAE,iBAAiB,mBAAmB;wBAAE,WAAW;oBAAK,IAAI;wBACjF,QAAQ,IAAI,CAAC,CAAC,gCAAgC,EAAE,mBAAmB,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,oBAAoB,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,iCAAiC,EAAE,eAAe,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,gBAAgB,EAAE,CAAC;wBAC5S,OAAO;4BAAE,OAAO;wBAAsE;oBAC3F;gBACJ,OAAO;oBACF,QAAQ,IAAI,CAAC,CAAC,4DAA4D,EAAE,gBAAgB,EAAE,CAAC,EAAE;gBACtG;YACJ;QACJ;QAGA,8EAA8E;QAE9E,QAAQ,GAAG,CAAC,CAAC,8BAA8B,EAAE,gBAAgB,0DAA0D,EAAE,WAAW,QAAQ,CAAC,CAAC,CAAC;QAC/I,OAAO;YAAE,oBAAoB,WAAW,QAAQ;QAAC;IAEnD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,iDAAiD,EAAE,gBAAgB,EAAE,CAAC,EAAE;QACvF,OAAO;YAAE,OAAO;QAAoD,GAAG,6BAA6B;IACtG;AACF;;;IArHsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 1205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 1300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1360, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Sheet = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sheet() from the server but Sheet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"Sheet\",\n);\nexport const SheetClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetClose() from the server but SheetClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetClose\",\n);\nexport const SheetContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetContent() from the server but SheetContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetContent\",\n);\nexport const SheetDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetDescription() from the server but SheetDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetDescription\",\n);\nexport const SheetFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetFooter() from the server but SheetFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetFooter\",\n);\nexport const SheetHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetHeader() from the server but SheetHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetHeader\",\n);\nexport const SheetOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetOverlay() from the server but SheetOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetOverlay\",\n);\nexport const SheetPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetPortal() from the server but SheetPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetPortal\",\n);\nexport const SheetTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTitle() from the server but SheetTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetTitle\",\n);\nexport const SheetTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTrigger() from the server but SheetTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA","debugId":null}},
    {"offset": {"line": 1410, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Sheet = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sheet() from the server but Sheet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"Sheet\",\n);\nexport const SheetClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetClose() from the server but SheetClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetClose\",\n);\nexport const SheetContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetContent() from the server but SheetContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetContent\",\n);\nexport const SheetDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetDescription() from the server but SheetDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetDescription\",\n);\nexport const SheetFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetFooter() from the server but SheetFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetFooter\",\n);\nexport const SheetHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetHeader() from the server but SheetHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetHeader\",\n);\nexport const SheetOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetOverlay() from the server but SheetOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetOverlay\",\n);\nexport const SheetPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetPortal() from the server but SheetPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetPortal\",\n);\nexport const SheetTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTitle() from the server but SheetTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetTitle\",\n);\nexport const SheetTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTrigger() from the server but SheetTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA","debugId":null}},
    {"offset": {"line": 1460, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/prahova/prahova-header.tsx"],"sourcesContent":["\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\nimport { Menu, Home, MountainSnow, Camera, Map, Phone, ListChecks } from 'lucide-react'; // Specific icons, added ListChecks\n\nexport function PrahovaHeader() {\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b bg-white/90 backdrop-blur supports-[backdrop-filter]:bg-white/70 shadow-sm\">\n      <div className=\"container flex h-16 items-center justify-between\">\n        <Link href=\"/properties/prahova-mountain-chalet\" className=\"flex items-center gap-2\">\n           {/* Prahova Specific Logo/Icon */}\n           <MountainSnow className=\"h-7 w-7 text-green-700\" />\n          <span className=\"text-xl font-bold text-gray-800\">Prahova Chalet</span>\n        </Link>\n\n        {/* Desktop Navigation */}\n        <nav className=\"hidden items-center gap-6 md:flex\">\n          <Link href=\"/properties/prahova-mountain-chalet\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Home\n          </Link>\n          <Link href=\"#gallery\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Gallery\n          </Link>\n           <Link href=\"#house-rules\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Rules\n          </Link>\n           <Link href=\"#location\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Location\n          </Link>\n           <Link href=\"#contact\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Contact\n          </Link>\n           {/* Link to booking form section */}\n           <Link href=\"#booking-form\">\n             <Button size=\"sm\" className=\"bg-green-700 hover:bg-green-800 text-white\">\n               Book Now\n             </Button>\n           </Link>\n        </nav>\n\n        {/* Mobile Navigation */}\n        <Sheet>\n          <SheetTrigger asChild className=\"md:hidden\">\n            <Button variant=\"outline\" size=\"icon\" className=\"border-gray-300\">\n              <Menu className=\"h-5 w-5 text-gray-700\" />\n              <span className=\"sr-only\">Toggle Menu</span>\n            </Button>\n          </SheetTrigger>\n          <SheetContent side=\"right\" className=\"bg-white\">\n             <Link href=\"/properties/prahova-mountain-chalet\" className=\"flex items-center gap-2 mb-8\">\n               <MountainSnow className=\"h-7 w-7 text-green-700\" />\n               <span className=\"text-xl font-bold text-gray-800\">Prahova Chalet</span>\n             </Link>\n            <nav className=\"grid gap-6 text-lg font-medium\">\n              <Link href=\"/properties/prahova-mountain-chalet\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-green-700\">\n                <Home className=\"h-5 w-5\" />\n                Home\n              </Link>\n              <Link href=\"#gallery\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-green-700\">\n                <Camera className=\"h-5 w-5\" />\n                Gallery\n              </Link>\n               <Link href=\"#house-rules\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-green-700\">\n                 <ListChecks className=\"h-5 w-5\" />\n                 Rules\n               </Link>\n               <Link href=\"#location\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-green-700\">\n                <Map className=\"h-5 w-5\" />\n                Location\n              </Link>\n               <Link href=\"#contact\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-green-700\">\n                <Phone className=\"h-5 w-5\" />\n                Contact\n              </Link>\n               {/* Link to booking form section */}\n              <Link href=\"#booking-form\">\n                 <Button size=\"lg\" className=\"mt-4 bg-green-700 hover:bg-green-800 text-white\">\n                   Book Now\n                 </Button>\n              </Link>\n            </nav>\n          </SheetContent>\n        </Sheet>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,gVAAyF,mCAAmC;AAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAsC,WAAU;;sCAExD,8OAAC,sNAAA,CAAA,eAAY;4BAAC,WAAU;;;;;;sCACzB,8OAAC;4BAAK,WAAU;sCAAkC;;;;;;;;;;;;8BAIpD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAsC,WAAU;sCAA0E;;;;;;sCAGrI,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;sCAA0E;;;;;;sCAGzG,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAe,WAAU;sCAA0E;;;;;;sCAG9G,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAY,WAAU;sCAA0E;;;;;;sCAG3G,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;sCAA0E;;;;;;sCAI1G,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAK,WAAU;0CAA6C;;;;;;;;;;;;;;;;;8BAO9E,8OAAC,iIAAA,CAAA,QAAK;;sCACJ,8OAAC,iIAAA,CAAA,eAAY;4BAAC,OAAO;4BAAC,WAAU;sCAC9B,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;gCAAO,WAAU;;kDAC9C,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;sCAG9B,8OAAC,iIAAA,CAAA,eAAY;4BAAC,MAAK;4BAAQ,WAAU;;8CAClC,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAsC,WAAU;;sDACzD,8OAAC,sNAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;sDACxB,8OAAC;4CAAK,WAAU;sDAAkC;;;;;;;;;;;;8CAErD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAsC,WAAU;;8DACzD,8OAAC,mMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG9B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAW,WAAU;;8DAC9B,8OAAC,sMAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG/B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAe,WAAU;;8DAClC,8OAAC,kNAAA,CAAA,aAAU;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAGpC,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAY,WAAU;;8DAChC,8OAAC,gMAAA,CAAA,MAAG;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG5B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAW,WAAU;;8DAC/B,8OAAC,oMAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAI/B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDACR,cAAA,8OAAC,kIAAA,CAAA,SAAM;gDAAC,MAAK;gDAAK,WAAU;0DAAkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU/F","debugId":null}},
    {"offset": {"line": 1800, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/prahova/prahova-footer.tsx"],"sourcesContent":["import Link from 'next/link';\n\nexport function PrahovaFooter() {\n  return (\n    <footer className=\"border-t bg-gray-100\">\n      <div className=\"container py-8 text-center text-sm text-gray-500 md:flex md:items-center md:justify-between md:py-10\">\n        <p>&copy; {new Date().getFullYear()} Prahova Mountain Chalet. All rights reserved.</p>\n        {/* Optional: Add specific links for Prahova */}\n        <nav className=\"mt-4 flex justify-center gap-4 md:mt-0\">\n          <Link href=\"/properties/prahova-mountain-chalet#contact\" className=\"hover:text-gray-800\">\n            Contact Us\n          </Link>\n           {/* <Link href=\"/terms-prahova\" className=\"hover:text-gray-800\">\n            Terms\n          </Link> */}\n           <Link href=\"/\" className=\"hover:text-gray-800\">\n             Main Site\n           </Link>\n        </nav>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;;wBAAE;wBAAQ,IAAI,OAAO,WAAW;wBAAG;;;;;;;8BAEpC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAA8C,WAAU;sCAAsB;;;;;;sCAMxF,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAsB;;;;;;;;;;;;;;;;;;;;;;;AAO1D","debugId":null}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BookingForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call BookingForm() from the server but BookingForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking-form.tsx <module evaluation>\",\n    \"BookingForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,iEACA","debugId":null}},
    {"offset": {"line": 1883, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BookingForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call BookingForm() from the server but BookingForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking-form.tsx\",\n    \"BookingForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6CACA","debugId":null}},
    {"offset": {"line": 1897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1907, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1988, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iEACA","debugId":null}},
    {"offset": {"line": 2002, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6CACA","debugId":null}},
    {"offset": {"line": 2016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2026, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/prahova/prahova-page-layout.tsx"],"sourcesContent":["\nimport Image from 'next/image';\nimport type { Property } from '@/types';\nimport { PrahovaHeader } from './prahova-header'; // Specific header for Prahova\nimport { PrahovaFooter } from './prahova-footer'; // Specific footer for Prahova\nimport { BookingForm } from '@/components/booking-form'; // Reusable booking form\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Button } from '@/components/ui/button';\nimport { BedDouble, Bath, Users, Wifi, ParkingCircle, Tv, Utensils, Clock, CheckCircle, MapPin, Home, MountainSnow, Trees, ListChecks } from 'lucide-react'; // Added ListChecks icon\n\ninterface PrahovaPageLayoutProps {\n  property: Property;\n}\n\nexport function PrahovaPageLayout({ property }: PrahovaPageLayoutProps) {\n  const featuredImage = property.images.find(img => img.isFeatured) || property.images[0];\n  const galleryImages = property.images.filter(img => !img.isFeatured);\n\n  const amenityIcons: { [key: string]: React.ReactNode } = {\n    wifi: <Wifi className=\"h-4 w-4 mr-1\" />,\n    kitchen: <Utensils className=\"h-4 w-4 mr-1\" />,\n    parking: <ParkingCircle className=\"h-4 w-4 mr-1\" />,\n    tv: <Tv className=\"h-4 w-4 mr-1\" />,\n    fireplace: <Home className=\"h-4 w-4 mr-1\" />, // Consider a fire icon if available\n    'mountain view': <MountainSnow className=\"h-4 w-4 mr-1\" />,\n    garden: <Trees className=\"h-4 w-4 mr-1\" />,\n  };\n\n  return (\n    <div className=\"flex min-h-screen flex-col bg-[#f8f5f2]\"> {/* Specific background color */}\n      <PrahovaHeader /> {/* Use Prahova specific header */}\n      <main className=\"flex-grow container py-12 md:py-16\">\n         {/* Optional Hero Section specific to Prahova */}\n         <section className=\"mb-12 text-center\">\n            <h1 className=\"text-4xl font-bold tracking-tight text-gray-800 md:text-5xl lg:text-6xl mb-4\">\n              {property.name}\n            </h1>\n            <p className=\"text-lg text-gray-600\">\n              Your tranquil escape in the heart of the mountains.\n            </p>\n         </section>\n\n        <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-3 lg:gap-12\">\n          {/* Left Column: Images & Details */}\n          <div className=\"lg:col-span-2\">\n             <div className=\"mb-6 flex items-center text-muted-foreground\">\n              <MapPin className=\"h-4 w-4 mr-1 text-green-700\" />\n              <span>{property.location.city}, {property.location.state}, {property.location.country}</span>\n            </div>\n\n             {/* Image Gallery */}\n            <div id=\"gallery\" className=\"mb-8 grid grid-cols-1 gap-4 md:grid-cols-2\">\n              {featuredImage && (\n                 <div className=\"relative aspect-video w-full overflow-hidden rounded-lg shadow-md md:col-span-2\">\n                  <Image\n                    src={featuredImage.url}\n                    alt={featuredImage.alt || `Featured image of ${property.name}`}\n                    fill\n                    style={{objectFit: \"cover\"}}\n                    priority\n                    data-ai-hint={featuredImage['data-ai-hint']}\n                  />\n                </div>\n              )}\n              {galleryImages.map((image, index) => (\n                <div key={index} className=\"relative aspect-video w-full overflow-hidden rounded-lg shadow-md\">\n                  <Image\n                    src={image.url}\n                    alt={image.alt || `Gallery image ${index + 1} of ${property.name}`}\n                    fill\n                    style={{objectFit: \"cover\"}}\n                     data-ai-hint={image['data-ai-hint']}\n                  />\n                </div>\n              ))}\n               {/* Add more placeholders if fewer than 3 images */}\n              {Array.from({ length: Math.max(0, 2 - galleryImages.length) }).map((_, i) => (\n                <div key={`placeholder-${i}`} className=\"relative aspect-video w-full overflow-hidden rounded-lg shadow-md bg-muted flex items-center justify-center\">\n                   <Home className=\"h-12 w-12 text-muted-foreground/50\" />\n                </div>\n              ))}\n            </div>\n\n            <Separator className=\"my-8 border-gray-300\" />\n\n            {/* Property Details */}\n            <div className=\"prose max-w-none dark:prose-invert text-gray-700\">\n              <h2 className=\"text-2xl font-semibold mb-4 text-gray-800\">About this Chalet</h2>\n              <p className=\"mb-6\">{property.description}</p>\n\n              <h3 className=\"text-xl font-semibold mb-3 text-gray-800\">Key Features</h3>\n              <div className=\"grid grid-cols-2 gap-4 mb-6 text-sm md:grid-cols-3\">\n                <div className=\"flex items-center\"><Users className=\"h-4 w-4 mr-2 text-green-700\" /> Max {property.maxGuests} Guests</div>\n                <div className=\"flex items-center\"><BedDouble className=\"h-4 w-4 mr-2 text-green-700\" /> {property.bedrooms} Bedrooms</div>\n                <div className=\"flex items-center\"><BedDouble className=\"h-4 w-4 mr-2 text-green-700\" /> {property.beds} Beds</div>\n                <div className=\"flex items-center\"><Bath className=\"h-4 w-4 mr-2 text-green-700\" /> {property.bathrooms} Bathrooms</div>\n                <div className=\"flex items-center\"><Home className=\"h-4 w-4 mr-2 text-green-700\" /> {property.squareFeet} sqm</div>\n              </div>\n\n              <h3 className=\"text-xl font-semibold mb-3 text-gray-800\">Amenities</h3>\n              <ul className=\"grid grid-cols-2 gap-2 mb-6 text-sm list-none pl-0 md:grid-cols-3\">\n                {property.amenities.map((amenity) => (\n                  <li key={amenity} className=\"flex items-center\">\n                     {amenityIcons[amenity.toLowerCase()] || <CheckCircle className=\"h-4 w-4 mr-1 text-green-600\" />}\n                    {amenity}\n                  </li>\n                ))}\n              </ul>\n\n              <Separator className=\"my-6 border-gray-300\" />\n\n              {/* House Rules Section */}\n              <div id=\"house-rules\" className=\"mb-8\">\n                <h3 className=\"text-xl font-semibold mb-3 text-gray-800 flex items-center\">\n                  <ListChecks className=\"h-5 w-5 mr-2 text-green-700\" /> House Rules\n                </h3>\n                <ul className=\"list-none pl-0 space-y-2 text-sm\">\n                  {property.houseRules.map((rule, index) => (\n                    <li key={index} className=\"flex items-center\">\n                      <CheckCircle className=\"h-4 w-4 mr-2 text-green-700 shrink-0\" />\n                      {rule}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              <Separator className=\"my-6 border-gray-300\" />\n\n               <h3 className=\"text-xl font-semibold mb-3 text-gray-800\">Check-in / Check-out</h3>\n               <div className=\"flex gap-4 mb-6 text-sm\">\n                  <div className=\"flex items-center\"> <Clock className=\"h-4 w-4 mr-1 text-green-700\"/>Check-in: {property.checkInTime}</div>\n                  <div className=\"flex items-center\"> <Clock className=\"h-4 w-4 mr-1 text-green-700\"/>Check-out: {property.checkOutTime}</div>\n               </div>\n\n\n              <h3 className=\"text-xl font-semibold mb-3 text-gray-800\">Cancellation Policy</h3>\n              <p className=\"text-sm text-muted-foreground\">{property.cancellationPolicy}</p>\n            </div>\n\n            {/* Location Section Placeholder */}\n            <Separator className=\"my-8 border-gray-300\" />\n            <div id=\"location\" className=\"mb-8\">\n                <h2 className=\"text-2xl font-semibold mb-4 text-gray-800\">Location</h2>\n                 <p className=\"text-muted-foreground mb-4\">\n                    Located in {property.location.city}, {property.location.state}. Exact address provided after booking.\n                 </p>\n                 {/* Placeholder for map */}\n                <div className=\"aspect-video bg-muted rounded-lg flex items-center justify-center\">\n                    <MapPin className=\"h-12 w-12 text-muted-foreground/50\" />\n                    {/* In a real app, embed Google Maps here */}\n                </div>\n            </div>\n\n             {/* Contact Section Placeholder */}\n            <Separator className=\"my-8 border-gray-300\" />\n            <div id=\"contact\" className=\"mb-8\">\n                <h2 className=\"text-2xl font-semibold mb-4 text-gray-800\">Contact Host</h2>\n                 <p className=\"text-muted-foreground mb-4\">\n                    Have questions? Reach out to the property owner.\n                 </p>\n                 {/* Placeholder for contact form or details */}\n                 <Button variant=\"outline\">Contact Owner</Button>\n            </div>\n\n          </div>\n\n          {/* Right Column: Booking Card */}\n           <div className=\"lg:col-span-1\">\n            <Card id=\"booking-form\" className=\"sticky top-24 shadow-lg bg-white border-gray-200\">\n              <CardHeader>\n                <CardTitle className=\"text-xl\">\n                   <span className=\"text-2xl font-bold text-green-800\">${property.pricePerNight}</span> / night\n                </CardTitle>\n                 {/* Basic review placeholder */}\n                 <div className=\"text-sm text-gray-500 mt-1\">\n                    ⭐ 4.9 (15 reviews) {/* Replace with actual review data */}\n                 </div>\n              </CardHeader>\n              <CardContent>\n                 {/* Pass specific styling or props if needed */}\n                 <BookingForm property={property} />\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n      <PrahovaFooter /> {/* Use Prahova specific footer */}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAEA,qRAAkD,8BAA8B;AAChF,qRAAkD,8BAA8B;AAChF,yOAAyD,wBAAwB;AAEjF;AACA;AACA;AACA,yWAA6J,wBAAwB;AAArL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAMO,SAAS,kBAAkB,EAAE,QAAQ,EAA0B;IACpE,MAAM,gBAAgB,SAAS,MAAM,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,UAAU,KAAK,SAAS,MAAM,CAAC,EAAE;IACvF,MAAM,gBAAgB,SAAS,MAAM,CAAC,MAAM,CAAC,CAAA,MAAO,CAAC,IAAI,UAAU;IAEnE,MAAM,eAAmD;QACvD,oBAAM,8OAAC,kMAAA,CAAA,OAAI;YAAC,WAAU;;;;;;QACtB,uBAAS,8OAAC,0MAAA,CAAA,WAAQ;YAAC,WAAU;;;;;;QAC7B,uBAAS,8OAAC,wNAAA,CAAA,gBAAa;YAAC,WAAU;;;;;;QAClC,kBAAI,8OAAC,8LAAA,CAAA,KAAE;YAAC,WAAU;;;;;;QAClB,yBAAW,8OAAC,mMAAA,CAAA,OAAI;YAAC,WAAU;;;;;;QAC3B,+BAAiB,8OAAC,sNAAA,CAAA,eAAY;YAAC,WAAU;;;;;;QACzC,sBAAQ,8OAAC,oMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;IAC3B;IAEA,qBACE,8OAAC;QAAI,WAAU;;YAA0C;0BACvD,8OAAC,8JAAA,CAAA,gBAAa;;;;;YAAG;0BACjB,8OAAC;gBAAK,WAAU;;kCAEb,8OAAC;wBAAQ,WAAU;;0CAChB,8OAAC;gCAAG,WAAU;0CACX,SAAS,IAAI;;;;;;0CAEhB,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAKzC,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;;kDACZ,8OAAC;wCAAI,WAAU;;0DACd,8OAAC,0MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;0DAClB,8OAAC;;oDAAM,SAAS,QAAQ,CAAC,IAAI;oDAAC;oDAAG,SAAS,QAAQ,CAAC,KAAK;oDAAC;oDAAG,SAAS,QAAQ,CAAC,OAAO;;;;;;;;;;;;;kDAIvF,8OAAC;wCAAI,IAAG;wCAAU,WAAU;;4CACzB,+BACE,8OAAC;gDAAI,WAAU;0DACd,cAAA,8OAAC,6HAAA,CAAA,UAAK;oDACJ,KAAK,cAAc,GAAG;oDACtB,KAAK,cAAc,GAAG,IAAI,CAAC,kBAAkB,EAAE,SAAS,IAAI,EAAE;oDAC9D,IAAI;oDACJ,OAAO;wDAAC,WAAW;oDAAO;oDAC1B,QAAQ;oDACR,gBAAc,aAAa,CAAC,eAAe;;;;;;;;;;;4CAIhD,cAAc,GAAG,CAAC,CAAC,OAAO,sBACzB,8OAAC;oDAAgB,WAAU;8DACzB,cAAA,8OAAC,6HAAA,CAAA,UAAK;wDACJ,KAAK,MAAM,GAAG;wDACd,KAAK,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,IAAI,EAAE;wDAClE,IAAI;wDACJ,OAAO;4DAAC,WAAW;wDAAO;wDACzB,gBAAc,KAAK,CAAC,eAAe;;;;;;mDAN9B;;;;;4CAWX,MAAM,IAAI,CAAC;gDAAE,QAAQ,KAAK,GAAG,CAAC,GAAG,IAAI,cAAc,MAAM;4CAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACrE,8OAAC;oDAA6B,WAAU;8DACrC,cAAA,8OAAC,mMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;mDADT,CAAC,YAAY,EAAE,GAAG;;;;;;;;;;;kDAMhC,8OAAC,qIAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;kDAGrB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA4C;;;;;;0DAC1D,8OAAC;gDAAE,WAAU;0DAAQ,SAAS,WAAW;;;;;;0DAEzC,8OAAC;gDAAG,WAAU;0DAA2C;;;;;;0DACzD,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EAAoB,8OAAC,oMAAA,CAAA,QAAK;gEAAC,WAAU;;;;;;4DAAgC;4DAAM,SAAS,SAAS;4DAAC;;;;;;;kEAC7G,8OAAC;wDAAI,WAAU;;0EAAoB,8OAAC,gNAAA,CAAA,YAAS;gEAAC,WAAU;;;;;;4DAAgC;4DAAE,SAAS,QAAQ;4DAAC;;;;;;;kEAC5G,8OAAC;wDAAI,WAAU;;0EAAoB,8OAAC,gNAAA,CAAA,YAAS;gEAAC,WAAU;;;;;;4DAAgC;4DAAE,SAAS,IAAI;4DAAC;;;;;;;kEACxG,8OAAC;wDAAI,WAAU;;0EAAoB,8OAAC,kMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;4DAAgC;4DAAE,SAAS,SAAS;4DAAC;;;;;;;kEACxG,8OAAC;wDAAI,WAAU;;0EAAoB,8OAAC,mMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;4DAAgC;4DAAE,SAAS,UAAU;4DAAC;;;;;;;;;;;;;0DAG3G,8OAAC;gDAAG,WAAU;0DAA2C;;;;;;0DACzD,8OAAC;gDAAG,WAAU;0DACX,SAAS,SAAS,CAAC,GAAG,CAAC,CAAC,wBACvB,8OAAC;wDAAiB,WAAU;;4DACxB,YAAY,CAAC,QAAQ,WAAW,GAAG,kBAAI,8OAAC,2NAAA,CAAA,cAAW;gEAAC,WAAU;;;;;;4DAC/D;;uDAFM;;;;;;;;;;0DAOb,8OAAC,qIAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;0DAGrB,8OAAC;gDAAI,IAAG;gDAAc,WAAU;;kEAC9B,8OAAC;wDAAG,WAAU;;0EACZ,8OAAC,kNAAA,CAAA,aAAU;gEAAC,WAAU;;;;;;4DAAgC;;;;;;;kEAExD,8OAAC;wDAAG,WAAU;kEACX,SAAS,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC9B,8OAAC;gEAAe,WAAU;;kFACxB,8OAAC,2NAAA,CAAA,cAAW;wEAAC,WAAU;;;;;;oEACtB;;+DAFM;;;;;;;;;;;;;;;;0DAQf,8OAAC,qIAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;0DAEpB,8OAAC;gDAAG,WAAU;0DAA2C;;;;;;0DACzD,8OAAC;gDAAI,WAAU;;kEACZ,8OAAC;wDAAI,WAAU;;4DAAoB;0EAAC,8OAAC,oMAAA,CAAA,QAAK;gEAAC,WAAU;;;;;;4DAA+B;4DAAW,SAAS,WAAW;;;;;;;kEACnH,8OAAC;wDAAI,WAAU;;4DAAoB;0EAAC,8OAAC,oMAAA,CAAA,QAAK;gEAAC,WAAU;;;;;;4DAA+B;4DAAY,SAAS,YAAY;;;;;;;;;;;;;0DAIzH,8OAAC;gDAAG,WAAU;0DAA2C;;;;;;0DACzD,8OAAC;gDAAE,WAAU;0DAAiC,SAAS,kBAAkB;;;;;;;;;;;;kDAI3E,8OAAC,qIAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;kDACrB,8OAAC;wCAAI,IAAG;wCAAW,WAAU;;0DACzB,8OAAC;gDAAG,WAAU;0DAA4C;;;;;;0DACzD,8OAAC;gDAAE,WAAU;;oDAA6B;oDAC3B,SAAS,QAAQ,CAAC,IAAI;oDAAC;oDAAG,SAAS,QAAQ,CAAC,KAAK;oDAAC;;;;;;;0DAGlE,8OAAC;gDAAI,WAAU;0DACX,cAAA,8OAAC,0MAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;;;;;;;;;;;;kDAM1B,8OAAC,qIAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;kDACrB,8OAAC;wCAAI,IAAG;wCAAU,WAAU;;0DACxB,8OAAC;gDAAG,WAAU;0DAA4C;;;;;;0DACzD,8OAAC;gDAAE,WAAU;0DAA6B;;;;;;0DAI1C,8OAAC,kIAAA,CAAA,SAAM;gDAAC,SAAQ;0DAAU;;;;;;;;;;;;;;;;;;0CAMhC,8OAAC;gCAAI,WAAU;0CACd,cAAA,8OAAC,gIAAA,CAAA,OAAI;oCAAC,IAAG;oCAAe,WAAU;;sDAChC,8OAAC,gIAAA,CAAA,aAAU;;8DACT,8OAAC,gIAAA,CAAA,YAAS;oDAAC,WAAU;;sEAClB,8OAAC;4DAAK,WAAU;;gEAAoC;gEAAE,SAAS,aAAa;;;;;;;wDAAQ;;;;;;;8DAGtF,8OAAC;oDAAI,WAAU;8DAA6B;;;;;;;;;;;;sDAI/C,8OAAC,gIAAA,CAAA,cAAW;sDAET,cAAA,8OAAC,qIAAA,CAAA,cAAW;gDAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMlC,8OAAC,8JAAA,CAAA,gBAAa;;;;;YAAG;;;;;;;AAGvB","debugId":null}},
    {"offset": {"line": 2764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/coltei/coltei-header.tsx"],"sourcesContent":["\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\nimport { Menu, Home, Building, Camera, Map, Phone, ListChecks } from 'lucide-react'; // Specific icons, added ListChecks\n\nexport function ColteiHeader() {\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b bg-white/90 backdrop-blur supports-[backdrop-filter]:bg-white/70 shadow-sm\">\n      <div className=\"container flex h-16 items-center justify-between\">\n        <Link href=\"/properties/coltei-apartment-bucharest\" className=\"flex items-center gap-2\">\n           {/* Coltei Specific Logo/Icon */}\n           <Building className=\"h-7 w-7 text-blue-700\" />\n          <span className=\"text-xl font-bold text-gray-800\">Coltei Apartment</span>\n        </Link>\n\n        {/* Desktop Navigation */}\n        <nav className=\"hidden items-center gap-6 md:flex\">\n          <Link href=\"/properties/coltei-apartment-bucharest\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Home\n          </Link>\n          <Link href=\"#gallery\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Gallery\n          </Link>\n           <Link href=\"#house-rules\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Rules\n          </Link>\n           <Link href=\"#location\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Location\n          </Link>\n           <Link href=\"#contact\" className=\"text-sm font-medium text-gray-600 transition-colors hover:text-gray-900\">\n            Contact\n          </Link>\n           {/* Changed: Wrap Button inside Link */}\n           <Link href=\"#booking-form\">\n             <Button size=\"sm\" className=\"bg-blue-700 hover:bg-blue-800 text-white\">\n               Book Now\n             </Button>\n           </Link>\n        </nav>\n\n        {/* Mobile Navigation */}\n        <Sheet>\n          <SheetTrigger asChild className=\"md:hidden\">\n            <Button variant=\"outline\" size=\"icon\" className=\"border-gray-300\">\n              <Menu className=\"h-5 w-5 text-gray-700\" />\n              <span className=\"sr-only\">Toggle Menu</span>\n            </Button>\n          </SheetTrigger>\n          <SheetContent side=\"right\" className=\"bg-white\">\n             <Link href=\"/properties/coltei-apartment-bucharest\" className=\"flex items-center gap-2 mb-8\">\n                <Building className=\"h-7 w-7 text-blue-700\" />\n               <span className=\"text-xl font-bold text-gray-800\">Coltei Apartment</span>\n             </Link>\n            <nav className=\"grid gap-6 text-lg font-medium\">\n              <Link href=\"/properties/coltei-apartment-bucharest\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-blue-700\">\n                <Home className=\"h-5 w-5\" />\n                Home\n              </Link>\n              <Link href=\"#gallery\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-blue-700\">\n                <Camera className=\"h-5 w-5\" />\n                Gallery\n              </Link>\n               <Link href=\"#house-rules\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-blue-700\">\n                 <ListChecks className=\"h-5 w-5\" />\n                 Rules\n               </Link>\n               <Link href=\"#location\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-blue-700\">\n                <Map className=\"h-5 w-5\" />\n                Location\n              </Link>\n               <Link href=\"#contact\" className=\"flex items-center gap-4 px-2.5 text-gray-700 hover:text-blue-700\">\n                <Phone className=\"h-5 w-5\" />\n                Contact\n              </Link>\n              {/* Changed: Wrap Button inside Link */}\n              <Link href=\"#booking-form\">\n                 <Button size=\"lg\" className=\"mt-4 bg-blue-700 hover:bg-blue-800 text-white\">\n                   Book Now\n                 </Button>\n              </Link>\n            </nav>\n          </SheetContent>\n        </Sheet>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,gVAAqF,mCAAmC;AAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAyC,WAAU;;sCAE3D,8OAAC,0MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACrB,8OAAC;4BAAK,WAAU;sCAAkC;;;;;;;;;;;;8BAIpD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAyC,WAAU;sCAA0E;;;;;;sCAGxI,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;sCAA0E;;;;;;sCAGzG,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAe,WAAU;sCAA0E;;;;;;sCAG9G,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAY,WAAU;sCAA0E;;;;;;sCAG3G,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;sCAA0E;;;;;;sCAI1G,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAK,WAAU;0CAA2C;;;;;;;;;;;;;;;;;8BAO5E,8OAAC,iIAAA,CAAA,QAAK;;sCACJ,8OAAC,iIAAA,CAAA,eAAY;4BAAC,OAAO;4BAAC,WAAU;sCAC9B,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;gCAAO,WAAU;;kDAC9C,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;sCAG9B,8OAAC,iIAAA,CAAA,eAAY;4BAAC,MAAK;4BAAQ,WAAU;;8CAClC,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAyC,WAAU;;sDAC3D,8OAAC,0MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACrB,8OAAC;4CAAK,WAAU;sDAAkC;;;;;;;;;;;;8CAErD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAyC,WAAU;;8DAC5D,8OAAC,mMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG9B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAW,WAAU;;8DAC9B,8OAAC,sMAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG/B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAe,WAAU;;8DAClC,8OAAC,kNAAA,CAAA,aAAU;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAGpC,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAY,WAAU;;8DAChC,8OAAC,gMAAA,CAAA,MAAG;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG5B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAW,WAAU;;8DAC/B,8OAAC,oMAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAI/B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDACR,cAAA,8OAAC,kIAAA,CAAA,SAAM;gDAAC,MAAK;gDAAK,WAAU;0DAAgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU7F","debugId":null}},
    {"offset": {"line": 3094, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/coltei/coltei-footer.tsx"],"sourcesContent":["import Link from 'next/link';\n\nexport function ColteiFooter() {\n  return (\n    <footer className=\"border-t bg-gray-50\">\n      <div className=\"container py-8 text-center text-sm text-gray-500 md:flex md:items-center md:justify-between md:py-10\">\n        <p>&copy; {new Date().getFullYear()} Coltei Apartment Bucharest. All rights reserved.</p>\n        {/* Optional: Add specific links for Coltei */}\n        <nav className=\"mt-4 flex justify-center gap-4 md:mt-0\">\n          <Link href=\"/properties/coltei-apartment-bucharest#contact\" className=\"hover:text-gray-800\">\n            Contact Us\n          </Link>\n           {/* <Link href=\"/terms-coltei\" className=\"hover:text-gray-800\">\n            Terms\n          </Link> */}\n           <Link href=\"/\" className=\"hover:text-gray-800\">\n             Main Site\n           </Link>\n        </nav>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;;wBAAE;wBAAQ,IAAI,OAAO,WAAW;wBAAG;;;;;;;8BAEpC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAiD,WAAU;sCAAsB;;;;;;sCAM3F,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAsB;;;;;;;;;;;;;;;;;;;;;;;AAO1D","debugId":null}},
    {"offset": {"line": 3163, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/coltei/coltei-page-layout.tsx"],"sourcesContent":["\nimport Image from 'next/image';\nimport type { Property } from '@/types';\nimport { ColteiHeader } from './coltei-header'; // Specific header for Coltei\nimport { ColteiFooter } from './coltei-footer'; // Specific footer for Coltei\nimport { BookingForm } from '@/components/booking-form'; // Reusable booking form\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Button } from '@/components/ui/button';\nimport { BedDouble, Bath, Users, Wifi, ParkingCircle, Tv, Utensils, Clock, CheckCircle, MapPin, Home, Building, Wind, ListChecks } from 'lucide-react'; // Added specific icons and ListChecks\n\ninterface ColteiPageLayoutProps {\n  property: Property;\n}\n\nexport function ColteiPageLayout({ property }: ColteiPageLayoutProps) {\n  const featuredImage = property.images.find(img => img.isFeatured) || property.images[0];\n  const galleryImages = property.images.filter(img => !img.isFeatured);\n\n  const amenityIcons: { [key: string]: React.ReactNode } = {\n    wifi: <Wifi className=\"h-4 w-4 mr-1\" />,\n    kitchen: <Utensils className=\"h-4 w-4 mr-1\" />,\n    tv: <Tv className=\"h-4 w-4 mr-1\" />,\n    'air conditioning': <Wind className=\"h-4 w-4 mr-1\" />,\n    'washer/dryer': <CheckCircle className=\"h-4 w-4 mr-1 text-blue-600\" />, // Example specific icon\n    elevator: <Building className=\"h-4 w-4 mr-1\" />,\n  };\n\n  return (\n    <div className=\"flex min-h-screen flex-col bg-blue-50\"> {/* Specific background */}\n      <ColteiHeader /> {/* Use Coltei specific header */}\n      <main className=\"flex-grow container py-12 md:py-16\">\n        {/* Optional Hero Section specific to Coltei */}\n         <section className=\"mb-12 text-center\">\n            <h1 className=\"text-4xl font-bold tracking-tight text-blue-900 md:text-5xl lg:text-6xl mb-4\">\n              {property.name}\n            </h1>\n            <p className=\"text-lg text-blue-700\">\n              Your modern & central base to explore Bucharest.\n            </p>\n         </section>\n\n        <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-3 lg:gap-12\">\n          {/* Left Column: Images & Details */}\n          <div className=\"lg:col-span-2\">\n             <div className=\"mb-6 flex items-center text-muted-foreground\">\n              <MapPin className=\"h-4 w-4 mr-1 text-blue-700\" />\n              <span>{property.location.city}, {property.location.state}, {property.location.country}</span>\n            </div>\n\n             {/* Image Gallery */}\n            <div id=\"gallery\" className=\"mb-8 grid grid-cols-1 gap-4 md:grid-cols-2\">\n              {featuredImage && (\n                 <div className=\"relative aspect-video w-full overflow-hidden rounded-lg shadow-md md:col-span-2\">\n                  <Image\n                    src={featuredImage.url}\n                    alt={featuredImage.alt || `Featured image of ${property.name}`}\n                    fill\n                    style={{objectFit: \"cover\"}}\n                    priority\n                    data-ai-hint={featuredImage['data-ai-hint']}\n                  />\n                </div>\n              )}\n              {galleryImages.map((image, index) => (\n                <div key={index} className=\"relative aspect-video w-full overflow-hidden rounded-lg shadow-md\">\n                  <Image\n                    src={image.url}\n                    alt={image.alt || `Gallery image ${index + 1} of ${property.name}`}\n                    fill\n                    style={{objectFit: \"cover\"}}\n                     data-ai-hint={image['data-ai-hint']}\n                  />\n                </div>\n              ))}\n               {/* Add more placeholders if fewer than 3 images */}\n              {Array.from({ length: Math.max(0, 2 - galleryImages.length) }).map((_, i) => (\n                <div key={`placeholder-${i}`} className=\"relative aspect-video w-full overflow-hidden rounded-lg shadow-md bg-muted flex items-center justify-center\">\n                   <Building className=\"h-12 w-12 text-muted-foreground/50\" />\n                </div>\n              ))}\n            </div>\n\n            <Separator className=\"my-8 border-blue-200\" />\n\n            {/* Property Details */}\n            <div className=\"prose max-w-none dark:prose-invert text-gray-700\">\n              <h2 className=\"text-2xl font-semibold mb-4 text-blue-900\">About this Apartment</h2>\n              <p className=\"mb-6\">{property.description}</p>\n\n              <h3 className=\"text-xl font-semibold mb-3 text-blue-900\">Key Features</h3>\n              <div className=\"grid grid-cols-2 gap-4 mb-6 text-sm md:grid-cols-3\">\n                <div className=\"flex items-center\"><Users className=\"h-4 w-4 mr-2 text-blue-700\" /> Max {property.maxGuests} Guests</div>\n                <div className=\"flex items-center\"><BedDouble className=\"h-4 w-4 mr-2 text-blue-700\" /> {property.bedrooms} Bedrooms</div>\n                <div className=\"flex items-center\"><BedDouble className=\"h-4 w-4 mr-2 text-blue-700\" /> {property.beds} Beds</div>\n                <div className=\"flex items-center\"><Bath className=\"h-4 w-4 mr-2 text-blue-700\" /> {property.bathrooms} Bathrooms</div>\n                <div className=\"flex items-center\"><Home className=\"h-4 w-4 mr-2 text-blue-700\" /> {property.squareFeet} sqm</div>\n              </div>\n\n              <h3 className=\"text-xl font-semibold mb-3 text-blue-900\">Amenities</h3>\n              <ul className=\"grid grid-cols-2 gap-2 mb-6 text-sm list-none pl-0 md:grid-cols-3\">\n                {property.amenities.map((amenity) => (\n                  <li key={amenity} className=\"flex items-center\">\n                     {amenityIcons[amenity.toLowerCase()] || <CheckCircle className=\"h-4 w-4 mr-1 text-blue-600\" />}\n                    {amenity}\n                  </li>\n                ))}\n              </ul>\n\n               <Separator className=\"my-6 border-blue-200\" />\n\n               {/* House Rules Section */}\n               <div id=\"house-rules\" className=\"mb-8\">\n                  <h3 className=\"text-xl font-semibold mb-3 text-blue-900 flex items-center\">\n                     <ListChecks className=\"h-5 w-5 mr-2 text-blue-700\" /> House Rules\n                  </h3>\n                  <ul className=\"list-none pl-0 space-y-2 text-sm\">\n                    {property.houseRules.map((rule, index) => (\n                      <li key={index} className=\"flex items-center\">\n                        <CheckCircle className=\"h-4 w-4 mr-2 text-blue-700 shrink-0\" />\n                        {rule}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n               <Separator className=\"my-6 border-blue-200\" />\n\n               <h3 className=\"text-xl font-semibold mb-3 text-blue-900\">Check-in / Check-out</h3>\n               <div className=\"flex gap-4 mb-6 text-sm\">\n                  <div className=\"flex items-center\"> <Clock className=\"h-4 w-4 mr-1 text-blue-700\"/>Check-in: {property.checkInTime}</div>\n                  <div className=\"flex items-center\"> <Clock className=\"h-4 w-4 mr-1 text-blue-700\"/>Check-out: {property.checkOutTime}</div>\n               </div>\n\n\n              <h3 className=\"text-xl font-semibold mb-3 text-blue-900\">Cancellation Policy</h3>\n              <p className=\"text-sm text-muted-foreground\">{property.cancellationPolicy}</p>\n            </div>\n\n             {/* Location Section Placeholder */}\n            <Separator className=\"my-8 border-blue-200\" />\n            <div id=\"location\" className=\"mb-8\">\n                <h2 className=\"text-2xl font-semibold mb-4 text-blue-900\">Location</h2>\n                 <p className=\"text-muted-foreground mb-4\">\n                    Located in {property.location.city}, {property.location.state}. Exact address provided after booking.\n                 </p>\n                 {/* Placeholder for map */}\n                <div className=\"aspect-video bg-muted rounded-lg flex items-center justify-center\">\n                    <MapPin className=\"h-12 w-12 text-muted-foreground/50\" />\n                    {/* In a real app, embed Google Maps here */}\n                </div>\n            </div>\n\n             {/* Contact Section Placeholder */}\n            <Separator className=\"my-8 border-blue-200\" />\n            <div id=\"contact\" className=\"mb-8\">\n                <h2 className=\"text-2xl font-semibold mb-4 text-blue-900\">Contact Host</h2>\n                 <p className=\"text-muted-foreground mb-4\">\n                    Have questions? Reach out to the property owner.\n                 </p>\n                 {/* Placeholder for contact form or details */}\n                 <Button variant=\"outline\">Contact Owner</Button>\n            </div>\n          </div>\n\n          {/* Right Column: Booking Card */}\n           <div className=\"lg:col-span-1\">\n            <Card id=\"booking-form\" className=\"sticky top-24 shadow-lg bg-white border-blue-100\">\n              <CardHeader>\n                <CardTitle className=\"text-xl\">\n                   <span className=\"text-2xl font-bold text-blue-800\">${property.pricePerNight}</span> / night\n                </CardTitle>\n                 {/* Basic review placeholder */}\n                 <div className=\"text-sm text-gray-500 mt-1\">\n                    ⭐ 4.7 (21 reviews) {/* Replace with actual review data */}\n                 </div>\n              </CardHeader>\n              <CardContent>\n                 {/* Pass specific styling or props if needed */}\n                 <BookingForm property={property} />\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n      <ColteiFooter /> {/* Use Coltei specific footer */}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3893, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\nimport { Menu, Home, Info, User } from 'lucide-react'; // Adjusted icons\n\nexport function Header() {\n  // This header might become very minimal if each property page has its own navigation.\n  // Or it could be a global header with links to properties, login, etc.\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container flex h-16 items-center justify-between\">\n        <Link href=\"/\" className=\"flex items-center gap-2\">\n           {/* Placeholder SVG for logo or use a global logo */}\n           <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6 text-primary\">\n            <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n            <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n          </svg>\n          {/* Use a global brand name or remove if property pages handle branding */}\n          <span className=\"text-xl font-bold text-primary\">RentalSpot</span>\n        </Link>\n\n        {/* Desktop Navigation - Simplified */}\n        <nav className=\"hidden items-center gap-6 md:flex\">\n          <Link href=\"/\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n            Home\n          </Link>\n           {/* Link directly to properties */}\n           <Link href=\"/properties/prahova-mountain-chalet\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n             Prahova Chalet\n           </Link>\n           <Link href=\"/properties/coltei-apartment-bucharest\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n             Coltei Apartment\n           </Link>\n          {/* Add other global links like About, Contact, Login */}\n          {/* <Link href=\"/about\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n            About\n          </Link> */}\n           {/* Changed: Wrap Button inside Link */}\n           {/* <Link href=\"/login\">\n             <Button variant=\"outline\">\n               Login\n             </Button>\n           </Link> */}\n        </nav>\n\n        {/* Mobile Navigation */}\n        <Sheet>\n          <SheetTrigger asChild className=\"md:hidden\">\n            <Button variant=\"outline\" size=\"icon\">\n              <Menu className=\"h-5 w-5\" />\n              <span className=\"sr-only\">Toggle Menu</span>\n            </Button>\n          </SheetTrigger>\n          <SheetContent side=\"right\">\n             {/* Keep global branding in mobile menu */}\n             <Link href=\"/\" className=\"flex items-center gap-2 mb-8\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6 text-primary\">\n                  <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                  <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n               </svg>\n               <span className=\"text-xl font-bold text-primary\">RentalSpot</span>\n            </Link>\n            <nav className=\"grid gap-6 text-lg font-medium\">\n              <Link href=\"/\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                <Home className=\"h-5 w-5\" />\n                Home\n              </Link>\n               <Link href=\"/properties/prahova-mountain-chalet\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                 {/* Use a relevant icon */}\n                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-5 w-5\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/><polyline points=\"9 22 9 12 15 12 15 22\"/></svg>\n                 Prahova Chalet\n               </Link>\n               <Link href=\"/properties/coltei-apartment-bucharest\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                 {/* Use a relevant icon */}\n                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-5 w-5\"><path d=\"M12 22a7 7 0 0 0 7-7c0-2-1-3-1-3l-4-4-4 4s-1 1-1 3a7 7 0 0 0 7 7Z\"/><path d=\"M10.76 14.55a.5.5 0 0 0 .74.71l1.09-1.04a.5.5 0 1 0-.7-.74l-1.04 1.09ZM12.5 16.5a.5.5 0 0 0 .5.5h.5a.5.5 0 0 0 .5-.5v-.5a.5.5 0 0 0-.5-.5h-.5a.5.5 0 0 0-.5.5Zm3.79-1.91a.5.5 0 0 0 .71-.7l-1.04-1.09a.5.5 0 1 0-.74.7l1.09 1.04Z\"/></svg>\n                 Coltei Apartment\n               </Link>\n              {/* Add other global links */}\n              {/* <Link href=\"/about\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                <Info className=\"h-5 w-5\" />\n                About\n              </Link> */}\n              {/* <Link href=\"/login\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                <User className=\"h-5 w-5\" />\n                Login\n              </Link> */}\n            </nav>\n          </SheetContent>\n        </Sheet>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA,gVAAuD,iBAAiB;AAAxE;;;;;;AAEO,SAAS;IACd,sFAAsF;IACtF,uEAAuE;IACvE,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCAEtB,8OAAC;4BAAI,OAAM;4BAA6B,SAAQ;4BAAY,MAAK;4BAAO,QAAO;4BAAe,aAAY;4BAAI,eAAc;4BAAQ,gBAAe;4BAAQ,WAAU;;8CACpK,8OAAC;oCAAK,GAAE;;;;;;8CACR,8OAAC;oCAAS,QAAO;;;;;;;;;;;;sCAGnB,8OAAC;4BAAK,WAAU;sCAAiC;;;;;;;;;;;;8BAInD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAiF;;;;;;sCAIzG,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAsC,WAAU;sCAAiF;;;;;;sCAG5I,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAyC,WAAU;sCAAiF;;;;;;;;;;;;8BAgBlJ,8OAAC,iIAAA,CAAA,QAAK;;sCACJ,8OAAC,iIAAA,CAAA,eAAY;4BAAC,OAAO;4BAAC,WAAU;sCAC9B,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;;kDAC7B,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;sCAG9B,8OAAC,iIAAA,CAAA,eAAY;4BAAC,MAAK;;8CAEhB,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAI,WAAU;;sDACvB,8OAAC;4CAAI,OAAM;4CAA6B,SAAQ;4CAAY,MAAK;4CAAO,QAAO;4CAAe,aAAY;4CAAI,eAAc;4CAAQ,gBAAe;4CAAQ,WAAU;;8DAClK,8OAAC;oDAAK,GAAE;;;;;;8DACR,8OAAC;oDAAS,QAAO;;;;;;;;;;;;sDAEpB,8OAAC;4CAAK,WAAU;sDAAiC;;;;;;;;;;;;8CAEpD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAI,WAAU;;8DACvB,8OAAC,mMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG7B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAsC,WAAU;;8DAEzD,8OAAC;oDAAI,OAAM;oDAA6B,OAAM;oDAAK,QAAO;oDAAK,SAAQ;oDAAY,MAAK;oDAAO,QAAO;oDAAe,aAAY;oDAAI,eAAc;oDAAQ,gBAAe;oDAAQ,WAAU;;sEAAU,8OAAC;4DAAK,GAAE;;;;;;sEAAkD,8OAAC;4DAAS,QAAO;;;;;;;;;;;;gDAA+B;;;;;;;sDAGlT,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAyC,WAAU;;8DAE5D,8OAAC;oDAAI,OAAM;oDAA6B,OAAM;oDAAK,QAAO;oDAAK,SAAQ;oDAAY,MAAK;oDAAO,QAAO;oDAAe,aAAY;oDAAI,eAAc;oDAAQ,gBAAe;oDAAQ,WAAU;;sEAAU,8OAAC;4DAAK,GAAE;;;;;;sEAAqE,8OAAC;4DAAK,GAAE;;;;;;;;;;;;gDAA2O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBvhB","debugId":null}},
    {"offset": {"line": 4228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/properties/%5Bslug%5D/page.tsx"],"sourcesContent":["\n// Removed 'use client' directive\n\nimport Image from 'next/image';\nimport { notFound } from 'next/navigation';\nimport type { Property } from '@/types';\nimport { PrahovaPageLayout } from '@/components/property/prahova/prahova-page-layout';\nimport { ColteiPageLayout } from '@/components/property/coltei/coltei-page-layout';\nimport { Header } from '@/components/header'; // Assuming a generic header might still be needed, adjust if not\nimport { collection, query, where, getDocs, Timestamp } from 'firebase/firestore'; // Added Timestamp\nimport { db } from '@/lib/firebase'; // Import Firestore instance\n\n\n// Function to get property data by slug (replace with actual data fetching)\nasync function getPropertyBySlug(slug: string): Promise<Property | undefined> {\n    try {\n        // **** Use Client SDK ****\n        const propertiesCollection = collection(db, 'properties');\n        const q = query(propertiesCollection, where('slug', '==', slug));\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n            const doc = querySnapshot.docs[0];\n            const data = doc.data();\n\n            // Function to safely convert Firestore Timestamps or objects to Dates\n            const convertToDate = (timestamp: any): Date | undefined => {\n                if (timestamp instanceof Timestamp) {\n                    return timestamp.toDate();\n                } else if (timestamp && typeof timestamp._seconds === 'number' && typeof timestamp._nanoseconds === 'number') {\n                    // Handle object format if needed (e.g., from JSON import)\n                    return new Timestamp(timestamp._seconds, timestamp._nanoseconds).toDate();\n                }\n                 return undefined; // Return undefined if it's not a recognizable timestamp format\n            };\n\n            // Ensure Timestamps are converted if they exist and are in Firestore Timestamp format or object format\n            const propertyData = {\n                 id: doc.id,\n                ...data,\n                 createdAt: convertToDate(data.createdAt),\n                 updatedAt: convertToDate(data.updatedAt),\n                 // Handle nested timestamps if necessary, e.g., ratings.lastUpdated\n            } as Property;\n\n            // Ensure houseRules is always an array\n             if (!Array.isArray(propertyData.houseRules)) {\n               propertyData.houseRules = [];\n             }\n\n             // Ensure amenities is always an array\n             if (!Array.isArray(propertyData.amenities)) {\n                propertyData.amenities = [];\n             }\n\n              // Ensure images is always an array\n             if (!Array.isArray(propertyData.images)) {\n                propertyData.images = [];\n             }\n\n\n            return propertyData;\n        } else {\n            console.warn(`[getPropertyBySlug] Property with slug '${slug}' not found.`);\n            return undefined;\n        }\n    } catch (error) {\n        console.error(`❌ Error fetching property with slug ${slug}:`, error);\n        return undefined;\n    }\n}\n\n\ninterface PropertyDetailsPageProps {\n  params: { slug: string };\n}\n\n\n// Optional: Generate static paths if using SSG\n// Consider if this is still needed or if ISR/SSR is better with dynamic data\nexport async function generateStaticParams() {\n  try {\n      const propertiesCollection = collection(db, 'properties');\n      const snapshot = await getDocs(propertiesCollection);\n\n      if (snapshot.empty) {\n        console.warn(\"[generateStaticParams] No properties found in Firestore to generate static params.\");\n        return [];\n      }\n\n      const params = snapshot.docs.map(doc => ({\n          slug: doc.data().slug as string, // Assuming slug exists and is a string\n      })).filter(param => !!param.slug); // Filter out entries without a slug\n\n      // console.log(\"[generateStaticParams] Generated slugs:\", params.map(p => p.slug));\n      return params;\n  } catch (error) {\n       console.error(\"❌ Error fetching properties for generateStaticParams:\", error);\n       return []; // Return empty array on error\n  }\n}\n\n\nexport default async function PropertyDetailsPage({ params }: PropertyDetailsPageProps) {\n  // console.log(`[PropertyDetailsPage] Fetching property for slug: ${params.slug}`);\n  const property = await getPropertyBySlug(params.slug);\n\n  if (!property) {\n    console.warn(`[PropertyDetailsPage] Property not found for slug: ${params.slug}. Rendering 404.`);\n    notFound();\n  }\n\n  // console.log(`[PropertyDetailsPage] Property loaded from Firestore: ${property.name} (ID: ${property.id})`);\n\n\n  // Conditionally render the layout based on the property slug\n  const LayoutComponent = property.slug === 'prahova-mountain-chalet'\n    ? PrahovaPageLayout\n    : property.slug === 'coltei-apartment-bucharest'\n      ? ColteiPageLayout\n      : null; // Fallback or default layout if needed\n\n  if (LayoutComponent) {\n    return (\n       <div>\n         <LayoutComponent property={property} />\n       </div>\n    );\n  }\n\n\n  // Fallback for properties without a specific layout (or could redirect/show error)\n   console.warn(`[PropertyDetailsPage] No specific layout found for slug: ${params.slug}. Rendering generic fallback.`);\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n       <Header />\n      <main className=\"flex-grow container py-12 md:py-16\">\n        <h1>{property.name}</h1>\n        <p>Generic property page - Layout not defined.</p>\n         {/* Basic rendering of property details */}\n         <pre>{JSON.stringify(property, null, 2)}</pre>\n      </main>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}