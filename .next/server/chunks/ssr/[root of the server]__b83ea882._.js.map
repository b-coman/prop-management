{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\n// src/lib/firebase.ts\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n// Remove dotenv import - let scripts handle their own env loading if needed outside Next.js context\n// import * as dotenv from 'dotenv';\n// import * as path from 'path';\n// import { getAuth } from \"firebase/auth\"; // Add if using Firebase Auth\n// import { getStorage } from \"firebase/storage\"; // Add if using Firebase Storage\n\n// Load environment variables from .env.local at the project root\n// dotenv.config({ path: path.resolve(process.cwd(), '.env.local') }); // No longer needed here, Next.js handles it\n\n// Your web app's Firebase configuration\n// Loaded from environment variables automatically by Next.js\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  // measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID // Optional: for Analytics\n};\n\n// Remove the checkEnvVars function, as Next.js handles env loading for the app runtime.\n// The script now uses Admin SDK and verifies its own specific requirements.\n/*\nfunction checkEnvVars() {\n    // ... (removed) ...\n}\ncheckEnvVars();\n*/\n\n// Initialize Firebase Client SDK\n// Use getApps() to ensure initialization only happens once within the Next.js app runtime\nlet app;\nif (getApps().length === 0) {\n    // Check if critical client config vars are present before initializing client SDK\n    if (!firebaseConfig.apiKey || !firebaseConfig.projectId) {\n        console.error(\"❌ Client Firebase Config Missing: NEXT_PUBLIC_FIREBASE_API_KEY or NEXT_PUBLIC_FIREBASE_PROJECT_ID is missing in environment variables. Client SDK cannot initialize.\");\n        // Throwing here might break the app build/runtime if env vars aren't set during build phase\n        // Consider logging the error and letting parts of the app fail gracefully if Firebase is needed client-side\n        // throw new Error(\"Missing critical client Firebase configuration. Check environment variables.\");\n    } else {\n        try {\n             app = initializeApp(firebaseConfig);\n             // console.log(\"✅ Firebase Client SDK initialized successfully.\"); // Less verbose logging\n        } catch (initError) {\n            console.error(\"❌ Firebase Client SDK initialization failed:\", initError);\n            // Handle or re-throw the initialization error appropriately\n            // throw initError; // Depending on whether the app can function without Firebase client\n        }\n    }\n} else {\n    app = getApp();\n    // console.log(\"ℹ️ Firebase Client SDK app already initialized.\");\n}\n\n// Initialize Firestore Client SDK only if the app was successfully initialized or retrieved\nlet db;\nif (app) {\n    try {\n        db = getFirestore(app);\n        // console.log(\"✅ Firestore Client SDK initialized successfully.\");\n    } catch (firestoreError) {\n         console.error(\"❌ Firestore Client SDK initialization failed:\", firestoreError);\n         // Handle or re-throw the Firestore initialization error\n    }\n} else {\n     console.error(\"❌ Cannot initialize Firestore Client SDK because Firebase app is not available.\");\n}\n\n// const auth = getAuth(app); // Initialize Auth if needed\n// const storage = getStorage(app); // Initialize Storage if needed\n\n// Export only the client SDK instances needed by the application runtime\nexport { app, db /*, auth, storage */ };\n"],"names":[],"mappings":"AACA,sBAAsB;;;;;AACtB;AAAA;AACA;AAAA;;;AACA,oGAAoG;AACpG,oCAAoC;AACpC,gCAAgC;AAChC,yEAAyE;AACzE,kFAAkF;AAElF,iEAAiE;AACjE,mHAAmH;AAEnH,wCAAwC;AACxC,6DAA6D;AAC7D,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AAEP;AAEA,wFAAwF;AACxF,4EAA4E;AAC5E;;;;;AAKA,GAEA,iCAAiC;AACjC,0FAA0F;AAC1F,IAAI;AACJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IACxB,kFAAkF;IAClF,IAAI,CAAC,eAAe,MAAM,IAAI,CAAC,eAAe,SAAS,EAAE;QACrD,QAAQ,KAAK,CAAC;IACd,4FAA4F;IAC5F,4GAA4G;IAC5G,mGAAmG;IACvG,OAAO;QACH,IAAI;YACC,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,0FAA0F;QAC/F,EAAE,OAAO,WAAW;YAChB,QAAQ,KAAK,CAAC,gDAAgD;QAC9D,4DAA4D;QAC5D,wFAAwF;QAC5F;IACJ;AACJ,OAAO;IACH,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACX,kEAAkE;AACtE;AAEA,4FAA4F;AAC5F,IAAI;AACJ,IAAI,KAAK;IACL,IAAI;QACA,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;IAClB,mEAAmE;IACvE,EAAE,OAAO,gBAAgB;QACpB,QAAQ,KAAK,CAAC,iDAAiD;IAC/D,wDAAwD;IAC7D;AACJ,OAAO;IACF,QAAQ,KAAK,CAAC;AACnB","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/booking-sync.ts"],"sourcesContent":["/**\n * @fileoverview Service functions for synchronizing booking availability with external platforms like Airbnb and Booking.com.\n * IMPORTANT: These functions currently contain placeholder logic and require actual API integration.\n */\n'use server';\n\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Property } from '@/types'; // Assuming Property type includes external IDs\n\n/**\n * Represents the details of an Airbnb listing relevant for sync.\n */\nexport interface AirbnbListing {\n  listingId: string;\n  isAvailable: boolean;\n  pricePerNight: number;\n}\n\n/**\n * Represents the details of a Booking.com listing relevant for sync.\n */\nexport interface BookingComListing {\n  listingId: string;\n  isAvailable: boolean;\n  pricePerNight: number;\n}\n\n/**\n * Fetches property details including external listing IDs.\n *\n * @param propertyId The ID of the property to fetch.\n * @returns The Property object or null if not found.\n */\nexport async function getPropertyForSync(propertyId: string): Promise<Property | null> {\n    const propertyRef = doc(db, 'properties', propertyId);\n    try {\n        const docSnap = await getDoc(propertyRef);\n        if (docSnap.exists()) {\n            return { id: docSnap.id, ...docSnap.data() } as Property;\n        } else {\n            console.warn(`[getPropertyForSync] Property document not found in Firestore: properties/${propertyId}`);\n            return null;\n        }\n    } catch (error) {\n         console.error(`❌ [getPropertyForSync] Error fetching property ${propertyId}:`, error);\n         return null;\n    }\n}\n\n\n/**\n * Asynchronously retrieves Airbnb listing details.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Airbnb API call.\n *\n * @param listingId The Airbnb listing ID.\n * @returns A promise that resolves to an AirbnbListing object.\n */\nexport async function getAirbnbListing(listingId: string): Promise<AirbnbListing> {\n  console.log(`[Sync Placeholder] Fetching Airbnb listing details for ID: ${listingId}`);\n  // TODO: Replace with actual API call to Airbnb.\n  await new Promise(resolve => setTimeout(resolve, 100)); // Simulate network delay\n  return {\n    listingId: listingId,\n    isAvailable: true, // Assume available by default for placeholder\n    pricePerNight: 150, // Example price\n  };\n}\n\n/**\n * Asynchronously retrieves Booking.com listing details.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Booking.com API call.\n *\n * @param listingId The Booking.com listing ID.\n * @returns A promise that resolves to a BookingComListing object.\n */\nexport async function getBookingComListing(listingId: string): Promise<BookingComListing> {\n  console.log(`[Sync Placeholder] Fetching Booking.com listing details for ID: ${listingId}`);\n  // TODO: Replace with actual API call to Booking.com.\n  await new Promise(resolve => setTimeout(resolve, 100)); // Simulate network delay\n  return {\n    listingId: listingId,\n    isAvailable: true, // Assume available by default for placeholder\n    pricePerNight: 160, // Example price\n  };\n}\n\n/**\n * Updates Airbnb listing availability for a specific date range.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Airbnb API call.\n * This simplified version only takes a boolean; a real implementation needs date range parameters.\n *\n * @param listingId The Airbnb listing ID.\n * @param isAvailable The new availability status (true for available, false for blocked).\n * @param checkInDate The start date of the range (optional).\n * @param checkOutDate The end date of the range (optional).\n * @returns A promise that resolves when the update attempt is complete.\n */\nexport async function updateAirbnbListingAvailability(\n    listingId: string,\n    isAvailable: boolean,\n    checkInDate?: Date,\n    checkOutDate?: Date\n): Promise<void> {\n  const dateRangeString = checkInDate && checkOutDate\n    ? ` from ${checkInDate.toISOString().split('T')[0]} to ${checkOutDate.toISOString().split('T')[0]}`\n    : '';\n  console.log(`[Sync Placeholder] Updating Airbnb listing ${listingId} availability to ${isAvailable}${dateRangeString}.`);\n  // TODO: Replace with actual API call to Airbnb, passing the specific date range to block/unblock.\n  await new Promise(resolve => setTimeout(resolve, 150)); // Simulate network delay\n  return;\n}\n\n/**\n * Updates Booking.com listing availability for a specific date range.\n * PLACEHOLDER IMPLEMENTATION. Requires actual Booking.com API call.\n * This simplified version only takes a boolean; a real implementation needs date range parameters.\n *\n * @param listingId The Booking.com listing ID.\n * @param isAvailable The new availability status (true for available, false for blocked).\n * @param checkInDate The start date of the range (optional).\n * @param checkOutDate The end date of the range (optional).\n * @returns A promise that resolves when the update attempt is complete.\n */\nexport async function updateBookingComListingAvailability(\n    listingId: string,\n    isAvailable: boolean,\n    checkInDate?: Date,\n    checkOutDate?: Date\n): Promise<void> {\n   const dateRangeString = checkInDate && checkOutDate\n     ? ` from ${checkInDate.toISOString().split('T')[0]} to ${checkOutDate.toISOString().split('T')[0]}`\n     : '';\n   console.log(`[Sync Placeholder] Updating Booking.com listing ${listingId} availability to ${isAvailable}${dateRangeString}.`);\n  // TODO: Replace with actual API call to Booking.com, passing the specific date range to block/unblock.\n  await new Promise(resolve => setTimeout(resolve, 150)); // Simulate network delay\n  return;\n}\n\n// TODO: Add functions for more granular sync (e.g., update price, minimum stay).\n// TODO: Implement webhook handlers to receive availability updates FROM external platforms.\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;AAGD;AAAA;AACA;;;;;;AA2BO,eAAe,uCAAgB,GAAhB,mBAAmB,UAAkB;IACvD,MAAM,cAAc,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,cAAc;IAC1C,IAAI;QACA,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,QAAQ,MAAM,IAAI;YAClB,OAAO;gBAAE,IAAI,QAAQ,EAAE;gBAAE,GAAG,QAAQ,IAAI,EAAE;YAAC;QAC/C,OAAO;YACH,QAAQ,IAAI,CAAC,CAAC,0EAA0E,EAAE,YAAY;YACtG,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACX,QAAQ,KAAK,CAAC,CAAC,+CAA+C,EAAE,WAAW,CAAC,CAAC,EAAE;QAC/E,OAAO;IACZ;AACJ;AAUO,eAAe,uCAAc,GAAd,iBAAiB,SAAiB;IACtD,QAAQ,GAAG,CAAC,CAAC,2DAA2D,EAAE,WAAW;IACrF,gDAAgD;IAChD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF,OAAO;QACL,WAAW;QACX,aAAa;QACb,eAAe;IACjB;AACF;AASO,eAAe,uCAAkB,GAAlB,qBAAqB,SAAiB;IAC1D,QAAQ,GAAG,CAAC,CAAC,gEAAgE,EAAE,WAAW;IAC1F,qDAAqD;IACrD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF,OAAO;QACL,WAAW;QACX,aAAa;QACb,eAAe;IACjB;AACF;AAaO,eAAe,uCAA6B,GAA7B,gCAClB,SAAiB,EACjB,WAAoB,EACpB,WAAkB,EAClB,YAAmB;IAErB,MAAM,kBAAkB,eAAe,eACnC,CAAC,MAAM,EAAE,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,GACjG;IACJ,QAAQ,GAAG,CAAC,CAAC,2CAA2C,EAAE,UAAU,iBAAiB,EAAE,cAAc,gBAAgB,CAAC,CAAC;IACvH,kGAAkG;IAClG,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF;AACF;AAaO,eAAe,uCAAiC,GAAjC,oCAClB,SAAiB,EACjB,WAAoB,EACpB,WAAkB,EAClB,YAAmB;IAEpB,MAAM,kBAAkB,eAAe,eACnC,CAAC,MAAM,EAAE,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,GACjG;IACJ,QAAQ,GAAG,CAAC,CAAC,gDAAgD,EAAE,UAAU,iBAAiB,EAAE,cAAc,gBAAgB,CAAC,CAAC;IAC7H,uGAAuG;IACvG,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,yBAAyB;IACjF;AACF,EAEA,iFAAiF;CACjF,4FAA4F;;;IA1GtE;IAwBA;IAkBA;IAsBA;IA0BA;;AA1FA,+OAAA;AAwBA,+OAAA;AAkBA,+OAAA;AAsBA,+OAAA;AA0BA,+OAAA","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/bookingService.ts"],"sourcesContent":["\n// src/services/bookingService.ts\n'use server';\n\nimport {\n  collection,\n  addDoc,\n  doc,\n  getDoc,\n  updateDoc,\n  query,\n  where,\n  getDocs,\n  serverTimestamp as clientServerTimestamp,\n  Timestamp as ClientTimestamp,\n  writeBatch as clientWriteBatch,\n  setDoc as clientSetDoc,\n  QueryConstraint,\n  limit,\n  documentId,\n} from 'firebase/firestore';\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase';\nimport type { Booking, Availability, Property, SerializableTimestamp } from '@/types';\nimport { differenceInCalendarDays, eachDayOfInterval, format, parse, subDays, startOfMonth, endOfMonth, parseISO, startOfDay } from 'date-fns';\nimport { updateAirbnbListingAvailability, updateBookingComListingAvailability, getPropertyForSync } from './booking-sync';\n\n// --- Schemas (Keep Zod schemas for data validation if createBooking is still used elsewhere) ---\n\nexport type CreateBookingData = Omit<Booking,\n  'id' |\n  'checkInDate' |\n  'checkOutDate' |\n  'createdAt' |\n  'updatedAt' |\n  'paymentInfo' | // paymentInfo structure is defined separately now\n  'pricing'\n> & {\n  checkInDate: string; // ISO String\n  checkOutDate: string; // ISO String\n  pricing: {\n    baseRate: number;\n    numberOfNights: number;\n    cleaningFee: number;\n    extraGuestFee?: number;\n    numberOfExtraGuests?: number;\n    accommodationTotal: number;\n    subtotal: number;\n    taxes?: number;\n    discountAmount?: number;\n    total: number;\n  };\n  appliedCouponCode?: string;\n  // paymentInput is now handled by the webhook and updateBookingPaymentInfo\n  // status will likely be 'confirmed' when this is called by simulation/webhook\n  status?: Booking['status']; // Optional for flexibility, webhook should set 'confirmed'\n};\n\nconst CreateBookingDataSchema = z.object({\n  propertyId: z.string().min(1),\n  guestInfo: z.object({\n    firstName: z.string().min(1),\n    lastName: z.string().optional(),\n    email: z.string().email(),\n    phone: z.string().optional(),\n    userId: z.string().optional(),\n  }).passthrough(),\n  checkInDate: z.string().refine(val => !isNaN(Date.parse(val))),\n  checkOutDate: z.string().refine(val => !isNaN(Date.parse(val))),\n  numberOfGuests: z.number().int().positive(),\n  pricing: z.object({\n    baseRate: z.number().nonnegative(),\n    numberOfNights: z.number().int().positive(),\n    cleaningFee: z.number().nonnegative(),\n    extraGuestFee: z.number().nonnegative().optional(),\n    numberOfExtraGuests: z.number().int().nonnegative().optional(),\n    accommodationTotal: z.number().nonnegative(),\n    subtotal: z.number().nonnegative(),\n    taxes: z.number().nonnegative().optional(),\n    discountAmount: z.number().nonnegative().optional(),\n    total: z.number().nonnegative(),\n  }).passthrough(),\n  appliedCouponCode: z.string().optional(),\n  status: z.enum(['pending', 'confirmed', 'cancelled', 'completed']).optional(),\n  // Removed paymentInput validation here, handled separately\n  notes: z.string().optional(),\n  source: z.string().optional(),\n  externalId: z.string().optional(),\n}).refine(data => new Date(data.checkOutDate) > new Date(data.checkInDate), {\n  message: 'Check-out date must be after check-in date.',\n  path: ['checkOutDate'],\n}).refine(data => {\n    const calculatedTotal = (data.pricing.subtotal ?? 0) + (data.pricing.taxes ?? 0) - (data.pricing.discountAmount ?? 0);\n    return Math.abs(calculatedTotal - data.pricing.total) < 0.01;\n}, {\n    message: 'Calculated total does not match provided total price.',\n    path: ['pricing.total'],\n});\n\n\n/**\n * Updates an existing booking (typically 'pending') with payment information\n * and sets its status to 'confirmed'. Called by the Stripe webhook.\n */\nexport async function updateBookingPaymentInfo(\n    bookingId: string,\n    paymentInfo: Booking['paymentInfo']\n): Promise<void> {\n    console.log(`--- [updateBookingPaymentInfo] Called for booking: ${bookingId} ---`);\n    if (!bookingId) {\n        throw new Error(\"Booking ID is required to update payment info.\");\n    }\n     if (!paymentInfo || !paymentInfo.stripePaymentIntentId || paymentInfo.status !== 'paid' && paymentInfo.status !== 'succeeded') {\n         console.warn(`[updateBookingPaymentInfo] Invalid or incomplete payment info for booking ${bookingId}. Status: ${paymentInfo?.status}`);\n        throw new Error(\"Valid payment information (status 'paid' or 'succeeded') is required.\");\n    }\n\n    const bookingRef = doc(db, 'bookings', bookingId);\n\n    try {\n        // Fetch the booking to get check-in/out dates for availability update\n        const bookingSnap = await getDoc(bookingRef);\n        if (!bookingSnap.exists()) {\n            console.error(`[updateBookingPaymentInfo] Booking ${bookingId} not found.`);\n            throw new Error(`Booking with ID ${bookingId} not found.`);\n        }\n        const bookingData = bookingSnap.data() as Booking; // Cast to Booking\n\n        console.log(`[updateBookingPaymentInfo] Updating booking ${bookingId} status to 'confirmed' and adding payment details.`);\n        await updateDoc(bookingRef, {\n            status: 'confirmed',\n            paymentInfo: { // Merge with existing potentially, or overwrite\n                ...bookingData.paymentInfo, // Keep existing fields if any\n                ...paymentInfo, // Add/overwrite with new payment data\n                paidAt: paymentInfo.paidAt instanceof Date ? Timestamp.fromDate(paymentInfo.paidAt) : clientServerTimestamp(), // Ensure Firestore Timestamp\n            },\n            updatedAt: clientServerTimestamp(),\n        });\n        console.log(`✅ [updateBookingPaymentInfo] Successfully updated booking ${bookingId} to confirmed.`);\n\n        // --- Update Property Availability ---\n        const checkInDate = bookingData.checkInDate instanceof Timestamp\n            ? bookingData.checkInDate.toDate()\n            : bookingData.checkInDate ? new Date(bookingData.checkInDate as any) : null; // Handle different types\n        const checkOutDate = bookingData.checkOutDate instanceof Timestamp\n            ? bookingData.checkOutDate.toDate()\n            : bookingData.checkOutDate ? new Date(bookingData.checkOutDate as any) : null;\n\n        if (checkInDate && checkOutDate) {\n             console.log(`[updateBookingPaymentInfo] Triggering availability update for property ${bookingData.propertyId}, booking ${bookingId}`);\n            try {\n                await updatePropertyAvailability(bookingData.propertyId, checkInDate, checkOutDate, false); // Mark as unavailable\n                console.log(`✅ [updateBookingPaymentInfo] Availability updated for property ${bookingData.propertyId}.`);\n            } catch (availabilityError) {\n                 console.error(`❌ [updateBookingPaymentInfo] Failed to update availability for property ${bookingData.propertyId} after confirming booking ${bookingId}:`, availabilityError);\n                 // Log but don't fail the whole process, booking is confirmed\n            }\n             // --- Trigger External Sync ---\n             // Move sync here, only sync AFTER booking is confirmed\n             console.log(`[updateBookingPaymentInfo] Triggering external sync for property ${bookingData.propertyId}, booking ${bookingId}...`);\n             try {\n                 const propertyDetails = await getPropertyForSync(bookingData.propertyId);\n                 if (propertyDetails) {\n                     if (propertyDetails.airbnbListingId) {\n                         await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, false, checkInDate, checkOutDate);\n                     }\n                     if (propertyDetails.bookingComListingId) {\n                         await updateBookingComListingAvailability(propertyDetails.bookingComListingId, false, checkInDate, checkOutDate);\n                     }\n                 } else {\n                     console.warn(`[updateBookingPaymentInfo Sync] Could not find property ${bookingData.propertyId} for external sync.`);\n                 }\n             } catch (syncError) {\n                  console.error(`❌ [updateBookingPaymentInfo Sync] Error syncing externally for booking ${bookingId}:`, syncError);\n             }\n\n        } else {\n             console.warn(`[updateBookingPaymentInfo] Missing check-in/out dates for booking ${bookingId}. Cannot update availability.`);\n        }\n\n    } catch (error) {\n        console.error(`❌ [updateBookingPaymentInfo] Error updating booking ${bookingId}:`, error);\n        throw new Error(`Failed to update booking payment info: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n\n/**\n * Creates a new confirmed booking document in Firestore (e.g., for simulations or direct creation).\n * NOTE: The primary flow now uses createPendingBookingAction followed by webhook confirmation.\n * This function might still be useful for the simulation button.\n */\nexport async function createBooking(rawBookingData: CreateBookingData): Promise<string> {\n   const paymentIntentId = (rawBookingData as any)?.paymentInput?.stripePaymentIntentId || 'N/A'; // Handle potential missing paymentInput\n   console.log(`--- [createBooking] Function called (likely simulation) for Payment Intent [${paymentIntentId}] ---`);\n   console.log(`[createBooking] Received raw data:`, JSON.stringify(rawBookingData, null, 2));\n\n   let bookingData: z.infer<typeof CreateBookingDataSchema>;\n\n   // Zod Validation\n   console.log(`[createBooking] Starting Zod validation...`);\n   const validationResult = CreateBookingDataSchema.safeParse(rawBookingData);\n   if (!validationResult.success) {\n     const errorMessages = validationResult.error.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ');\n     const validationError = new Error(`Invalid booking data: ${errorMessages}`);\n     console.error(`❌ [createBooking] Validation Error:`, validationError.message);\n     throw validationError;\n   }\n   bookingData = validationResult.data;\n   console.log(`[createBooking] Data passed validation.`);\n\n\n  try {\n     console.log(`[createBooking] Entered main try block.`);\n     const bookingsCollection = collection(db, 'bookings');\n\n     // Data Transformation\n     console.log(`[createBooking] Transforming data for Firestore...`);\n     const checkInDate = new Date(bookingData.checkInDate);\n     const checkOutDate = new Date(bookingData.checkOutDate);\n     const checkInTimestamp = ClientTimestamp.fromDate(checkInDate);\n     const checkOutTimestamp = ClientTimestamp.fromDate(checkOutDate);\n\n     // Construct PaymentInfo if paymentInput exists (for simulation)\n      let paymentInfo: Booking['paymentInfo'] | undefined = undefined;\n      if ((rawBookingData as any).paymentInput) {\n          const paymentInput = (rawBookingData as any).paymentInput;\n          paymentInfo = {\n              stripePaymentIntentId: paymentInput.stripePaymentIntentId || `simulated_${Date.now()}`,\n              amount: paymentInput.amount ?? bookingData.pricing.total,\n              status: paymentInput.status || 'succeeded',\n              paidAt: (paymentInput.status === 'succeeded' || paymentInput.status === 'paid')\n                  ? ClientTimestamp.now()\n                  : null,\n          };\n      } else {\n          // Create a default placeholder if no paymentInput provided (shouldn't happen in normal flow)\n           paymentInfo = {\n               stripePaymentIntentId: 'N/A',\n               amount: bookingData.pricing.total,\n               status: 'unknown', // Or 'confirmed' if assuming success?\n               paidAt: null,\n           };\n      }\n\n     // Construct the final booking document data\n     const docData: Omit<Booking, 'id'> = {\n         propertyId: bookingData.propertyId,\n         guestInfo: bookingData.guestInfo,\n         checkInDate: checkInTimestamp,\n         checkOutDate: checkOutTimestamp,\n         numberOfGuests: bookingData.numberOfGuests,\n         pricing: bookingData.pricing,\n         appliedCouponCode: bookingData.appliedCouponCode,\n         status: bookingData.status || 'confirmed', // Default to confirmed for direct creation/simulation\n         paymentInfo: paymentInfo,\n         notes: bookingData.notes,\n         source: bookingData.source || 'simulation', // Default source\n         externalId: bookingData.externalId,\n         createdAt: clientServerTimestamp(),\n         updatedAt: clientServerTimestamp(),\n     };\n\n     console.log(`[createBooking] Firestore Doc Data Prepared:`, JSON.stringify({ ...docData, checkInDate: `Timestamp(${checkInDate.toISOString()})`, checkOutDate: `Timestamp(${checkOutDate.toISOString()})`, paidAt: docData.paymentInfo.paidAt ? `Timestamp(${(docData.paymentInfo.paidAt as ClientTimestamp).toDate().toISOString()})` : null, createdAt: 'ServerTimestamp', updatedAt: 'ServerTimestamp' }, null, 2));\n\n\n     // Firestore Operation (Client SDK)\n     console.log(`[createBooking] Attempting to add booking document...`);\n     const docRef = await addDoc(bookingsCollection, docData);\n     const bookingId = docRef.id;\n     console.log(`✅ [createBooking] Booking document created successfully! ID: ${bookingId}`);\n\n     // --- Update Property Availability (Client SDK) ---\n     console.log(`[createBooking] Triggering local availability update for property ${bookingData.propertyId}, booking ${bookingId}`);\n     try {\n       await updatePropertyAvailability(bookingData.propertyId, checkInDate, checkOutDate, false);\n       console.log(`✅ [createBooking] Successfully finished update call for local availability for property ${bookingData.propertyId}, booking ${bookingId}.`);\n     } catch (availabilityError) {\n       console.error(`❌ [createBooking] Failed to update local availability for property ${bookingData.propertyId} after creating booking ${bookingId}:`, availabilityError);\n       // Decide if this should block the entire process or just log a warning\n       // In simulation, maybe log and continue? For real bookings, re-throw.\n        // throw availabilityError; // Uncomment if availability update failure should halt creation\n        console.warn(`⚠️ [createBooking] Availability update failed, but booking ${bookingId} was created (source: ${docData.source}). Manual check needed.`);\n     }\n\n     // --- Synchronize Availability with External Platforms ---\n     // Skip sync for simulation/test bookings or handle differently if needed\n      if (docData.source !== 'simulation' && docData.source !== 'test-button') {\n          console.log(`[createBooking] Starting external platform sync for property ${bookingData.propertyId}, booking ${bookingId}...`);\n          try {\n             const propertyDetails = await getPropertyForSync(bookingData.propertyId);\n             if (propertyDetails) {\n                 if (propertyDetails.airbnbListingId) {\n                     await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, false, checkInDate, checkOutDate);\n                 }\n                 if (propertyDetails.bookingComListingId) {\n                     await updateBookingComListingAvailability(propertyDetails.bookingComListingId, false, checkInDate, checkOutDate);\n                 }\n             } else {\n                  console.warn(`[createBooking Sync] Could not retrieve property details for ${bookingData.propertyId} to perform external sync.`);\n             }\n         } catch (syncError) {\n             console.error(`❌ [createBooking Sync] Error synchronizing availability with external platforms for property ${bookingData.propertyId} after creating booking ${bookingId}:`, syncError);\n         }\n     } else {\n          console.log(`[createBooking] Skipping external sync for booking source: ${docData.source}`);\n     }\n\n     console.log(`--- [createBooking] Function returning successfully with booking ID: ${bookingId} ---`);\n     return bookingId;\n\n   } catch (error) {\n      if (!(error instanceof Error && error.message.startsWith('Invalid booking data:'))) {\n          console.error(`❌ [createBooking] Error during booking creation process:`, error);\n      }\n     const errorMessage = error instanceof Error\n         ? (error.message.startsWith('Invalid booking data:') ? error.message : `Failed to create booking (Ref: ${paymentIntentId}). Please contact support.`)\n         : `An unexpected error occurred while creating the booking (Ref: ${paymentIntentId}). Please contact support.`;\n\n     throw new Error(errorMessage);\n   }\n }\n\n/**\n * Retrieves a booking document by its ID using the Client SDK.\n */\nexport async function getBookingById(bookingId: string): Promise<Booking | null> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        const docSnap = await getDoc(bookingRef);\n\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n            // Convert Timestamps if needed for client consumption, or keep as Timestamps\n            const bookingResult = {\n                id: docSnap.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking;\n            return bookingResult;\n        } else {\n            console.warn(`[getBookingById] No booking found with ID: ${bookingId}`);\n            return null;\n        }\n    } catch (error) {\n        console.error(`❌ [getBookingById] Error fetching booking with ID ${bookingId}:`, error);\n        throw new Error(`Failed to fetch booking: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Updates the status of a specific booking document using the Client SDK.\n * Calls updatePropertyAvailability (Client SDK) if status is 'cancelled'.\n */\nexport async function updateBookingStatus(bookingId: string, status: Booking['status']): Promise<void> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        await updateDoc(bookingRef, {\n            status: status,\n            updatedAt: clientServerTimestamp(), // Use Client serverTimestamp\n        });\n        console.log(`✅ [updateBookingStatus] Successfully updated booking ${bookingId} to status: ${status}`);\n\n        if (status === 'cancelled') {\n          const booking = await getBookingById(bookingId); // Re-fetch using Client SDK\n          if (booking && booking.checkInDate && booking.checkOutDate) {\n            // Convert Client Timestamps back to Dates\n             const checkInDate = booking.checkInDate instanceof Timestamp\n                ? booking.checkInDate.toDate()\n                : booking.checkInDate ? new Date(booking.checkInDate as any) : null;\n             const checkOutDate = booking.checkOutDate instanceof Timestamp\n                ? booking.checkOutDate.toDate()\n                : booking.checkOutDate ? new Date(booking.checkOutDate as any) : null;\n\n             if (checkInDate && checkOutDate) {\n                 try {\n                     // Make dates available again\n                     await updatePropertyAvailability(booking.propertyId, checkInDate, checkOutDate, true);\n                     console.log(`✅ [updateBookingStatus] Successfully updated local availability (Client SDK) for cancelled booking ${bookingId}.`);\n\n                      // Trigger external sync to release dates\n                     await triggerExternalSyncForDateUpdate(booking.propertyId, checkInDate, checkOutDate, true);\n\n                 } catch (availError) {\n                      console.error(`❌ [updateBookingStatus] Failed to update local availability or sync for cancelled booking ${bookingId}:`, availError);\n                 }\n             } else {\n                  console.warn(`[updateBookingStatus] Could not parse dates for booking ${bookingId} to update availability after cancellation.`);\n             }\n          } else {\n             console.warn(`[updateBookingStatus] Could not find booking ${bookingId} or its dates to update availability after cancellation.`);\n          }\n        }\n\n    } catch (error) {\n        console.error(`❌ [updateBookingStatus] Error updating status for booking ${bookingId} (Client SDK):`, error);\n        throw new Error(`Failed to update booking status: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific property ID using the Client SDK.\n */\nexport async function getBookingsForProperty(propertyId: string): Promise<Booking[]> {\n    const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        const q = query(bookingsCollection, where('propertyId', '==', propertyId));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n            const data = doc.data();\n            bookings.push({\n                id: doc.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForProperty] Error fetching bookings for property ${propertyId}:`, error);\n        throw new Error(`Failed to fetch bookings for property: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific user ID using the Client SDK.\n */\nexport async function getBookingsForUser(userId: string): Promise<Booking[]> {\n     const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        const q = query(bookingsCollection, where('guestInfo.userId', '==', userId));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n             const data = doc.data();\n             bookings.push({\n                 id: doc.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n             } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForUser] Error fetching bookings for user ${userId}:`, error);\n        throw new Error(`Failed to fetch bookings for user: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Updates the availability status for a given property and date range in Firestore\n * using the **Firebase Client SDK**. Requires appropriate security rules.\n */\nexport async function updatePropertyAvailability(propertyId: string, checkInDate: Date, checkOutDate: Date, available: boolean): Promise<void> {\n  console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function called ---`);\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Args: propertyId=${propertyId}, checkIn=${format(checkInDate, 'yyyy-MM-dd')}, checkOut=${format(checkOutDate, 'yyyy-MM-dd')} (exclusive), available=${available}`);\n\n  if (!db) {\n    console.error(\"❌ [updatePropertyAvailability - CLIENT SDK] Firestore Client SDK (db) is not initialized.\");\n    throw new Error(\"Firestore Client SDK is not initialized.\");\n  }\n\n  if (checkOutDate <= checkInDate) {\n    console.warn(`[updatePropertyAvailability] Check-out date (${format(checkOutDate, 'yyyy-MM-dd')}) must be after check-in date (${format(checkInDate, 'yyyy-MM-dd')}). No update performed.`);\n    return;\n  }\n\n  // Ensure dates are at the start of the day UTC for consistency\n  const start = startOfDay(checkInDate);\n  const end = startOfDay(subDays(checkOutDate, 1)); // Make checkout date exclusive\n\n  const datesToUpdate = eachDayOfInterval({ start, end });\n\n  if (datesToUpdate.length === 0) {\n    console.log(\"[updatePropertyAvailability - CLIENT SDK] No dates need updating.\");\n    return;\n  }\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Dates to update (${datesToUpdate.length}): ${datesToUpdate.map(d => format(d, 'yyyy-MM-dd')).join(', ')}`);\n\n  const updatesByMonth: { [month: string]: { [day: number]: boolean } } = {};\n  datesToUpdate.forEach(date => {\n    const monthStr = format(date, 'yyyy-MM'); // Use UTC month\n    const dayOfMonth = date.getUTCDate(); // Use UTC day\n    if (!updatesByMonth[monthStr]) {\n      updatesByMonth[monthStr] = {};\n    }\n    updatesByMonth[monthStr][dayOfMonth] = available;\n  });\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Updates grouped by month:`, JSON.stringify(updatesByMonth));\n\n  const batch = clientWriteBatch(db);\n  const availabilityCollection = collection(db, 'availability');\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Initialized Firestore Client batch.`);\n\n  try {\n    const monthStrings = Object.keys(updatesByMonth);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Processing months: ${monthStrings.join(', ')}`);\n\n    if (monthStrings.length === 0) return;\n\n    const docIdsToFetch = monthStrings.map(monthStr => `${propertyId}_${monthStr}`);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetching existing availability docs for ${monthStrings.length} months...`);\n\n    const idBatches: string[][] = [];\n    for (let i = 0; i < docIdsToFetch.length; i += 30) {\n      idBatches.push(docIdsToFetch.slice(i, i + 30));\n    }\n\n    const fetchedDocsMap = new Map<string, Availability>();\n    await Promise.all(idBatches.map(async (batchIds) => {\n      if (batchIds.length === 0) return;\n      const q = query(availabilityCollection, where(documentId(), 'in', batchIds));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(docSnap => {\n        if (docSnap.exists()) {\n          fetchedDocsMap.set(docSnap.id, { id: docSnap.id, ...docSnap.data() } as Availability);\n        }\n      });\n    }));\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetched ${fetchedDocsMap.size} existing doc snapshots.`);\n\n    monthStrings.forEach(monthStr => {\n      const availabilityDocId = `${propertyId}_${monthStr}`;\n      console.log(`[updatePropertyAvailability Batch Prep] Processing month ${monthStr} (Doc ID: ${availabilityDocId}). Days: ${Object.keys(updatesByMonth[monthStr]).join(', ')}`);\n      const availabilityDocRef = doc(availabilityCollection, availabilityDocId);\n      const updatesForDay = updatesByMonth[monthStr];\n\n      const updatePayload: { [key: string]: any } = {};\n      for (const day in updatesForDay) {\n        updatePayload[`available.${String(day)}`] = updatesForDay[day];\n      }\n      updatePayload.updatedAt = clientServerTimestamp();\n      console.log(`[updatePropertyAvailability Batch Prep] Payload for ${availabilityDocId}:`, JSON.stringify({ ...updatePayload, updatedAt: 'ServerTimestamp' }));\n\n\n      const existingDoc = fetchedDocsMap.get(availabilityDocId);\n\n      if (existingDoc) {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} exists. Adding UPDATE.`);\n        batch.update(availabilityDocRef, updatePayload);\n      } else {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} DOES NOT exist. Creating initial.`);\n        const [year, month] = monthStr.split('-').map(Number);\n        const daysInMonth = new Date(year, month, 0).getDate();\n        const initialAvailableMap: { [day: number]: boolean } = {};\n        for (let day = 1; day <= daysInMonth; day++) {\n          initialAvailableMap[day] = updatesForDay[day] !== undefined ? updatesForDay[day] : true;\n        }\n\n        const newDocData: Partial<Availability> = {\n          propertyId: propertyId,\n          month: monthStr,\n          available: initialAvailableMap,\n          updatedAt: clientServerTimestamp(),\n        };\n        console.log(`[updatePropertyAvailability Batch Prep] Adding SET (merge: true) for ${availabilityDocId}.`);\n        batch.set(availabilityDocRef, newDocData, { merge: true });\n      }\n    });\n\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Committing client batch for property ${propertyId}...`);\n    await batch.commit();\n    console.log(`✅ [updatePropertyAvailability - CLIENT SDK] Batch committed for property ${propertyId}.`);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function finished successfully ---`);\n\n  } catch (error) {\n    console.error(`❌ Error during Client SDK batch update/creation for property availability ${propertyId}:`, error);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function throwing error ---`);\n    // Rethrow with a more specific message if it's a permission error\n     if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        throw new Error(`Permission denied updating availability. Check Firestore rules.`);\n     }\n    throw new Error(`Failed to update local property availability using Client SDK: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\n/**\n * Helper function to trigger external sync after availability update.\n */\nasync function triggerExternalSyncForDateUpdate(propertyId: string, checkInDate: Date, checkOutDate: Date, isAvailable: boolean): Promise<void> {\n    console.log(`[Sync Trigger] Syncing availability change for property ${propertyId} (${isAvailable ? 'Release' : 'Block'})`);\n     try {\n       const propertyDetails = await getPropertyForSync(propertyId);\n       if (propertyDetails) {\n           if (propertyDetails.airbnbListingId) {\n               await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, isAvailable, checkInDate, checkOutDate);\n           }\n           if (propertyDetails.bookingComListingId) {\n               await updateBookingComListingAvailability(propertyDetails.bookingComListingId, isAvailable, checkInDate, checkOutDate);\n           }\n       } else {\n           console.warn(`[Sync Trigger] Could not find property ${propertyId} for external sync.`);\n       }\n   } catch (syncError) {\n        console.error(`❌ [Sync Trigger] Error syncing externally for property ${propertyId}:`, syncError);\n   }\n}\n\n\n/**\n * Fetches all unavailable dates for a given property using the Client SDK.\n */\nexport async function getUnavailableDatesForProperty(propertyId: string, monthsToFetch: number = 12): Promise<Date[]> {\n  const unavailableDates: Date[] = [];\n  console.log(`--- [getUnavailableDatesForProperty] Function called ---`);\n  console.log(`[getUnavailableDatesForProperty] Fetching for property ${propertyId} for the next ${monthsToFetch} months.`);\n\n  if (!db) {\n      console.error(\"❌ [getUnavailableDatesForProperty] Firestore Client SDK (db) is not initialized.\");\n      return [];\n  }\n\n  const availabilityCollection = collection(db, 'availability');\n  const today = new Date();\n  const currentMonthStart = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), 1));\n\n\n  try {\n    const monthDocIds: string[] = [];\n    for (let i = 0; i < monthsToFetch; i++) {\n      const targetMonth = new Date(Date.UTC(currentMonthStart.getUTCFullYear(), currentMonthStart.getUTCMonth() + i, 1));\n      const monthStr = format(targetMonth, 'yyyy-MM');\n      monthDocIds.push(`${propertyId}_${monthStr}`);\n    }\n\n    const queryBatches: string[][] = [];\n    for (let i = 0; i < monthDocIds.length; i += 30) {\n        queryBatches.push(monthDocIds.slice(i, i + 30));\n    }\n\n     if (monthDocIds.length === 0) {\n        console.log(\"[getUnavailableDatesForProperty] No month document IDs to query.\");\n        return [];\n    }\n\n    const allQuerySnapshots = await Promise.all(\n      queryBatches.map(async (batchIds) => {\n          const q = query(availabilityCollection, where(documentId(), 'in', batchIds));\n          return getDocs(q);\n      })\n    );\n\n    allQuerySnapshots.forEach((querySnapshot) => {\n         querySnapshot.forEach((doc) => {\n            const data = doc.data() as Partial<Availability>;\n            const docId = doc.id;\n            const monthStr = data.month || docId.split('_')[1]; // Prefer data.month\n\n             if (!monthStr || !/^\\d{4}-\\d{2}$/.test(monthStr)) {\n                 console.warn(`[getUnavailableDates] Invalid month string for doc ${docId}. Skipping.`);\n                 return;\n             }\n\n            if (data.available && typeof data.available === 'object') {\n                const [year, monthIndex] = monthStr.split('-').map(num => parseInt(num, 10));\n                const month = monthIndex - 1; // JS months 0-indexed\n\n                for (const dayStr in data.available) {\n                    const day = parseInt(dayStr, 10);\n                    if (!isNaN(day) && data.available[day] === false) {\n                        try {\n                            // Construct date as UTC date\n                            const date = new Date(Date.UTC(year, month, day));\n                             // Double check date validity after creation\n                             if (date.getUTCFullYear() === year && date.getUTCMonth() === month && date.getUTCDate() === day) {\n                                const todayUtcStart = startOfDay(new Date()); // Compare against local start of today\n                                if (date >= todayUtcStart) {\n                                    unavailableDates.push(date);\n                                }\n                             } else {\n                                 console.warn(`[getUnavailableDates] Invalid date created for ${monthStr}-${dayStr}. Skipping.`);\n                             }\n                        } catch (dateError) {\n                             console.warn(`[getUnavailableDates] Error creating date ${monthStr}-${dayStr}:`, dateError);\n                        }\n                    }\n                }\n            }\n        });\n    });\n\n    unavailableDates.sort((a, b) => a.getTime() - b.getTime());\n    console.log(`[getUnavailableDates] Found ${unavailableDates.length} unavailable dates for ${propertyId}.`);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished successfully ---`);\n    return unavailableDates;\n\n  } catch (error) {\n    console.error(`❌ Error fetching unavailable dates for property ${propertyId}:`, error);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished with error ---`);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 898, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/couponService.ts"],"sourcesContent":["\n// src/services/couponService.ts\n'use server';\n\nimport { collection, doc, getDoc, Timestamp, where, query, getDocs, limit } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Client SDK Firestore instance\nimport type { Coupon, SerializableTimestamp } from '@/types';\nimport { parseISO, isWithinInterval, areIntervalsOverlapping } from 'date-fns'; // Changed 'overlaps' to 'areIntervalsOverlapping'\n\n// Helper function to convert SerializableTimestamp to Date or null\nconst toDate = (timestamp: SerializableTimestamp | undefined | null): Date | null => {\n  if (!timestamp) return null;\n  if (timestamp instanceof Date) return timestamp;\n  if (timestamp instanceof Timestamp) return timestamp.toDate();\n  if (typeof timestamp === 'string') {\n    try {\n      return parseISO(timestamp);\n    } catch {\n      return null;\n    }\n  }\n  if (typeof timestamp === 'number') {\n    // Assuming number is milliseconds since epoch\n    return new Date(timestamp);\n  }\n  return null;\n};\n\n/**\n * Validates a coupon code against the Firestore 'coupons' collection.\n * Checks existence, activity status, expiry, booking validity timeframe, and exclusion periods.\n *\n * @param couponCode - The coupon code string entered by the user.\n * @param bookingCheckInDate - The check-in date of the booking.\n * @param bookingCheckOutDate - The check-out date of the booking.\n * @returns A promise resolving to an object with discount percentage or an error message.\n */\nexport async function validateAndApplyCoupon(\n  couponCode: string,\n  bookingCheckInDate: Date | null,\n  bookingCheckOutDate: Date | null\n): Promise<{ discountPercentage?: number; error?: string }> {\n  if (!couponCode) {\n    return { error: 'Coupon code cannot be empty.' };\n  }\n  if (!bookingCheckInDate || !bookingCheckOutDate || bookingCheckOutDate <= bookingCheckInDate) {\n      return { error: 'Valid booking dates are required to apply a coupon.' };\n  }\n\n  const couponCodeUpper = couponCode.toUpperCase(); // Normalize code\n\n  try {\n    const couponsCollection = collection(db, 'coupons');\n    const q = query(couponsCollection, where('code', '==', couponCodeUpper), limit(1));\n    const querySnapshot = await getDocs(q);\n\n    if (querySnapshot.empty) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" not found.`);\n      return { error: 'Invalid coupon code.' };\n    }\n\n    const couponDoc = querySnapshot.docs[0];\n    // Cast data to include new fields, ensuring they can be null/undefined\n    const couponData = couponDoc.data() as Omit<Coupon, 'id' | 'createdAt' | 'updatedAt' | 'validUntil' | 'bookingValidFrom' | 'bookingValidUntil' | 'exclusionPeriods'> & {\n        createdAt: any;\n        updatedAt?: any;\n        validUntil: any;\n        bookingValidFrom?: any | null;\n        bookingValidUntil?: any | null;\n        exclusionPeriods?: Array<{ start: any; end: any }> | null;\n    };\n\n\n    // --- Basic Validations ---\n    if (!couponData.isActive) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" is not active.`);\n      return { error: 'Coupon code is no longer active.' };\n    }\n\n    const couponExpiryDate = toDate(couponData.validUntil);\n    const now = new Date(); // Compare with current date, not just timestamp\n    // Make comparison based on the start of the day for coupon expiry\n    const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    if (couponExpiryDate && couponExpiryDate < todayStart) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" has expired on ${couponExpiryDate.toISOString().split('T')[0]}.`);\n      return { error: 'Coupon code has expired.' };\n    }\n\n\n    if (typeof couponData.discount !== 'number' || couponData.discount <= 0 || couponData.discount > 100) {\n      console.error(`[Coupon Service] Invalid discount percentage (${couponData.discount}) for coupon \"${couponCodeUpper}\".`);\n      return { error: 'Invalid coupon configuration.' };\n    }\n\n    // --- Booking Timeframe Validations ---\n    const bookingValidFrom = toDate(couponData.bookingValidFrom);\n    const bookingValidUntil = toDate(couponData.bookingValidUntil);\n\n    // Check if booking starts before the valid period\n    if (bookingValidFrom && bookingCheckInDate < bookingValidFrom) {\n        console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is before coupon booking validity start (${bookingValidFrom.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n        return { error: 'Coupon not valid for selected check-in date.' };\n    }\n\n    // Check if booking ends after the valid period\n    // For bookingValidUntil, we should check if the *check-in* date is after the validity end date\n    // OR if the check-out date is strictly after the validity end date.\n    if (bookingValidUntil) {\n         // Set validity end to the end of the day for comparison\n         const validityEndDate = new Date(bookingValidUntil.getFullYear(), bookingValidUntil.getMonth(), bookingValidUntil.getDate(), 23, 59, 59, 999);\n         if (bookingCheckInDate > validityEndDate) {\n             console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is after coupon booking validity end (${bookingValidUntil.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n             return { error: 'Coupon not valid for selected check-in date.' };\n         }\n         // Note: Check-out date is typically exclusive. A booking ending on the validity date should be allowed.\n         // However, if the policy is strict, you might compare bookingCheckOutDate > validityEndDate + 1 day or similar.\n         // Sticking to check-in date for simplicity based on typical coupon logic.\n    }\n\n\n    // --- Exclusion Period Validations ---\n    if (couponData.exclusionPeriods && Array.isArray(couponData.exclusionPeriods)) {\n        // The booking interval includes the check-in day but excludes the check-out day for night calculations.\n        // For overlap checking, we should consider the full range of occupied days.\n        const bookingInterval = { start: bookingCheckInDate, end: new Date(bookingCheckOutDate.getTime() - 1) }; // Adjust end date to be inclusive\n\n        for (const period of couponData.exclusionPeriods) {\n            const exclusionStart = toDate(period.start);\n            const exclusionEnd = toDate(period.end);\n\n            if (exclusionStart && exclusionEnd) {\n                // Ensure exclusion end is inclusive for overlap check\n                const exclusionInterval = { start: exclusionStart, end: new Date(exclusionEnd.getFullYear(), exclusionEnd.getMonth(), exclusionEnd.getDate(), 23, 59, 59, 999)};\n                // Check if the booking interval overlaps with any exclusion interval\n                if (areIntervalsOverlapping(bookingInterval, exclusionInterval, { inclusive: true })) { // Use areIntervalsOverlapping\n                     console.warn(`[Coupon Service] Booking dates (${bookingCheckInDate.toISOString().split('T')[0]} - ${bookingCheckOutDate.toISOString().split('T')[0]}) overlap with exclusion period (${exclusionStart.toISOString().split('T')[0]} - ${exclusionEnd.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n                     return { error: 'Coupon not valid for the selected dates due to an exclusion period.' };\n                }\n            } else {\n                 console.warn(`[Coupon Service] Invalid exclusion period found for coupon \"${couponCodeUpper}\":`, period);\n            }\n        }\n    }\n\n\n    // TODO: Add validation for usage limits if implemented (maxUses, currentUses)\n\n    console.log(`[Coupon Service] Coupon code \"${couponCodeUpper}\" validated successfully for the booking dates. Discount: ${couponData.discount}%`);\n    return { discountPercentage: couponData.discount };\n\n  } catch (error) {\n    console.error(`❌ [Coupon Service] Error validating coupon code \"${couponCodeUpper}\":`, error);\n    return { error: 'Could not validate coupon code. Please try again.' }; // Generic error for the user\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/booking-actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from 'zod';\nimport { collection, addDoc, serverTimestamp, Timestamp } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Client SDK\nimport type { Booking, Property } from '@/types';\nimport { revalidatePath } from 'next/cache'; // May not be needed immediately for pending\n\n// Schema for creating a PENDING booking\nconst CreatePendingBookingSchema = z.object({\n  propertyId: z.string().min(1),\n  guestInfo: z.object({\n    firstName: z.string().min(1),\n    lastName: z.string().min(1),\n    email: z.string().email(),\n    phone: z.string().min(1), // Assuming phone is now required\n  }).passthrough(), // Allow extra fields if needed\n  checkInDate: z.string().datetime(), // ISO string\n  checkOutDate: z.string().datetime(), // ISO string\n  numberOfGuests: z.number().int().positive(),\n  pricing: z.object({ // Keep pricing details consistent\n    baseRate: z.number().nonnegative(),\n    numberOfNights: z.number().int().positive(),\n    cleaningFee: z.number().nonnegative(),\n    extraGuestFee: z.number().nonnegative().optional(),\n    numberOfExtraGuests: z.number().int().nonnegative().optional(),\n    accommodationTotal: z.number().nonnegative(),\n    subtotal: z.number().nonnegative(),\n    taxes: z.number().nonnegative().optional(),\n    discountAmount: z.number().nonnegative().optional(),\n    total: z.number().nonnegative(),\n  }).passthrough(),\n  status: z.literal('pending'), // Explicitly set status\n  appliedCouponCode: z.string().nullable().optional(), // Allow string or null\n});\n\ntype CreatePendingBookingInput = z.infer<typeof CreatePendingBookingSchema>;\n\n/**\n * Creates a 'pending' booking document in Firestore.\n * This is called before redirecting to Stripe.\n * The webhook will later update this booking to 'confirmed'.\n */\nexport async function createPendingBookingAction(\n  input: CreatePendingBookingInput\n): Promise<{ bookingId?: string; error?: string }> {\n  console.log(\"[Action createPendingBookingAction] Called with input:\", input);\n  const validationResult = CreatePendingBookingSchema.safeParse(input);\n\n  if (!validationResult.success) {\n    const errorMessages = validationResult.error.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ');\n    console.error(\"[Action createPendingBookingAction] Validation Error:\", errorMessages);\n    return { error: `Invalid pending booking data: ${errorMessages}` };\n  }\n\n  const {\n    propertyId,\n    guestInfo,\n    checkInDate: checkInStr,\n    checkOutDate: checkOutStr,\n    numberOfGuests,\n    pricing,\n    status,\n    appliedCouponCode,\n  } = validationResult.data;\n\n  try {\n    const bookingsCollection = collection(db, 'bookings');\n\n    const checkIn = new Date(checkInStr);\n    const checkOut = new Date(checkOutStr);\n\n    // Prepare data for Firestore\n    const bookingData: Omit<Booking, 'id' | 'paymentInfo'> = { // Exclude paymentInfo for pending\n      propertyId,\n      guestInfo,\n      checkInDate: Timestamp.fromDate(checkIn),\n      checkOutDate: Timestamp.fromDate(checkOut),\n      numberOfGuests,\n      pricing,\n      status: 'pending', // Ensure status is pending\n      appliedCouponCode: appliedCouponCode ?? undefined, // Pass null as null, or undefined if not present\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n      // Payment info will be added/updated by the webhook\n      paymentInfo: { // Add placeholder or minimal payment info\n          stripePaymentIntentId: '', // Will be updated by webhook\n          amount: pricing.total,\n          status: 'pending',\n          paidAt: null,\n      },\n      source: 'website-pending', // Indicate source\n    };\n\n     console.log(\"[Action createPendingBookingAction] Prepared Firestore Data:\", bookingData);\n\n    // Add the document\n    const docRef = await addDoc(bookingsCollection, bookingData);\n    console.log(`[Action createPendingBookingAction] Pending booking created successfully with ID: ${docRef.id}`);\n\n    // No revalidation needed yet, booking isn't confirmed\n\n    return { bookingId: docRef.id };\n\n  } catch (error) {\n    console.error(`❌ [Action createPendingBookingAction] Error creating pending booking:`, error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n     if (errorMessage.includes('PERMISSION_DENIED')) {\n      return { error: 'Permission denied. Could not create pending booking.' };\n    }\n     // Check for specific Firestore invalid data error\n     if (errorMessage.includes('invalid data') || errorMessage.includes('Unsupported field value')) {\n         console.error(\"[Action createPendingBookingAction] Firestore data error details:\", errorMessage);\n         return { error: `Failed to create pending booking due to invalid data. Please check input values. Details: ${errorMessage.split(' (')[0]}` }; // Provide cleaner error message\n     }\n    return { error: `Failed to create pending booking: ${errorMessage}` };\n  }\n}\n\n// TODO: Add action `createAvailabilityAlertAction` later\n// export async function createAvailabilityAlertAction(input: { propertyId: string, checkInDate: string, checkOutDate: string, contactMethod: 'email' | 'sms', contactInfo: string }) { ... }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/create-checkout-session.ts"],"sourcesContent":["\n\"use server\";\n\nimport type { Property } from '@/types';\nimport { headers } from 'next/headers';\nimport Stripe from 'stripe';\n\nconst stripeSecretKey = process.env.STRIPE_SECRET_KEY;\nif (!stripeSecretKey) {\n  throw new Error('STRIPE_SECRET_KEY is not set in environment variables.');\n}\n\nconst stripe = new Stripe(stripeSecretKey);\n\ninterface CreateCheckoutSessionInput {\n  property: Property;\n  checkInDate: string; // ISO string format\n  checkOutDate: string; // ISO string format\n  numberOfGuests: number;\n  totalPrice: number; // FINAL price in dollars (after discount)\n  numberOfNights: number;\n  // Optional guest info now expected\n  guestFirstName?: string;\n  guestLastName?: string;\n  guestEmail?: string; // Pass guest email if available\n  // Optional coupon info\n  appliedCouponCode?: string;\n  discountPercentage?: number;\n  // Optional pending booking ID\n  pendingBookingId?: string; // Added to link Stripe session to pending booking\n}\n\nexport async function createCheckoutSession(input: CreateCheckoutSessionInput) {\n  const {\n    property,\n    checkInDate,\n    checkOutDate,\n    numberOfGuests,\n    totalPrice,\n    numberOfNights,\n    guestEmail,\n    guestFirstName,\n    guestLastName,\n    appliedCouponCode,\n    discountPercentage,\n    pendingBookingId, // Get the pending booking ID\n  } = input;\n\n  const origin = headers().get('origin') || 'http://localhost:9002';\n\n  const numberOfExtraGuests = Math.max(0, numberOfGuests - property.baseOccupancy);\n\n  // --- Prepare metadata ---\n  const metadata: Stripe.MetadataParam = {\n    propertyId: property.id,\n    propertyName: property.name,\n    checkInDate: checkInDate,\n    checkOutDate: checkOutDate,\n    numberOfGuests: String(numberOfGuests),\n    numberOfNights: String(numberOfNights),\n    totalPrice: String(totalPrice),\n    cleaningFee: String(property.cleaningFee),\n    pricePerNight: String(property.pricePerNight),\n    baseOccupancy: String(property.baseOccupancy),\n    extraGuestFee: String(property.extraGuestFee),\n    numberOfExtraGuests: String(numberOfExtraGuests),\n    guestFirstName: guestFirstName || '',\n    guestLastName: guestLastName || '',\n    // Add pendingBookingId to metadata\n    pendingBookingId: pendingBookingId || '', // Include if available\n    // userId: loggedInUserId || '', // Add user ID if available\n  };\n\n  if (appliedCouponCode && discountPercentage !== undefined) {\n    metadata.appliedCouponCode = appliedCouponCode;\n    metadata.discountPercentage = String(discountPercentage);\n  }\n\n  // --- Construct Success URL ---\n  // Keep success URL simple, rely on webhook and booking ID for confirmation logic\n  const success_url = `${origin}/booking/success?session_id={CHECKOUT_SESSION_ID}${pendingBookingId ? `&booking_id=${pendingBookingId}` : ''}`; // Optionally pass booking ID\n  const cancel_url = `${origin}/booking/cancel?property_slug=${property.slug}${pendingBookingId ? `&booking_id=${pendingBookingId}` : ''}`; // Pass booking ID to cancel if needed\n\n  try {\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: `${property.name} (${numberOfNights} nights, ${numberOfGuests} guests)${appliedCouponCode ? ` - Coupon: ${appliedCouponCode}` : ''}`,\n              description: `Booking from ${new Date(checkInDate).toLocaleDateString()} to ${new Date(checkOutDate).toLocaleDateString()}. Ref: ${pendingBookingId || 'N/A'}`, // Add ref\n              images: [property.images.find(img => img.isFeatured)?.url || property.images[0]?.url || ''],\n            },\n            unit_amount: Math.round(totalPrice * 100),\n          },\n          quantity: 1,\n        },\n      ],\n      mode: 'payment',\n      success_url: success_url,\n      cancel_url: cancel_url,\n      customer_email: guestEmail,\n      phone_number_collection: { enabled: true,}, // Keep phone collection\n      metadata: metadata, // Pass the prepared metadata including pendingBookingId\n    });\n\n    if (!session.id) {\n        throw new Error('Failed to create Stripe session.');\n    }\n\n    // Link session to pending booking if ID provided\n    if (pendingBookingId && session.payment_intent) {\n        // You might want to update the pending booking with the payment_intent ID here\n        // This provides another link between the booking and the payment attempt.\n        // Example (requires an update action):\n        // await updatePendingBookingWithPaymentIntent(pendingBookingId, session.payment_intent as string);\n        console.log(`[createCheckoutSession] Stripe session ${session.id} created, linked to pending booking ${pendingBookingId} via metadata. Payment Intent: ${session.payment_intent}`);\n    }\n\n    return { sessionId: session.id };\n  } catch (error) {\n    console.error('Error creating Stripe Checkout session:', error);\n    return { error: `Failed to create checkout session: ${error instanceof Error ? error.message : String(error)}` };\n  }\n}\n\n// Optional helper action (if needed)\n// async function updatePendingBookingWithPaymentIntent(bookingId: string, paymentIntentId: string) {\n//   try {\n//     const bookingRef = doc(db, 'bookings', bookingId);\n//     await updateDoc(bookingRef, {\n//       'paymentInfo.stripePaymentIntentId': paymentIntentId,\n//       updatedAt: serverTimestamp(),\n//     });\n//     console.log(`[updatePendingBooking] Updated booking ${bookingId} with Payment Intent ID: ${paymentIntentId}`);\n//   } catch (error) {\n//     console.error(`[updatePendingBooking] Error updating booking ${bookingId} with Payment Intent ID:`, error);\n//     // Handle error appropriately, maybe log it or notify admin\n//   }\n// }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Sheet = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sheet() from the server but Sheet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"Sheet\",\n);\nexport const SheetClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetClose() from the server but SheetClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetClose\",\n);\nexport const SheetContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetContent() from the server but SheetContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetContent\",\n);\nexport const SheetDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetDescription() from the server but SheetDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetDescription\",\n);\nexport const SheetFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetFooter() from the server but SheetFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetFooter\",\n);\nexport const SheetHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetHeader() from the server but SheetHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetHeader\",\n);\nexport const SheetOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetOverlay() from the server but SheetOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetOverlay\",\n);\nexport const SheetPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetPortal() from the server but SheetPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetPortal\",\n);\nexport const SheetTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTitle() from the server but SheetTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetTitle\",\n);\nexport const SheetTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTrigger() from the server but SheetTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx <module evaluation>\",\n    \"SheetTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA","debugId":null}},
    {"offset": {"line": 1531, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Sheet = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sheet() from the server but Sheet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"Sheet\",\n);\nexport const SheetClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetClose() from the server but SheetClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetClose\",\n);\nexport const SheetContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetContent() from the server but SheetContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetContent\",\n);\nexport const SheetDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetDescription() from the server but SheetDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetDescription\",\n);\nexport const SheetFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetFooter() from the server but SheetFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetFooter\",\n);\nexport const SheetHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetHeader() from the server but SheetHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetHeader\",\n);\nexport const SheetOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetOverlay() from the server but SheetOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetOverlay\",\n);\nexport const SheetPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetPortal() from the server but SheetPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetPortal\",\n);\nexport const SheetTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTitle() from the server but SheetTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetTitle\",\n);\nexport const SheetTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTrigger() from the server but SheetTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sheet.tsx\",\n    \"SheetTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA","debugId":null}},
    {"offset": {"line": 1581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\nimport { Menu, Home, Info, User } from 'lucide-react'; // Adjusted icons\n\nexport function Header() {\n  // This header might become very minimal if each property page has its own navigation.\n  // Or it could be a global header with links to properties, login, etc.\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container flex h-16 items-center justify-between\">\n        <Link href=\"/\" className=\"flex items-center gap-2\">\n           {/* Placeholder SVG for logo or use a global logo */}\n           <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6 text-primary\">\n            <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n            <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n          </svg>\n          {/* Use a global brand name or remove if property pages handle branding */}\n          <span className=\"text-xl font-bold text-primary\">RentalSpot</span>\n        </Link>\n\n        {/* Desktop Navigation - Simplified */}\n        <nav className=\"hidden items-center gap-6 md:flex\">\n          <Link href=\"/\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n            Home\n          </Link>\n           {/* Link directly to properties */}\n           <Link href=\"/properties/prahova-mountain-chalet\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n             Prahova Chalet\n           </Link>\n           <Link href=\"/properties/coltei-apartment-bucharest\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n             Coltei Apartment\n           </Link>\n          {/* Add other global links like About, Contact, Login */}\n          {/* <Link href=\"/about\" className=\"text-sm font-medium text-foreground/70 transition-colors hover:text-foreground\">\n            About\n          </Link> */}\n           {/* Changed: Wrap Button inside Link */}\n           {/* <Link href=\"/login\">\n             <Button variant=\"outline\">\n               Login\n             </Button>\n           </Link> */}\n        </nav>\n\n        {/* Mobile Navigation */}\n        <Sheet>\n          <SheetTrigger asChild className=\"md:hidden\">\n            <Button variant=\"outline\" size=\"icon\">\n              <Menu className=\"h-5 w-5\" />\n              <span className=\"sr-only\">Toggle Menu</span>\n            </Button>\n          </SheetTrigger>\n          <SheetContent side=\"right\">\n             {/* Keep global branding in mobile menu */}\n             <Link href=\"/\" className=\"flex items-center gap-2 mb-8\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6 text-primary\">\n                  <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                  <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n               </svg>\n               <span className=\"text-xl font-bold text-primary\">RentalSpot</span>\n            </Link>\n            <nav className=\"grid gap-6 text-lg font-medium\">\n              <Link href=\"/\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                <Home className=\"h-5 w-5\" />\n                Home\n              </Link>\n               <Link href=\"/properties/prahova-mountain-chalet\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                 {/* Use a relevant icon */}\n                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-5 w-5\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/><polyline points=\"9 22 9 12 15 12 15 22\"/></svg>\n                 Prahova Chalet\n               </Link>\n               <Link href=\"/properties/coltei-apartment-bucharest\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                 {/* Use a relevant icon */}\n                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-5 w-5\"><path d=\"M12 22a7 7 0 0 0 7-7c0-2-1-3-1-3l-4-4-4 4s-1 1-1 3a7 7 0 0 0 7 7Z\"/><path d=\"M10.76 14.55a.5.5 0 0 0 .74.71l1.09-1.04a.5.5 0 1 0-.7-.74l-1.04 1.09ZM12.5 16.5a.5.5 0 0 0 .5.5h.5a.5.5 0 0 0 .5-.5v-.5a.5.5 0 0 0-.5-.5h-.5a.5.5 0 0 0-.5.5Zm3.79-1.91a.5.5 0 0 0 .71-.7l-1.04-1.09a.5.5 0 1 0-.74.7l1.09 1.04Z\"/></svg>\n                 Coltei Apartment\n               </Link>\n              {/* Add other global links */}\n              {/* <Link href=\"/about\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                <Info className=\"h-5 w-5\" />\n                About\n              </Link> */}\n              {/* <Link href=\"/login\" className=\"flex items-center gap-4 px-2.5 text-muted-foreground hover:text-foreground\">\n                <User className=\"h-5 w-5\" />\n                Login\n              </Link> */}\n            </nav>\n          </SheetContent>\n        </Sheet>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA,gVAAuD,iBAAiB;AAAxE;;;;;;AAEO,SAAS;IACd,sFAAsF;IACtF,uEAAuE;IACvE,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCAEtB,8OAAC;4BAAI,OAAM;4BAA6B,SAAQ;4BAAY,MAAK;4BAAO,QAAO;4BAAe,aAAY;4BAAI,eAAc;4BAAQ,gBAAe;4BAAQ,WAAU;;8CACpK,8OAAC;oCAAK,GAAE;;;;;;8CACR,8OAAC;oCAAS,QAAO;;;;;;;;;;;;sCAGnB,8OAAC;4BAAK,WAAU;sCAAiC;;;;;;;;;;;;8BAInD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAiF;;;;;;sCAIzG,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAsC,WAAU;sCAAiF;;;;;;sCAG5I,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAyC,WAAU;sCAAiF;;;;;;;;;;;;8BAgBlJ,8OAAC,iIAAA,CAAA,QAAK;;sCACJ,8OAAC,iIAAA,CAAA,eAAY;4BAAC,OAAO;4BAAC,WAAU;sCAC9B,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;;kDAC7B,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;sCAG9B,8OAAC,iIAAA,CAAA,eAAY;4BAAC,MAAK;;8CAEhB,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAI,WAAU;;sDACvB,8OAAC;4CAAI,OAAM;4CAA6B,SAAQ;4CAAY,MAAK;4CAAO,QAAO;4CAAe,aAAY;4CAAI,eAAc;4CAAQ,gBAAe;4CAAQ,WAAU;;8DAClK,8OAAC;oDAAK,GAAE;;;;;;8DACR,8OAAC;oDAAS,QAAO;;;;;;;;;;;;sDAEpB,8OAAC;4CAAK,WAAU;sDAAiC;;;;;;;;;;;;8CAEpD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAI,WAAU;;8DACvB,8OAAC,mMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG7B,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAsC,WAAU;;8DAEzD,8OAAC;oDAAI,OAAM;oDAA6B,OAAM;oDAAK,QAAO;oDAAK,SAAQ;oDAAY,MAAK;oDAAO,QAAO;oDAAe,aAAY;oDAAI,eAAc;oDAAQ,gBAAe;oDAAQ,WAAU;;sEAAU,8OAAC;4DAAK,GAAE;;;;;;sEAAkD,8OAAC;4DAAS,QAAO;;;;;;;;;;;;gDAA+B;;;;;;;sDAGlT,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAyC,WAAU;;8DAE5D,8OAAC;oDAAI,OAAM;oDAA6B,OAAM;oDAAK,QAAO;oDAAK,SAAQ;oDAAY,MAAK;oDAAO,QAAO;oDAAe,aAAY;oDAAI,eAAc;oDAAQ,gBAAe;oDAAQ,WAAU;;sEAAU,8OAAC;4DAAK,GAAE;;;;;;sEAAqE,8OAAC;4DAAK,GAAE;;;;;;;;;;;;gDAA2O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBvhB","debugId":null}},
    {"offset": {"line": 1926, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/availability-check.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AvailabilityCheck = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvailabilityCheck() from the server but AvailabilityCheck is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/availability-check.tsx <module evaluation>\",\n    \"AvailabilityCheck\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+EACA","debugId":null}},
    {"offset": {"line": 1940, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/availability-check.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AvailabilityCheck = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvailabilityCheck() from the server but AvailabilityCheck is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/availability-check.tsx\",\n    \"AvailabilityCheck\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2DACA","debugId":null}},
    {"offset": {"line": 1954, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1964, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/footer.tsx"],"sourcesContent":["\nimport Link from 'next/link';\n\nexport function Footer() {\n  return (\n    <footer className=\"border-t bg-muted/50\">\n      <div className=\"container py-8 text-center text-sm text-muted-foreground md:flex md:items-center md:justify-between md:py-10\">\n        <p>&copy; {new Date().getFullYear()} RentalSpot. All rights reserved.</p>\n        <nav className=\"mt-4 flex justify-center gap-4 md:mt-0\">\n          <Link href=\"/\" className=\"hover:text-foreground\">\n            Home\n          </Link>\n          {/* Add other relevant global links */}\n          {/* <Link href=\"/privacy\" className=\"hover:text-foreground\">\n            Privacy Policy\n          </Link>\n          <Link href=\"/terms\" className=\"hover:text-foreground\">\n            Terms of Service\n          </Link> */}\n           <Link href=\"#contact\" className=\"hover:text-foreground\"> {/* Assuming a contact section exists on most pages */}\n            Contact\n          </Link>\n        </nav>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;;wBAAE;wBAAQ,IAAI,OAAO,WAAW;wBAAG;;;;;;;8BACpC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAwB;;;;;;sCAUhD,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;;gCAAwB;gCAAwD;;;;;;;;;;;;;;;;;;;;;;;;AAO3H","debugId":null}},
    {"offset": {"line": 2036, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/initial-booking-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InitialBookingForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call InitialBookingForm() from the server but InitialBookingForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/initial-booking-form.tsx <module evaluation>\",\n    \"InitialBookingForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iFACA","debugId":null}},
    {"offset": {"line": 2050, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/initial-booking-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InitialBookingForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call InitialBookingForm() from the server but InitialBookingForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/booking/initial-booking-form.tsx\",\n    \"InitialBookingForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6DACA","debugId":null}},
    {"offset": {"line": 2064, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2074, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2155, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iEACA","debugId":null}},
    {"offset": {"line": 2169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6CACA","debugId":null}},
    {"offset": {"line": 2183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/property/property-page-layout.tsx"],"sourcesContent":["\n// src/components/property/property-page-layout.tsx\nimport Image from 'next/image';\nimport type { Property } from '@/types';\nimport { Header } from '@/components/header'; // Use the generic header\nimport { Footer } from '@/components/footer'; // Use the generic footer\nimport { InitialBookingForm } from '@/components/booking/initial-booking-form';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Button } from '@/components/ui/button';\nimport {\n  BedDouble, Bath, Users, Wifi, ParkingCircle, Tv, Utensils, Clock, CheckCircle, MapPin, Home, MountainSnow, Trees, ListChecks, Wind, Building\n} from 'lucide-react';\n\ninterface PropertyPageLayoutProps {\n  property: Property;\n}\n\nexport function PropertyPageLayout({ property }: PropertyPageLayoutProps) {\n  const featuredImage = property.images?.find(img => img.isFeatured) || property.images?.[0];\n  const galleryImages = property.images?.filter(img => !img.isFeatured) || [];\n\n  // Generic mapping for common amenities\n  const amenityIcons: { [key: string]: React.ReactNode } = {\n    wifi: <Wifi className=\"h-4 w-4 mr-1\" />,\n    kitchen: <Utensils className=\"h-4 w-4 mr-1\" />,\n    parking: <ParkingCircle className=\"h-4 w-4 mr-1\" />,\n    tv: <Tv className=\"h-4 w-4 mr-1\" />,\n    fireplace: <Home className=\"h-4 w-4 mr-1\" />, // Generic home icon\n    'mountain view': <MountainSnow className=\"h-4 w-4 mr-1\" />,\n    garden: <Trees className=\"h-4 w-4 mr-1\" />,\n    'air conditioning': <Wind className=\"h-4 w-4 mr-1\" />,\n    'washer/dryer': <CheckCircle className=\"h-4 w-4 mr-1 text-primary\" />, // Use primary color\n    elevator: <Building className=\"h-4 w-4 mr-1\" />,\n  };\n\n  const houseRules = property.houseRules || []; // Ensure houseRules is an array\n\n  return (\n    <div className=\"flex min-h-screen flex-col bg-background\">\n      {/* Use Generic Header */}\n      <Header />\n\n      {/* Hero Section with Overlay Booking Form */}\n      <section className=\"relative h-[60vh] md:h-[70vh] w-full\">\n        {featuredImage ? (\n          <Image\n            src={featuredImage.url}\n            alt={featuredImage.alt || `Featured image of ${property.name}`}\n            fill\n            style={{ objectFit: \"cover\" }}\n            priority\n            className=\"brightness-75\" // Add slight dimming\n            data-ai-hint={featuredImage['data-ai-hint']}\n          />\n        ) : (\n          <div className=\"absolute inset-0 bg-muted flex items-center justify-center\">\n            <Home className=\"h-24 w-24 text-muted-foreground/30\" />\n          </div>\n        )}\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <Card className=\"w-full max-w-md bg-background/90 backdrop-blur-sm shadow-xl border-border p-4 md:p-6 mx-4\">\n            <CardHeader className=\"p-0 mb-4\">\n              <CardTitle className=\"text-xl text-center mb-1\">\n                <span className=\"text-2xl font-bold text-foreground\">${property.pricePerNight}</span> / night\n              </CardTitle>\n              {property.ratings && property.ratings.count > 0 && (\n                 <div className=\"text-sm text-muted-foreground text-center\">\n                    ⭐ {property.ratings.average.toFixed(1)} ({property.ratings.count} reviews)\n                 </div>\n              )}\n            </CardHeader>\n            <CardContent className=\"p-0\">\n              <InitialBookingForm property={property} />\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Main Content - Below the Hero */}\n      <main className=\"flex-grow container py-12 md:py-16\">\n        <div className=\"flex flex-col lg:flex-row gap-8 lg:gap-12\">\n\n          {/* Left/Main Column: Property Details */}\n          <div className=\"lg:w-2/3 space-y-8\">\n            {/* Title and Location */}\n            <div>\n                <h1 className=\"text-3xl md:text-4xl font-bold tracking-tight text-foreground mb-2\">\n                 {property.name}\n                </h1>\n                {property.location && (\n                  <div className=\"flex items-center text-muted-foreground mb-6\">\n                    <MapPin className=\"h-4 w-4 mr-1 text-primary\" />\n                    <span>{property.location.city}, {property.location.state}, {property.location.country}</span>\n                  </div>\n                )}\n            </div>\n\n            {/* Description */}\n            <div className=\"prose max-w-none dark:prose-invert text-foreground/90\">\n              <h2 className=\"text-2xl font-semibold mb-3 text-foreground\">About this property</h2>\n              <p>{property.description}</p>\n            </div>\n\n            <Separator />\n\n            {/* Key Features */}\n            <div>\n              <h3 className=\"text-xl font-semibold mb-4 text-foreground\">Key Features</h3>\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4 text-sm\">\n                <div className=\"flex items-center\"><Users className=\"h-4 w-4 mr-2 text-primary\" /> Max {property.maxGuests} Guests</div>\n                <div className=\"flex items-center\"><BedDouble className=\"h-4 w-4 mr-2 text-primary\" /> {property.bedrooms} Bedrooms</div>\n                <div className=\"flex items-center\"><BedDouble className=\"h-4 w-4 mr-2 text-primary\" /> {property.beds} Beds</div>\n                <div className=\"flex items-center\"><Bath className=\"h-4 w-4 mr-2 text-primary\" /> {property.bathrooms} Bathrooms</div>\n                 {property.squareFeet && <div className=\"flex items-center\"><Home className=\"h-4 w-4 mr-2 text-primary\" /> {property.squareFeet} sqm</div>}\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Amenities */}\n            {property.amenities && property.amenities.length > 0 && (\n              <div>\n                <h3 className=\"text-xl font-semibold mb-4 text-foreground\">Amenities</h3>\n                <ul className=\"grid grid-cols-2 sm:grid-cols-3 gap-3 text-sm list-none pl-0\">\n                  {property.amenities.map((amenity) => (\n                    <li key={amenity} className=\"flex items-center\">\n                      {amenityIcons[amenity.toLowerCase()] || <CheckCircle className=\"h-4 w-4 mr-1 text-primary\" />}\n                      {amenity}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            <Separator />\n\n            {/* House Rules */}\n            {houseRules.length > 0 && (\n              <div id=\"house-rules\">\n                <h3 className=\"text-xl font-semibold mb-4 text-foreground flex items-center\">\n                  <ListChecks className=\"h-5 w-5 mr-2 text-primary\" /> House Rules\n                </h3>\n                <ul className=\"list-none pl-0 space-y-2 text-sm\">\n                  {houseRules.map((rule, index) => (\n                    <li key={index} className=\"flex items-center\">\n                      <CheckCircle className=\"h-4 w-4 mr-2 text-primary shrink-0\" />\n                      {rule}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n             <Separator />\n\n            {/* Check-in / Check-out */}\n            <div>\n              <h3 className=\"text-xl font-semibold mb-3 text-foreground\">Check-in / Check-out</h3>\n              <div className=\"flex gap-4 text-sm\">\n                 {property.checkInTime && <div className=\"flex items-center\"> <Clock className=\"h-4 w-4 mr-1 text-primary\"/>Check-in: {property.checkInTime}</div>}\n                 {property.checkOutTime && <div className=\"flex items-center\"> <Clock className=\"h-4 w-4 mr-1 text-primary\"/>Check-out: {property.checkOutTime}</div>}\n              </div>\n            </div>\n\n            {/* Cancellation Policy */}\n             {property.cancellationPolicy && (\n                 <>\n                   <Separator />\n                   <div>\n                     <h3 className=\"text-xl font-semibold mb-3 text-foreground\">Cancellation Policy</h3>\n                     <p className=\"text-sm text-muted-foreground\">{property.cancellationPolicy}</p>\n                   </div>\n                 </>\n             )}\n\n             {/* Location Section Placeholder */}\n             <Separator />\n             <div id=\"location\">\n                 <h2 className=\"text-xl font-semibold mb-4 text-foreground\">Location</h2>\n                  {property.location && (\n                     <p className=\"text-muted-foreground mb-4\">\n                        Located in {property.location.city}, {property.location.state}. Exact address provided after booking.\n                     </p>\n                  )}\n                  {/* Placeholder for map */}\n                 <div className=\"aspect-video bg-muted rounded-lg flex items-center justify-center\">\n                     <MapPin className=\"h-12 w-12 text-muted-foreground/50\" />\n                 </div>\n             </div>\n\n              {/* Contact Section Placeholder */}\n             <Separator />\n             <div id=\"contact\">\n                 <h2 className=\"text-xl font-semibold mb-4 text-foreground\">Contact Host</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                     Have questions? Reach out to the property owner.\n                  </p>\n                  {/* TODO: Implement contact functionality or link */}\n                  <Button variant=\"outline\">Contact Owner</Button>\n             </div>\n          </div>\n\n          {/* Right/Sidebar Column: Image Gallery */}\n          <div className=\"lg:w-1/3 space-y-4 lg:sticky lg:top-24 lg:self-start\" id=\"gallery\">\n            <h2 className=\"text-2xl font-semibold text-foreground mb-4\">Gallery</h2>\n            {galleryImages.length > 0 ? (\n                 galleryImages.map((image, index) => (\n                 <div key={index} className=\"relative aspect-[4/3] w-full overflow-hidden rounded-lg shadow-md\">\n                    <Image\n                     src={image.url}\n                     alt={image.alt || `Gallery image ${index + 1} of ${property.name}`}\n                     fill\n                     style={{objectFit: \"cover\"}}\n                      data-ai-hint={image['data-ai-hint']}\n                    />\n                 </div>\n                 ))\n             ) : (\n                // Show featured image if no other gallery images exist\n                featuredImage && (\n                    <div className=\"relative aspect-[4/3] w-full overflow-hidden rounded-lg shadow-md\">\n                         <Image\n                             src={featuredImage.url}\n                             alt={featuredImage.alt || `Featured image of ${property.name}`}\n                             fill\n                             style={{objectFit: \"cover\"}}\n                              data-ai-hint={featuredImage['data-ai-hint']}\n                         />\n                     </div>\n                 )\n             )}\n             {/* Placeholder if no images at all */}\n             {!featuredImage && galleryImages.length === 0 && (\n                 <div className=\"relative aspect-[4/3] w-full overflow-hidden rounded-lg shadow-md bg-muted flex items-center justify-center\">\n                     <Home className=\"h-12 w-12 text-muted-foreground/50\" />\n                 </div>\n             )}\n\n          </div>\n        </div>\n      </main>\n      {/* Use Generic Footer */}\n      <Footer />\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3025, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/properties/%5Bslug%5D/page.tsx"],"sourcesContent":["\n// src/app/properties/[slug]/page.tsx\n\nimport Image from 'next/image';\nimport { notFound } from 'next/navigation';\nimport type { Property, SerializableTimestamp } from '@/types';\n// Removed Prahova and Coltei specific layouts\nimport { PropertyPageLayout } from '@/components/property/property-page-layout'; // Import the new generic layout\nimport { Header } from '@/components/header'; // Keep generic header if needed by the layout\nimport { collection, query, where, getDocs, Timestamp } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Import db for data fetching\n\n// **** EXPORT the function ****\nexport async function getPropertyBySlug(slug: string): Promise<Property | undefined> {\n    try {\n        // **** Use Client SDK ****\n        const propertiesCollection = collection(db, 'properties');\n        const q = query(propertiesCollection, where('slug', '==', slug));\n        const querySnapshot = await getDocs(q);\n\n        if (!querySnapshot.empty) {\n            const doc = querySnapshot.docs[0];\n            const data = doc.data();\n\n            // Function to safely convert Firestore Timestamps or objects to Dates\n            const convertToDate = (timestamp: any): Date | undefined => {\n                if (!timestamp) return undefined;\n                if (timestamp instanceof Timestamp) {\n                    return timestamp.toDate();\n                } else if (timestamp && typeof timestamp.seconds === 'number' && typeof timestamp.nanoseconds === 'number') {\n                    // Handle Firestore Timestamp-like objects from JSON/serialization\n                    return new Timestamp(timestamp.seconds, timestamp.nanoseconds).toDate();\n                } else if (typeof timestamp === 'string') {\n                    // Handle ISO strings\n                     try { return new Date(timestamp); } catch { return undefined; }\n                } else if (typeof timestamp === 'number') {\n                     // Assuming milliseconds since epoch\n                     try { return new Date(timestamp); } catch { return undefined; }\n                }\n                return undefined;\n            };\n\n             // Convert relevant fields\n             const propertyData = {\n                id: doc.id,\n                ...data,\n                // Ensure timestamps are converted to Dates or stay as undefined/null\n                createdAt: convertToDate(data.createdAt),\n                updatedAt: convertToDate(data.updatedAt),\n                 // Ensure arrays are always present even if missing in Firestore\n                images: Array.isArray(data.images) ? data.images : [],\n                amenities: Array.isArray(data.amenities) ? data.amenities : [],\n                houseRules: Array.isArray(data.houseRules) ? data.houseRules : [],\n                 // Explicitly cast potentially missing nested objects to ensure type safety\n                location: data.location || {},\n                ratings: data.ratings || { average: 0, count: 0 },\n            } as Property;\n\n             // Ensure nested location coordinates exist\n             if (propertyData.location && !propertyData.location.coordinates) {\n                 propertyData.location.coordinates = { latitude: 0, longitude: 0 }; // Default coordinates if missing\n             }\n\n            return propertyData;\n        } else {\n            console.warn(`[getPropertyBySlug] Property with slug '${slug}' not found.`);\n            return undefined;\n        }\n    } catch (error) {\n        console.error(`❌ Error fetching property with slug ${slug}:`, error);\n        return undefined;\n    }\n}\n\n\ninterface PropertyDetailsPageProps {\n  params: { slug: string };\n}\n\n// Generate static paths using Firestore data\nexport async function generateStaticParams() {\n  try {\n      // **** Use Client SDK ****\n      const propertiesCollection = collection(db, 'properties');\n      const snapshot = await getDocs(propertiesCollection);\n\n      if (snapshot.empty) {\n        console.warn(\"[generateStaticParams] No properties found in Firestore to generate static params.\");\n        return [];\n      }\n\n      const params = snapshot.docs\n        .map(doc => ({\n            slug: doc.data().slug as string,\n        }))\n        .filter(param => typeof param.slug === 'string' && param.slug.length > 0); // Ensure slug is a non-empty string\n\n      console.log(`[generateStaticParams] Generated ${params.length} params:`, params);\n      return params;\n  } catch (error) {\n       console.error(\"❌ Error fetching properties for generateStaticParams:\", error);\n       return [];\n  }\n}\n\n\nexport default async function PropertyDetailsPage({ params }: PropertyDetailsPageProps) {\n  // Await the params before accessing slug\n  const awaitedParams = params;\n  const slug = awaitedParams.slug;\n\n  if (!slug) {\n    console.error(\"[PropertyDetailsPage] Slug is missing from params.\");\n    notFound();\n  }\n  console.log(`[PropertyDetailsPage] Rendering page for slug: ${slug}`);\n\n  // Fetch property data using the slug\n  const property = await getPropertyBySlug(slug);\n\n  if (!property) {\n     console.warn(`[PropertyDetailsPage] Property not found for slug: ${slug}`);\n    notFound();\n  }\n  console.log(`[PropertyDetailsPage] Property loaded from Firestore: ${property.name} (ID: ${property.id})`);\n\n\n  // Use the generic PropertyPageLayout for all properties\n  return <PropertyPageLayout property={property} />;\n\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3163, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/booking/check/%5Bslug%5D/page.tsx"],"sourcesContent":["\n// src/app/booking/check/[slug]/page.tsx\nimport { Suspense } from 'react';\nimport type { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\nimport { Header } from '@/components/header'; // Assuming a generic header\nimport { AvailabilityCheck } from '@/components/booking/availability-check'; // Import the new component\n// Correct import path: Import directly from the file where it's defined\nimport { getPropertyBySlug } from '@/app/properties/[slug]/page';\nimport { db } from '@/lib/firebase'; // Import db for data fetching\nimport { collection, query, where, getDocs } from 'firebase/firestore';\n\ninterface AvailabilityCheckPageProps {\n  params: { slug: string };\n  searchParams: {\n    checkIn?: string;\n    checkOut?: string;\n    // guests?: string; // guests is no longer passed via search params\n  };\n}\n\n// Optional: Function to generate metadata dynamically\nexport async function generateMetadata({ params }: AvailabilityCheckPageProps): Promise<Metadata> {\n  const property = await getPropertyBySlug(params.slug);\n  if (!property) {\n    return { title: 'Availability Check - Not Found' };\n  }\n  return {\n    title: `Check Availability - ${property.name}`,\n    description: `Check booking availability for ${property.name} for your selected dates.`,\n  };\n}\n\n// Main Page Component\nexport default async function AvailabilityCheckPage({ params, searchParams }: AvailabilityCheckPageProps) {\n  const property = await getPropertyBySlug(params.slug);\n\n  if (!property) {\n    notFound(); // Property slug is invalid\n  }\n\n  // Basic validation for search params (only dates now)\n  // Accessing searchParams directly is the standard pattern in page components\n  const checkIn = searchParams.checkIn;\n  const checkOut = searchParams.checkOut;\n\n  if (!checkIn || !checkOut) {\n    // Handle invalid search params, maybe redirect back or show an error\n    // For now, we can let the AvailabilityCheck component handle it,\n    // or redirect: redirect(`/properties/${params.slug}`);\n    console.warn(\"[AvailabilityCheckPage] Invalid search parameters received:\", searchParams);\n    // Consider rendering an error state within AvailabilityCheck instead of redirecting immediately\n  }\n\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      <Header />\n      <main className=\"flex-grow container py-12 md:py-16\">\n        {/* Wrap AvailabilityCheck in Suspense if it uses useSearchParams directly,\n            but passing props is generally preferred for Server Components */}\n        <Suspense fallback={<div>Loading availability...</div>}>\n          <AvailabilityCheck\n            property={property}\n            initialCheckIn={checkIn}\n            initialCheckOut={checkOut}\n          />\n        </Suspense>\n      </main>\n      {/* Add a generic footer if desired */}\n      {/* <Footer /> */}\n       <footer className=\"border-t bg-muted/50\">\n         <div className=\"container py-4 text-center text-xs text-muted-foreground\">\n           RentalSpot &copy; {new Date().getFullYear()}\n         </div>\n       </footer>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"AACA,wCAAwC;;;;;;AACxC;AAEA;AAAA;AACA,0NAA8C,4BAA4B;AAC1E,wQAA6E,2BAA2B;AACxG,wEAAwE;AACxE;;;;;;;AAcO,eAAe,iBAAiB,EAAE,MAAM,EAA8B;IAC3E,MAAM,WAAW,MAAM,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,OAAO,IAAI;IACpD,IAAI,CAAC,UAAU;QACb,OAAO;YAAE,OAAO;QAAiC;IACnD;IACA,OAAO;QACL,OAAO,CAAC,qBAAqB,EAAE,SAAS,IAAI,EAAE;QAC9C,aAAa,CAAC,+BAA+B,EAAE,SAAS,IAAI,CAAC,yBAAyB,CAAC;IACzF;AACF;AAGe,eAAe,sBAAsB,EAAE,MAAM,EAAE,YAAY,EAA8B;IACtG,MAAM,WAAW,MAAM,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,OAAO,IAAI;IAEpD,IAAI,CAAC,UAAU;QACb,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,KAAK,2BAA2B;IACzC;IAEA,sDAAsD;IACtD,6EAA6E;IAC7E,MAAM,UAAU,aAAa,OAAO;IACpC,MAAM,WAAW,aAAa,QAAQ;IAEtC,IAAI,CAAC,WAAW,CAAC,UAAU;QACzB,qEAAqE;QACrE,iEAAiE;QACjE,uDAAuD;QACvD,QAAQ,IAAI,CAAC,+DAA+D;IAC5E,gGAAgG;IAClG;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,SAAM;;;;;0BACP,8OAAC;gBAAK,WAAU;0BAGd,cAAA,8OAAC,qMAAA,CAAA,WAAQ;oBAAC,wBAAU,8OAAC;kCAAI;;;;;;8BACvB,cAAA,8OAAC,sJAAA,CAAA,oBAAiB;wBAChB,UAAU;wBACV,gBAAgB;wBAChB,iBAAiB;;;;;;;;;;;;;;;;0BAMtB,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;;wBAA2D;wBACrD,IAAI,OAAO,WAAW;;;;;;;;;;;;;;;;;;AAKpD","debugId":null}}]
}