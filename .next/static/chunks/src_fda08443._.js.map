{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,qKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,qKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,qKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,qKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;KAVH;AAaN,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,qKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,qKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/bookingService.ts"],"sourcesContent":["\n// src/services/bookingService.ts\n'use server';\n\nimport {\n  collection,\n  addDoc,\n  doc,\n  getDoc,\n  updateDoc,\n  query,\n  where,\n  getDocs,\n  serverTimestamp as clientServerTimestamp,\n  Timestamp as ClientTimestamp,\n  writeBatch as clientWriteBatch,\n  setDoc as clientSetDoc,\n  QueryConstraint,\n  limit,\n  documentId,\n} from 'firebase/firestore';\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase';\nimport type { Booking, Availability, Property, SerializableTimestamp } from '@/types';\nimport { differenceInCalendarDays, eachDayOfInterval, format, parse, subDays, startOfMonth, endOfMonth, parseISO, startOfDay } from 'date-fns';\nimport { updateAirbnbListingAvailability, updateBookingComListingAvailability, getPropertyForSync } from './booking-sync';\n\n// --- Schemas (Keep Zod schemas for data validation if createBooking is still used elsewhere) ---\n\nexport type CreateBookingData = Omit<Booking,\n  'id' |\n  'checkInDate' |\n  'checkOutDate' |\n  'createdAt' |\n  'updatedAt' |\n  'paymentInfo' | // paymentInfo structure is defined separately now\n  'pricing'\n> & {\n  checkInDate: string; // ISO String\n  checkOutDate: string; // ISO String\n  pricing: {\n    baseRate: number;\n    numberOfNights: number;\n    cleaningFee: number;\n    extraGuestFee?: number;\n    numberOfExtraGuests?: number;\n    accommodationTotal: number;\n    subtotal: number;\n    taxes?: number;\n    discountAmount?: number;\n    total: number;\n  };\n  appliedCouponCode?: string;\n  // paymentInput is now handled by the webhook and updateBookingPaymentInfo\n  // status will likely be 'confirmed' when this is called by simulation/webhook\n  status?: Booking['status']; // Optional for flexibility, webhook should set 'confirmed'\n};\n\nconst CreateBookingDataSchema = z.object({\n  propertyId: z.string().min(1),\n  guestInfo: z.object({\n    firstName: z.string().min(1),\n    lastName: z.string().optional(),\n    email: z.string().email(),\n    phone: z.string().optional(),\n    userId: z.string().optional(),\n  }).passthrough(),\n  checkInDate: z.string().refine(val => !isNaN(Date.parse(val))),\n  checkOutDate: z.string().refine(val => !isNaN(Date.parse(val))),\n  numberOfGuests: z.number().int().positive(),\n  pricing: z.object({\n    baseRate: z.number().nonnegative(),\n    numberOfNights: z.number().int().positive(),\n    cleaningFee: z.number().nonnegative(),\n    extraGuestFee: z.number().nonnegative().optional(),\n    numberOfExtraGuests: z.number().int().nonnegative().optional(),\n    accommodationTotal: z.number().nonnegative(),\n    subtotal: z.number().nonnegative(),\n    taxes: z.number().nonnegative().optional(),\n    discountAmount: z.number().nonnegative().optional(),\n    total: z.number().nonnegative(),\n  }).passthrough(),\n  appliedCouponCode: z.string().optional(),\n  status: z.enum(['pending', 'confirmed', 'cancelled', 'completed']).optional(),\n  // Removed paymentInput validation here, handled separately\n  notes: z.string().optional(),\n  source: z.string().optional(),\n  externalId: z.string().optional(),\n}).refine(data => new Date(data.checkOutDate) > new Date(data.checkInDate), {\n  message: 'Check-out date must be after check-in date.',\n  path: ['checkOutDate'],\n}).refine(data => {\n    const calculatedTotal = (data.pricing.subtotal ?? 0) + (data.pricing.taxes ?? 0) - (data.pricing.discountAmount ?? 0);\n    return Math.abs(calculatedTotal - data.pricing.total) < 0.01;\n}, {\n    message: 'Calculated total does not match provided total price.',\n    path: ['pricing.total'],\n});\n\n\n/**\n * Updates an existing booking (typically 'pending') with payment information\n * and sets its status to 'confirmed'. Called by the Stripe webhook.\n */\nexport async function updateBookingPaymentInfo(\n    bookingId: string,\n    paymentInfo: Booking['paymentInfo']\n): Promise<void> {\n    console.log(`--- [updateBookingPaymentInfo] Called for booking: ${bookingId} ---`);\n    if (!bookingId) {\n        throw new Error(\"Booking ID is required to update payment info.\");\n    }\n     if (!paymentInfo || !paymentInfo.stripePaymentIntentId || paymentInfo.status !== 'paid' && paymentInfo.status !== 'succeeded') {\n         console.warn(`[updateBookingPaymentInfo] Invalid or incomplete payment info for booking ${bookingId}. Status: ${paymentInfo?.status}`);\n        throw new Error(\"Valid payment information (status 'paid' or 'succeeded') is required.\");\n    }\n\n    const bookingRef = doc(db, 'bookings', bookingId);\n\n    try {\n        // Fetch the booking to get check-in/out dates for availability update\n        const bookingSnap = await getDoc(bookingRef);\n        if (!bookingSnap.exists()) {\n            console.error(`[updateBookingPaymentInfo] Booking ${bookingId} not found.`);\n            throw new Error(`Booking with ID ${bookingId} not found.`);\n        }\n        const bookingData = bookingSnap.data() as Booking; // Cast to Booking\n\n        console.log(`[updateBookingPaymentInfo] Updating booking ${bookingId} status to 'confirmed' and adding payment details.`);\n        await updateDoc(bookingRef, {\n            status: 'confirmed',\n            paymentInfo: { // Merge with existing potentially, or overwrite\n                ...bookingData.paymentInfo, // Keep existing fields if any\n                ...paymentInfo, // Add/overwrite with new payment data\n                paidAt: paymentInfo.paidAt instanceof Date ? Timestamp.fromDate(paymentInfo.paidAt) : clientServerTimestamp(), // Ensure Firestore Timestamp\n            },\n            updatedAt: clientServerTimestamp(),\n        });\n        console.log(`✅ [updateBookingPaymentInfo] Successfully updated booking ${bookingId} to confirmed.`);\n\n        // --- Update Property Availability ---\n        const checkInDate = bookingData.checkInDate instanceof Timestamp\n            ? bookingData.checkInDate.toDate()\n            : bookingData.checkInDate ? new Date(bookingData.checkInDate as any) : null; // Handle different types\n        const checkOutDate = bookingData.checkOutDate instanceof Timestamp\n            ? bookingData.checkOutDate.toDate()\n            : bookingData.checkOutDate ? new Date(bookingData.checkOutDate as any) : null;\n\n        if (checkInDate && checkOutDate) {\n             console.log(`[updateBookingPaymentInfo] Triggering availability update for property ${bookingData.propertyId}, booking ${bookingId}`);\n            try {\n                await updatePropertyAvailability(bookingData.propertyId, checkInDate, checkOutDate, false); // Mark as unavailable\n                console.log(`✅ [updateBookingPaymentInfo] Availability updated for property ${bookingData.propertyId}.`);\n            } catch (availabilityError) {\n                 console.error(`❌ [updateBookingPaymentInfo] Failed to update availability for property ${bookingData.propertyId} after confirming booking ${bookingId}:`, availabilityError);\n                 // Log but don't fail the whole process, booking is confirmed\n            }\n             // --- Trigger External Sync ---\n             // Move sync here, only sync AFTER booking is confirmed\n             console.log(`[updateBookingPaymentInfo] Triggering external sync for property ${bookingData.propertyId}, booking ${bookingId}...`);\n             try {\n                 const propertyDetails = await getPropertyForSync(bookingData.propertyId);\n                 if (propertyDetails) {\n                     if (propertyDetails.airbnbListingId) {\n                         await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, false, checkInDate, checkOutDate);\n                     }\n                     if (propertyDetails.bookingComListingId) {\n                         await updateBookingComListingAvailability(propertyDetails.bookingComListingId, false, checkInDate, checkOutDate);\n                     }\n                 } else {\n                     console.warn(`[updateBookingPaymentInfo Sync] Could not find property ${bookingData.propertyId} for external sync.`);\n                 }\n             } catch (syncError) {\n                  console.error(`❌ [updateBookingPaymentInfo Sync] Error syncing externally for booking ${bookingId}:`, syncError);\n             }\n\n        } else {\n             console.warn(`[updateBookingPaymentInfo] Missing check-in/out dates for booking ${bookingId}. Cannot update availability.`);\n        }\n\n    } catch (error) {\n        console.error(`❌ [updateBookingPaymentInfo] Error updating booking ${bookingId}:`, error);\n        throw new Error(`Failed to update booking payment info: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n\n/**\n * Creates a new confirmed booking document in Firestore (e.g., for simulations or direct creation).\n * NOTE: The primary flow now uses createPendingBookingAction followed by webhook confirmation.\n * This function might still be useful for the simulation button.\n */\nexport async function createBooking(rawBookingData: CreateBookingData): Promise<string> {\n   const paymentIntentId = (rawBookingData as any)?.paymentInput?.stripePaymentIntentId || 'N/A'; // Handle potential missing paymentInput\n   console.log(`--- [createBooking] Function called (likely simulation) for Payment Intent [${paymentIntentId}] ---`);\n   console.log(`[createBooking] Received raw data:`, JSON.stringify(rawBookingData, null, 2));\n\n   let bookingData: z.infer<typeof CreateBookingDataSchema>;\n\n   // Zod Validation\n   console.log(`[createBooking] Starting Zod validation...`);\n   const validationResult = CreateBookingDataSchema.safeParse(rawBookingData);\n   if (!validationResult.success) {\n     const errorMessages = validationResult.error.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ');\n     const validationError = new Error(`Invalid booking data: ${errorMessages}`);\n     console.error(`❌ [createBooking] Validation Error:`, validationError.message);\n     throw validationError;\n   }\n   bookingData = validationResult.data;\n   console.log(`[createBooking] Data passed validation.`);\n\n\n  try {\n     console.log(`[createBooking] Entered main try block.`);\n     const bookingsCollection = collection(db, 'bookings');\n\n     // Data Transformation\n     console.log(`[createBooking] Transforming data for Firestore...`);\n     const checkInDate = new Date(bookingData.checkInDate);\n     const checkOutDate = new Date(bookingData.checkOutDate);\n     const checkInTimestamp = ClientTimestamp.fromDate(checkInDate);\n     const checkOutTimestamp = ClientTimestamp.fromDate(checkOutDate);\n\n     // Construct PaymentInfo if paymentInput exists (for simulation)\n      let paymentInfo: Booking['paymentInfo'] | undefined = undefined;\n      if ((rawBookingData as any).paymentInput) {\n          const paymentInput = (rawBookingData as any).paymentInput;\n          paymentInfo = {\n              stripePaymentIntentId: paymentInput.stripePaymentIntentId || `simulated_${Date.now()}`,\n              amount: paymentInput.amount ?? bookingData.pricing.total,\n              status: paymentInput.status || 'succeeded',\n              paidAt: (paymentInput.status === 'succeeded' || paymentInput.status === 'paid')\n                  ? ClientTimestamp.now()\n                  : null,\n          };\n      } else {\n          // Create a default placeholder if no paymentInput provided (shouldn't happen in normal flow)\n           paymentInfo = {\n               stripePaymentIntentId: 'N/A',\n               amount: bookingData.pricing.total,\n               status: 'unknown', // Or 'confirmed' if assuming success?\n               paidAt: null,\n           };\n      }\n\n     // Construct the final booking document data\n     const docData: Omit<Booking, 'id'> = {\n         propertyId: bookingData.propertyId,\n         guestInfo: bookingData.guestInfo,\n         checkInDate: checkInTimestamp,\n         checkOutDate: checkOutTimestamp,\n         numberOfGuests: bookingData.numberOfGuests,\n         pricing: bookingData.pricing,\n         appliedCouponCode: bookingData.appliedCouponCode,\n         status: bookingData.status || 'confirmed', // Default to confirmed for direct creation/simulation\n         paymentInfo: paymentInfo,\n         notes: bookingData.notes,\n         source: bookingData.source || 'simulation', // Default source\n         externalId: bookingData.externalId,\n         createdAt: clientServerTimestamp(),\n         updatedAt: clientServerTimestamp(),\n     };\n\n     console.log(`[createBooking] Firestore Doc Data Prepared:`, JSON.stringify({ ...docData, checkInDate: `Timestamp(${checkInDate.toISOString()})`, checkOutDate: `Timestamp(${checkOutDate.toISOString()})`, paidAt: docData.paymentInfo.paidAt ? `Timestamp(${(docData.paymentInfo.paidAt as ClientTimestamp).toDate().toISOString()})` : null, createdAt: 'ServerTimestamp', updatedAt: 'ServerTimestamp' }, null, 2));\n\n\n     // Firestore Operation (Client SDK)\n     console.log(`[createBooking] Attempting to add booking document...`);\n     const docRef = await addDoc(bookingsCollection, docData);\n     const bookingId = docRef.id;\n     console.log(`✅ [createBooking] Booking document created successfully! ID: ${bookingId}`);\n\n     // --- Update Property Availability (Client SDK) ---\n     console.log(`[createBooking] Triggering local availability update for property ${bookingData.propertyId}, booking ${bookingId}`);\n     try {\n       await updatePropertyAvailability(bookingData.propertyId, checkInDate, checkOutDate, false);\n       console.log(`✅ [createBooking] Successfully finished update call for local availability for property ${bookingData.propertyId}, booking ${bookingId}.`);\n     } catch (availabilityError) {\n       console.error(`❌ [createBooking] Failed to update local availability for property ${bookingData.propertyId} after creating booking ${bookingId}:`, availabilityError);\n       // Decide if this should block the entire process or just log a warning\n       // In simulation, maybe log and continue? For real bookings, re-throw.\n        // throw availabilityError; // Uncomment if availability update failure should halt creation\n        console.warn(`⚠️ [createBooking] Availability update failed, but booking ${bookingId} was created (source: ${docData.source}). Manual check needed.`);\n     }\n\n     // --- Synchronize Availability with External Platforms ---\n     // Skip sync for simulation/test bookings or handle differently if needed\n      if (docData.source !== 'simulation' && docData.source !== 'test-button') {\n          console.log(`[createBooking] Starting external platform sync for property ${bookingData.propertyId}, booking ${bookingId}...`);\n          try {\n             const propertyDetails = await getPropertyForSync(bookingData.propertyId);\n             if (propertyDetails) {\n                 if (propertyDetails.airbnbListingId) {\n                     await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, false, checkInDate, checkOutDate);\n                 }\n                 if (propertyDetails.bookingComListingId) {\n                     await updateBookingComListingAvailability(propertyDetails.bookingComListingId, false, checkInDate, checkOutDate);\n                 }\n             } else {\n                  console.warn(`[createBooking Sync] Could not retrieve property details for ${bookingData.propertyId} to perform external sync.`);\n             }\n         } catch (syncError) {\n             console.error(`❌ [createBooking Sync] Error synchronizing availability with external platforms for property ${bookingData.propertyId} after creating booking ${bookingId}:`, syncError);\n         }\n     } else {\n          console.log(`[createBooking] Skipping external sync for booking source: ${docData.source}`);\n     }\n\n     console.log(`--- [createBooking] Function returning successfully with booking ID: ${bookingId} ---`);\n     return bookingId;\n\n   } catch (error) {\n      if (!(error instanceof Error && error.message.startsWith('Invalid booking data:'))) {\n          console.error(`❌ [createBooking] Error during booking creation process:`, error);\n      }\n     const errorMessage = error instanceof Error\n         ? (error.message.startsWith('Invalid booking data:') ? error.message : `Failed to create booking (Ref: ${paymentIntentId}). Please contact support.`)\n         : `An unexpected error occurred while creating the booking (Ref: ${paymentIntentId}). Please contact support.`;\n\n     throw new Error(errorMessage);\n   }\n }\n\n/**\n * Retrieves a booking document by its ID using the Client SDK.\n */\nexport async function getBookingById(bookingId: string): Promise<Booking | null> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        const docSnap = await getDoc(bookingRef);\n\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n            // Convert Timestamps if needed for client consumption, or keep as Timestamps\n            const bookingResult = {\n                id: docSnap.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking;\n            return bookingResult;\n        } else {\n            console.warn(`[getBookingById] No booking found with ID: ${bookingId}`);\n            return null;\n        }\n    } catch (error) {\n        console.error(`❌ [getBookingById] Error fetching booking with ID ${bookingId}:`, error);\n        throw new Error(`Failed to fetch booking: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Updates the status of a specific booking document using the Client SDK.\n * Calls updatePropertyAvailability (Client SDK) if status is 'cancelled'.\n */\nexport async function updateBookingStatus(bookingId: string, status: Booking['status']): Promise<void> {\n    try {\n        const bookingRef = doc(db, 'bookings', bookingId); // Use Client SDK 'db'\n        await updateDoc(bookingRef, {\n            status: status,\n            updatedAt: clientServerTimestamp(), // Use Client serverTimestamp\n        });\n        console.log(`✅ [updateBookingStatus] Successfully updated booking ${bookingId} to status: ${status}`);\n\n        if (status === 'cancelled') {\n          const booking = await getBookingById(bookingId); // Re-fetch using Client SDK\n          if (booking && booking.checkInDate && booking.checkOutDate) {\n            // Convert Client Timestamps back to Dates\n             const checkInDate = booking.checkInDate instanceof Timestamp\n                ? booking.checkInDate.toDate()\n                : booking.checkInDate ? new Date(booking.checkInDate as any) : null;\n             const checkOutDate = booking.checkOutDate instanceof Timestamp\n                ? booking.checkOutDate.toDate()\n                : booking.checkOutDate ? new Date(booking.checkOutDate as any) : null;\n\n             if (checkInDate && checkOutDate) {\n                 try {\n                     // Make dates available again\n                     await updatePropertyAvailability(booking.propertyId, checkInDate, checkOutDate, true);\n                     console.log(`✅ [updateBookingStatus] Successfully updated local availability (Client SDK) for cancelled booking ${bookingId}.`);\n\n                      // Trigger external sync to release dates\n                     await triggerExternalSyncForDateUpdate(booking.propertyId, checkInDate, checkOutDate, true);\n\n                 } catch (availError) {\n                      console.error(`❌ [updateBookingStatus] Failed to update local availability or sync for cancelled booking ${bookingId}:`, availError);\n                 }\n             } else {\n                  console.warn(`[updateBookingStatus] Could not parse dates for booking ${bookingId} to update availability after cancellation.`);\n             }\n          } else {\n             console.warn(`[updateBookingStatus] Could not find booking ${bookingId} or its dates to update availability after cancellation.`);\n          }\n        }\n\n    } catch (error) {\n        console.error(`❌ [updateBookingStatus] Error updating status for booking ${bookingId} (Client SDK):`, error);\n        throw new Error(`Failed to update booking status: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific property ID using the Client SDK.\n */\nexport async function getBookingsForProperty(propertyId: string): Promise<Booking[]> {\n    const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        const q = query(bookingsCollection, where('propertyId', '==', propertyId));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n            const data = doc.data();\n            bookings.push({\n                id: doc.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n            } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForProperty] Error fetching bookings for property ${propertyId}:`, error);\n        throw new Error(`Failed to fetch bookings for property: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Retrieves all bookings associated with a specific user ID using the Client SDK.\n */\nexport async function getBookingsForUser(userId: string): Promise<Booking[]> {\n     const bookings: Booking[] = [];\n    try {\n        const bookingsCollection = collection(db, 'bookings'); // Use Client SDK 'db'\n        const q = query(bookingsCollection, where('guestInfo.userId', '==', userId));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach((doc) => {\n             const data = doc.data();\n             bookings.push({\n                 id: doc.id,\n                ...data,\n                checkInDate: data.checkInDate, // Client Timestamp\n                checkOutDate: data.checkOutDate, // Client Timestamp\n                createdAt: data.createdAt, // Client Timestamp\n                updatedAt: data.updatedAt, // Client Timestamp\n                 paymentInfo: {\n                    ...data.paymentInfo,\n                    paidAt: data.paymentInfo?.paidAt, // Client Timestamp or null\n                },\n             } as Booking);\n        });\n        return bookings;\n    } catch (error) {\n        console.error(`❌ [getBookingsForUser] Error fetching bookings for user ${userId}:`, error);\n        throw new Error(`Failed to fetch bookings for user: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n/**\n * Updates the availability status for a given property and date range in Firestore\n * using the **Firebase Client SDK**. Requires appropriate security rules.\n */\nexport async function updatePropertyAvailability(propertyId: string, checkInDate: Date, checkOutDate: Date, available: boolean): Promise<void> {\n  console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function called ---`);\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Args: propertyId=${propertyId}, checkIn=${format(checkInDate, 'yyyy-MM-dd')}, checkOut=${format(checkOutDate, 'yyyy-MM-dd')} (exclusive), available=${available}`);\n\n  if (!db) {\n    console.error(\"❌ [updatePropertyAvailability - CLIENT SDK] Firestore Client SDK (db) is not initialized.\");\n    throw new Error(\"Firestore Client SDK is not initialized.\");\n  }\n\n  if (checkOutDate <= checkInDate) {\n    console.warn(`[updatePropertyAvailability] Check-out date (${format(checkOutDate, 'yyyy-MM-dd')}) must be after check-in date (${format(checkInDate, 'yyyy-MM-dd')}). No update performed.`);\n    return;\n  }\n\n  // Ensure dates are at the start of the day UTC for consistency\n  const start = startOfDay(checkInDate);\n  const end = startOfDay(subDays(checkOutDate, 1)); // Make checkout date exclusive\n\n  const datesToUpdate = eachDayOfInterval({ start, end });\n\n  if (datesToUpdate.length === 0) {\n    console.log(\"[updatePropertyAvailability - CLIENT SDK] No dates need updating.\");\n    return;\n  }\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Dates to update (${datesToUpdate.length}): ${datesToUpdate.map(d => format(d, 'yyyy-MM-dd')).join(', ')}`);\n\n  const updatesByMonth: { [month: string]: { [day: number]: boolean } } = {};\n  datesToUpdate.forEach(date => {\n    const monthStr = format(date, 'yyyy-MM'); // Use UTC month\n    const dayOfMonth = date.getUTCDate(); // Use UTC day\n    if (!updatesByMonth[monthStr]) {\n      updatesByMonth[monthStr] = {};\n    }\n    updatesByMonth[monthStr][dayOfMonth] = available;\n  });\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Updates grouped by month:`, JSON.stringify(updatesByMonth));\n\n  const batch = clientWriteBatch(db);\n  const availabilityCollection = collection(db, 'availability');\n  console.log(`[updatePropertyAvailability - CLIENT SDK] Initialized Firestore Client batch.`);\n\n  try {\n    const monthStrings = Object.keys(updatesByMonth);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Processing months: ${monthStrings.join(', ')}`);\n\n    if (monthStrings.length === 0) return;\n\n    const docIdsToFetch = monthStrings.map(monthStr => `${propertyId}_${monthStr}`);\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetching existing availability docs for ${monthStrings.length} months...`);\n\n    const idBatches: string[][] = [];\n    for (let i = 0; i < docIdsToFetch.length; i += 30) {\n      idBatches.push(docIdsToFetch.slice(i, i + 30));\n    }\n\n    const fetchedDocsMap = new Map<string, Availability>();\n    await Promise.all(idBatches.map(async (batchIds) => {\n      if (batchIds.length === 0) return;\n      const q = query(availabilityCollection, where(documentId(), 'in', batchIds));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(docSnap => {\n        if (docSnap.exists()) {\n          fetchedDocsMap.set(docSnap.id, { id: docSnap.id, ...docSnap.data() } as Availability);\n        }\n      });\n    }));\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Fetched ${fetchedDocsMap.size} existing doc snapshots.`);\n\n    monthStrings.forEach(monthStr => {\n      const availabilityDocId = `${propertyId}_${monthStr}`;\n      console.log(`[updatePropertyAvailability Batch Prep] Processing month ${monthStr} (Doc ID: ${availabilityDocId}). Days: ${Object.keys(updatesByMonth[monthStr]).join(', ')}`);\n      const availabilityDocRef = doc(availabilityCollection, availabilityDocId);\n      const updatesForDay = updatesByMonth[monthStr];\n\n      const updatePayload: { [key: string]: any } = {};\n      for (const day in updatesForDay) {\n        updatePayload[`available.${String(day)}`] = updatesForDay[day];\n      }\n      updatePayload.updatedAt = clientServerTimestamp();\n      console.log(`[updatePropertyAvailability Batch Prep] Payload for ${availabilityDocId}:`, JSON.stringify({ ...updatePayload, updatedAt: 'ServerTimestamp' }));\n\n\n      const existingDoc = fetchedDocsMap.get(availabilityDocId);\n\n      if (existingDoc) {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} exists. Adding UPDATE.`);\n        batch.update(availabilityDocRef, updatePayload);\n      } else {\n        console.log(`[updatePropertyAvailability Batch Prep] Doc ${availabilityDocId} DOES NOT exist. Creating initial.`);\n        const [year, month] = monthStr.split('-').map(Number);\n        const daysInMonth = new Date(year, month, 0).getDate();\n        const initialAvailableMap: { [day: number]: boolean } = {};\n        for (let day = 1; day <= daysInMonth; day++) {\n          initialAvailableMap[day] = updatesForDay[day] !== undefined ? updatesForDay[day] : true;\n        }\n\n        const newDocData: Partial<Availability> = {\n          propertyId: propertyId,\n          month: monthStr,\n          available: initialAvailableMap,\n          updatedAt: clientServerTimestamp(),\n        };\n        console.log(`[updatePropertyAvailability Batch Prep] Adding SET (merge: true) for ${availabilityDocId}.`);\n        batch.set(availabilityDocRef, newDocData, { merge: true });\n      }\n    });\n\n    console.log(`[updatePropertyAvailability - CLIENT SDK] Committing client batch for property ${propertyId}...`);\n    await batch.commit();\n    console.log(`✅ [updatePropertyAvailability - CLIENT SDK] Batch committed for property ${propertyId}.`);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function finished successfully ---`);\n\n  } catch (error) {\n    console.error(`❌ Error during Client SDK batch update/creation for property availability ${propertyId}:`, error);\n    console.log(`--- [updatePropertyAvailability - CLIENT SDK] Function throwing error ---`);\n    // Rethrow with a more specific message if it's a permission error\n     if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        throw new Error(`Permission denied updating availability. Check Firestore rules.`);\n     }\n    throw new Error(`Failed to update local property availability using Client SDK: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\n/**\n * Helper function to trigger external sync after availability update.\n */\nasync function triggerExternalSyncForDateUpdate(propertyId: string, checkInDate: Date, checkOutDate: Date, isAvailable: boolean): Promise<void> {\n    console.log(`[Sync Trigger] Syncing availability change for property ${propertyId} (${isAvailable ? 'Release' : 'Block'})`);\n     try {\n       const propertyDetails = await getPropertyForSync(propertyId);\n       if (propertyDetails) {\n           if (propertyDetails.airbnbListingId) {\n               await updateAirbnbListingAvailability(propertyDetails.airbnbListingId, isAvailable, checkInDate, checkOutDate);\n           }\n           if (propertyDetails.bookingComListingId) {\n               await updateBookingComListingAvailability(propertyDetails.bookingComListingId, isAvailable, checkInDate, checkOutDate);\n           }\n       } else {\n           console.warn(`[Sync Trigger] Could not find property ${propertyId} for external sync.`);\n       }\n   } catch (syncError) {\n        console.error(`❌ [Sync Trigger] Error syncing externally for property ${propertyId}:`, syncError);\n   }\n}\n\n\n/**\n * Fetches all unavailable dates for a given property using the Client SDK.\n */\nexport async function getUnavailableDatesForProperty(propertyId: string, monthsToFetch: number = 12): Promise<Date[]> {\n  const unavailableDates: Date[] = [];\n  console.log(`--- [getUnavailableDatesForProperty] Function called ---`);\n  console.log(`[getUnavailableDatesForProperty] Fetching for property ${propertyId} for the next ${monthsToFetch} months.`);\n\n  if (!db) {\n      console.error(\"❌ [getUnavailableDatesForProperty] Firestore Client SDK (db) is not initialized.\");\n      return [];\n  }\n\n  const availabilityCollection = collection(db, 'availability');\n  const today = new Date();\n  const currentMonthStart = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), 1));\n\n\n  try {\n    const monthDocIds: string[] = [];\n    for (let i = 0; i < monthsToFetch; i++) {\n      const targetMonth = new Date(Date.UTC(currentMonthStart.getUTCFullYear(), currentMonthStart.getUTCMonth() + i, 1));\n      const monthStr = format(targetMonth, 'yyyy-MM');\n      monthDocIds.push(`${propertyId}_${monthStr}`);\n    }\n\n    const queryBatches: string[][] = [];\n    for (let i = 0; i < monthDocIds.length; i += 30) {\n        queryBatches.push(monthDocIds.slice(i, i + 30));\n    }\n\n     if (monthDocIds.length === 0) {\n        console.log(\"[getUnavailableDatesForProperty] No month document IDs to query.\");\n        return [];\n    }\n\n    const allQuerySnapshots = await Promise.all(\n      queryBatches.map(async (batchIds) => {\n          const q = query(availabilityCollection, where(documentId(), 'in', batchIds));\n          return getDocs(q);\n      })\n    );\n\n    allQuerySnapshots.forEach((querySnapshot) => {\n         querySnapshot.forEach((doc) => {\n            const data = doc.data() as Partial<Availability>;\n            const docId = doc.id;\n            const monthStr = data.month || docId.split('_')[1]; // Prefer data.month\n\n             if (!monthStr || !/^\\d{4}-\\d{2}$/.test(monthStr)) {\n                 console.warn(`[getUnavailableDates] Invalid month string for doc ${docId}. Skipping.`);\n                 return;\n             }\n\n            if (data.available && typeof data.available === 'object') {\n                const [year, monthIndex] = monthStr.split('-').map(num => parseInt(num, 10));\n                const month = monthIndex - 1; // JS months 0-indexed\n\n                for (const dayStr in data.available) {\n                    const day = parseInt(dayStr, 10);\n                    if (!isNaN(day) && data.available[day] === false) {\n                        try {\n                            // Construct date as UTC date\n                            const date = new Date(Date.UTC(year, month, day));\n                             // Double check date validity after creation\n                             if (date.getUTCFullYear() === year && date.getUTCMonth() === month && date.getUTCDate() === day) {\n                                const todayUtcStart = startOfDay(new Date()); // Compare against local start of today\n                                if (date >= todayUtcStart) {\n                                    unavailableDates.push(date);\n                                }\n                             } else {\n                                 console.warn(`[getUnavailableDates] Invalid date created for ${monthStr}-${dayStr}. Skipping.`);\n                             }\n                        } catch (dateError) {\n                             console.warn(`[getUnavailableDates] Error creating date ${monthStr}-${dayStr}:`, dateError);\n                        }\n                    }\n                }\n            }\n        });\n    });\n\n    unavailableDates.sort((a, b) => a.getTime() - b.getTime());\n    console.log(`[getUnavailableDates] Found ${unavailableDates.length} unavailable dates for ${propertyId}.`);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished successfully ---`);\n    return unavailableDates;\n\n  } catch (error) {\n    console.error(`❌ Error fetching unavailable dates for property ${propertyId}:`, error);\n    console.log(`--- [getUnavailableDatesForProperty] Function finished with error ---`);\n    return [];\n  }\n}\n"],"names":[],"mappings":"AACA,iCAAiC;;;;;;;;;;;;;IAuGX;IAwFA;IAsIA;IAmCA;IAiDA;IAgCA;IAiCA;IAqJA","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/couponService.ts"],"sourcesContent":["\n// src/services/couponService.ts\n'use server';\n\nimport { collection, doc, getDoc, Timestamp, where, query, getDocs, limit } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Client SDK Firestore instance\nimport type { Coupon, SerializableTimestamp } from '@/types';\nimport { parseISO, isWithinInterval, areIntervalsOverlapping } from 'date-fns'; // Changed 'overlaps' to 'areIntervalsOverlapping'\n\n// Helper function to convert SerializableTimestamp to Date or null\nconst toDate = (timestamp: SerializableTimestamp | undefined | null): Date | null => {\n  if (!timestamp) return null;\n  if (timestamp instanceof Date) return timestamp;\n  if (timestamp instanceof Timestamp) return timestamp.toDate();\n  if (typeof timestamp === 'string') {\n    try {\n      return parseISO(timestamp);\n    } catch {\n      return null;\n    }\n  }\n  if (typeof timestamp === 'number') {\n    // Assuming number is milliseconds since epoch\n    return new Date(timestamp);\n  }\n  return null;\n};\n\n/**\n * Validates a coupon code against the Firestore 'coupons' collection.\n * Checks existence, activity status, expiry, booking validity timeframe, and exclusion periods.\n *\n * @param couponCode - The coupon code string entered by the user.\n * @param bookingCheckInDate - The check-in date of the booking.\n * @param bookingCheckOutDate - The check-out date of the booking.\n * @returns A promise resolving to an object with discount percentage or an error message.\n */\nexport async function validateAndApplyCoupon(\n  couponCode: string,\n  bookingCheckInDate: Date | null,\n  bookingCheckOutDate: Date | null\n): Promise<{ discountPercentage?: number; error?: string }> {\n  if (!couponCode) {\n    return { error: 'Coupon code cannot be empty.' };\n  }\n  if (!bookingCheckInDate || !bookingCheckOutDate || bookingCheckOutDate <= bookingCheckInDate) {\n      return { error: 'Valid booking dates are required to apply a coupon.' };\n  }\n\n  const couponCodeUpper = couponCode.toUpperCase(); // Normalize code\n\n  try {\n    const couponsCollection = collection(db, 'coupons');\n    const q = query(couponsCollection, where('code', '==', couponCodeUpper), limit(1));\n    const querySnapshot = await getDocs(q);\n\n    if (querySnapshot.empty) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" not found.`);\n      return { error: 'Invalid coupon code.' };\n    }\n\n    const couponDoc = querySnapshot.docs[0];\n    // Cast data to include new fields, ensuring they can be null/undefined\n    const couponData = couponDoc.data() as Omit<Coupon, 'id' | 'createdAt' | 'updatedAt' | 'validUntil' | 'bookingValidFrom' | 'bookingValidUntil' | 'exclusionPeriods'> & {\n        createdAt: any;\n        updatedAt?: any;\n        validUntil: any;\n        bookingValidFrom?: any | null;\n        bookingValidUntil?: any | null;\n        exclusionPeriods?: Array<{ start: any; end: any }> | null;\n    };\n\n\n    // --- Basic Validations ---\n    if (!couponData.isActive) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" is not active.`);\n      return { error: 'Coupon code is no longer active.' };\n    }\n\n    const couponExpiryDate = toDate(couponData.validUntil);\n    const now = new Date(); // Compare with current date, not just timestamp\n    // Make comparison based on the start of the day for coupon expiry\n    const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    if (couponExpiryDate && couponExpiryDate < todayStart) {\n      console.warn(`[Coupon Service] Coupon code \"${couponCodeUpper}\" has expired on ${couponExpiryDate.toISOString().split('T')[0]}.`);\n      return { error: 'Coupon code has expired.' };\n    }\n\n\n    if (typeof couponData.discount !== 'number' || couponData.discount <= 0 || couponData.discount > 100) {\n      console.error(`[Coupon Service] Invalid discount percentage (${couponData.discount}) for coupon \"${couponCodeUpper}\".`);\n      return { error: 'Invalid coupon configuration.' };\n    }\n\n    // --- Booking Timeframe Validations ---\n    const bookingValidFrom = toDate(couponData.bookingValidFrom);\n    const bookingValidUntil = toDate(couponData.bookingValidUntil);\n\n    // Check if booking starts before the valid period\n    if (bookingValidFrom && bookingCheckInDate < bookingValidFrom) {\n        console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is before coupon booking validity start (${bookingValidFrom.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n        return { error: 'Coupon not valid for selected check-in date.' };\n    }\n\n    // Check if booking ends after the valid period\n    // For bookingValidUntil, we should check if the *check-in* date is after the validity end date\n    // OR if the check-out date is strictly after the validity end date.\n    if (bookingValidUntil) {\n         // Set validity end to the end of the day for comparison\n         const validityEndDate = new Date(bookingValidUntil.getFullYear(), bookingValidUntil.getMonth(), bookingValidUntil.getDate(), 23, 59, 59, 999);\n         if (bookingCheckInDate > validityEndDate) {\n             console.warn(`[Coupon Service] Booking check-in (${bookingCheckInDate.toISOString().split('T')[0]}) is after coupon booking validity end (${bookingValidUntil.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n             return { error: 'Coupon not valid for selected check-in date.' };\n         }\n         // Note: Check-out date is typically exclusive. A booking ending on the validity date should be allowed.\n         // However, if the policy is strict, you might compare bookingCheckOutDate > validityEndDate + 1 day or similar.\n         // Sticking to check-in date for simplicity based on typical coupon logic.\n    }\n\n\n    // --- Exclusion Period Validations ---\n    if (couponData.exclusionPeriods && Array.isArray(couponData.exclusionPeriods)) {\n        // The booking interval includes the check-in day but excludes the check-out day for night calculations.\n        // For overlap checking, we should consider the full range of occupied days.\n        const bookingInterval = { start: bookingCheckInDate, end: new Date(bookingCheckOutDate.getTime() - 1) }; // Adjust end date to be inclusive\n\n        for (const period of couponData.exclusionPeriods) {\n            const exclusionStart = toDate(period.start);\n            const exclusionEnd = toDate(period.end);\n\n            if (exclusionStart && exclusionEnd) {\n                // Ensure exclusion end is inclusive for overlap check\n                const exclusionInterval = { start: exclusionStart, end: new Date(exclusionEnd.getFullYear(), exclusionEnd.getMonth(), exclusionEnd.getDate(), 23, 59, 59, 999)};\n                // Check if the booking interval overlaps with any exclusion interval\n                if (areIntervalsOverlapping(bookingInterval, exclusionInterval, { inclusive: true })) { // Use areIntervalsOverlapping\n                     console.warn(`[Coupon Service] Booking dates (${bookingCheckInDate.toISOString().split('T')[0]} - ${bookingCheckOutDate.toISOString().split('T')[0]}) overlap with exclusion period (${exclusionStart.toISOString().split('T')[0]} - ${exclusionEnd.toISOString().split('T')[0]}) for \"${couponCodeUpper}\".`);\n                     return { error: 'Coupon not valid for the selected dates due to an exclusion period.' };\n                }\n            } else {\n                 console.warn(`[Coupon Service] Invalid exclusion period found for coupon \"${couponCodeUpper}\":`, period);\n            }\n        }\n    }\n\n\n    // TODO: Add validation for usage limits if implemented (maxUses, currentUses)\n\n    console.log(`[Coupon Service] Coupon code \"${couponCodeUpper}\" validated successfully for the booking dates. Discount: ${couponData.discount}%`);\n    return { discountPercentage: couponData.discount };\n\n  } catch (error) {\n    console.error(`❌ [Coupon Service] Error validating coupon code \"${couponCodeUpper}\":`, error);\n    return { error: 'Could not validate coupon code. Please try again.' }; // Generic error for the user\n  }\n}\n"],"names":[],"mappings":"AACA,gCAAgC;;;;;;IAoCV","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/booking-actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from 'zod';\nimport { collection, addDoc, serverTimestamp, Timestamp } from 'firebase/firestore';\nimport { db } from '@/lib/firebase'; // Client SDK\nimport type { Booking, Property } from '@/types';\nimport { revalidatePath } from 'next/cache'; // May not be needed immediately for pending\n\n// Schema for creating a PENDING booking\nconst CreatePendingBookingSchema = z.object({\n  propertyId: z.string().min(1),\n  guestInfo: z.object({\n    firstName: z.string().min(1),\n    lastName: z.string().min(1),\n    email: z.string().email(),\n    phone: z.string().min(1), // Assuming phone is now required\n  }).passthrough(), // Allow extra fields if needed\n  checkInDate: z.string().datetime(), // ISO string\n  checkOutDate: z.string().datetime(), // ISO string\n  numberOfGuests: z.number().int().positive(),\n  pricing: z.object({ // Keep pricing details consistent\n    baseRate: z.number().nonnegative(),\n    numberOfNights: z.number().int().positive(),\n    cleaningFee: z.number().nonnegative(),\n    extraGuestFee: z.number().nonnegative().optional(),\n    numberOfExtraGuests: z.number().int().nonnegative().optional(),\n    accommodationTotal: z.number().nonnegative(),\n    subtotal: z.number().nonnegative(),\n    taxes: z.number().nonnegative().optional(),\n    discountAmount: z.number().nonnegative().optional(),\n    total: z.number().nonnegative(),\n  }).passthrough(),\n  status: z.literal('pending'), // Explicitly set status\n  appliedCouponCode: z.string().nullable().optional(), // Allow string or null\n});\n\ntype CreatePendingBookingInput = z.infer<typeof CreatePendingBookingSchema>;\n\n/**\n * Creates a 'pending' booking document in Firestore.\n * This is called before redirecting to Stripe.\n * The webhook will later update this booking to 'confirmed'.\n */\nexport async function createPendingBookingAction(\n  input: CreatePendingBookingInput\n): Promise<{ bookingId?: string; error?: string }> {\n  console.log(\"[Action createPendingBookingAction] Called with input:\", input);\n  const validationResult = CreatePendingBookingSchema.safeParse(input);\n\n  if (!validationResult.success) {\n    const errorMessages = validationResult.error.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ');\n    console.error(\"[Action createPendingBookingAction] Validation Error:\", errorMessages);\n    return { error: `Invalid pending booking data: ${errorMessages}` };\n  }\n\n  const {\n    propertyId,\n    guestInfo,\n    checkInDate: checkInStr,\n    checkOutDate: checkOutStr,\n    numberOfGuests,\n    pricing,\n    status,\n    appliedCouponCode,\n  } = validationResult.data;\n\n  try {\n    const bookingsCollection = collection(db, 'bookings');\n\n    const checkIn = new Date(checkInStr);\n    const checkOut = new Date(checkOutStr);\n\n    // Prepare data for Firestore\n    const bookingData: Omit<Booking, 'id' | 'paymentInfo'> = { // Exclude paymentInfo for pending\n      propertyId,\n      guestInfo,\n      checkInDate: Timestamp.fromDate(checkIn),\n      checkOutDate: Timestamp.fromDate(checkOut),\n      numberOfGuests,\n      pricing,\n      status: 'pending', // Ensure status is pending\n      // Ensure appliedCouponCode is stored as null if not provided, not undefined\n      appliedCouponCode: appliedCouponCode ?? null,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n      // Payment info will be added/updated by the webhook\n      paymentInfo: { // Add placeholder or minimal payment info\n          stripePaymentIntentId: '', // Will be updated by webhook\n          amount: pricing.total,\n          status: 'pending',\n          paidAt: null,\n      },\n      source: 'website-pending', // Indicate source\n    };\n\n     console.log(\"[Action createPendingBookingAction] Prepared Firestore Data:\", bookingData);\n\n    // Add the document\n    const docRef = await addDoc(bookingsCollection, bookingData);\n    console.log(`[Action createPendingBookingAction] Pending booking created successfully with ID: ${docRef.id}`);\n\n    // No revalidation needed yet, booking isn't confirmed\n\n    return { bookingId: docRef.id };\n\n  } catch (error) {\n    console.error(`❌ [Action createPendingBookingAction] Error creating pending booking:`, error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n     if (errorMessage.includes('PERMISSION_DENIED')) {\n      return { error: 'Permission denied. Could not create pending booking.' };\n    }\n     // Check for specific Firestore invalid data error\n     if (errorMessage.includes('invalid data') || errorMessage.includes('Unsupported field value')) {\n         console.error(\"[Action createPendingBookingAction] Firestore data error details:\", errorMessage);\n         // Provide cleaner error message\n         return { error: `Failed to create pending booking due to invalid data. Please check input values. Details: ${errorMessage.split(' (')[0]}` };\n     }\n    return { error: `Failed to create pending booking: ${errorMessage}` };\n  }\n}\n\n// TODO: Add action `createAvailabilityAlertAction` later\n// export async function createAvailabilityAlertAction(input: { propertyId: string, checkInDate: string, checkOutDate: string, contactMethod: 'email' | 'sms', contactInfo: string }) { ... }\n\n"],"names":[],"mappings":";;;;;IA2CsB;CA8EtB,yDAAyD;CACzD,6LAA6L","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/availability-calendar.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport { Calendar } from \"@/components/ui/calendar\";\nimport type { DateRange } from 'react-day-picker';\nimport { cn } from '@/lib/utils';\nimport { format, startOfDay, subMonths } from 'date-fns'; // Import subMonths\n\ninterface AvailabilityCalendarProps {\n  currentMonth: Date; // The month to center around (usually based on check-in date)\n  unavailableDates: Date[];\n  selectedRange?: DateRange;\n  // numberOfMonths removed, always 3 now\n  onDateClick?: (date: Date) => void; // Optional callback for clicking a date\n}\n\nexport function AvailabilityCalendar({\n  currentMonth,\n  unavailableDates,\n  selectedRange,\n  onDateClick,\n}: AvailabilityCalendarProps) {\n\n  const disabledDays = [\n    { before: startOfDay(new Date()) }, // Disable dates before today\n    ...unavailableDates.map(date => startOfDay(date)), // Disable specific unavailable dates\n  ];\n\n  // Modifiers to style specific date types\n  const modifiers = {\n    unavailable: unavailableDates.map(date => startOfDay(date)),\n    selected: selectedRange ? { from: selectedRange.from ? startOfDay(selectedRange.from) : undefined, to: selectedRange.to ? startOfDay(selectedRange.to): undefined } : undefined,\n  };\n\n  // Modifier styles\n  const modifierStyles = {\n    unavailable: {\n        textDecoration: 'line-through',\n        color: 'hsl(var(--muted-foreground))',\n        opacity: 0.6,\n        pointerEvents: 'none' as const, // Make unavailable dates unclickable\n    },\n    selected: {\n        backgroundColor: 'hsl(var(--primary) / 0.2)', // Light primary background\n        fontWeight: 'bold',\n        color: 'hsl(var(--primary))',\n    },\n     // Style for today\n    today: {\n        fontWeight: 'bold',\n        color: 'hsl(var(--accent))', // Use accent color for today\n        border: '1px solid hsl(var(--accent))',\n    }\n  };\n\n  // Calculate the month to start the display from (one month before the target month)\n  const displayStartMonth = subMonths(currentMonth, 1);\n\n  return (\n    <div className=\"flex justify-center\">\n       <Calendar\n        mode=\"range\" // Keep range mode for consistency\n        month={displayStartMonth} // Start display from the previous month\n        numberOfMonths={3} // Always display 3 months\n        disabled={disabledDays}\n        modifiers={modifiers}\n        modifierStyles={modifierStyles}\n        selected={selectedRange} // Visually highlight the selected range\n        onDayClick={onDateClick} // Handle date clicks if needed\n        showOutsideDays // Good practice for calendar context\n        className=\"border rounded-md p-3 bg-card\" // Add some basic styling\n         classNames={{\n            day: cn(\n              \"h-9 w-9 p-0 font-normal relative\", // Ensure relative positioning for potential overlays\n               // Add hover effect for available dates if needed\n               \"[&:not([aria-disabled=true])]:hover:bg-accent/10\"\n            ),\n            // Customize other parts if necessary\n          }}\n       />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AACA,yPAA0D,mBAAmB;AAA7E;AANA;;;;;AAgBO,SAAS,qBAAqB,EACnC,YAAY,EACZ,gBAAgB,EAChB,aAAa,EACb,WAAW,EACe;IAE1B,MAAM,eAAe;QACnB;YAAE,QAAQ,CAAA,GAAA,6IAAA,CAAA,aAAU,AAAD,EAAE,IAAI;QAAQ;WAC9B,iBAAiB,GAAG,CAAC,CAAA,OAAQ,CAAA,GAAA,6IAAA,CAAA,aAAU,AAAD,EAAE;KAC5C;IAED,yCAAyC;IACzC,MAAM,YAAY;QAChB,aAAa,iBAAiB,GAAG,CAAC,CAAA,OAAQ,CAAA,GAAA,6IAAA,CAAA,aAAU,AAAD,EAAE;QACrD,UAAU,gBAAgB;YAAE,MAAM,cAAc,IAAI,GAAG,CAAA,GAAA,6IAAA,CAAA,aAAU,AAAD,EAAE,cAAc,IAAI,IAAI;YAAW,IAAI,cAAc,EAAE,GAAG,CAAA,GAAA,6IAAA,CAAA,aAAU,AAAD,EAAE,cAAc,EAAE,IAAG;QAAU,IAAI;IACxK;IAEA,kBAAkB;IAClB,MAAM,iBAAiB;QACrB,aAAa;YACT,gBAAgB;YAChB,OAAO;YACP,SAAS;YACT,eAAe;QACnB;QACA,UAAU;YACN,iBAAiB;YACjB,YAAY;YACZ,OAAO;QACX;QACC,kBAAkB;QACnB,OAAO;YACH,YAAY;YACZ,OAAO;YACP,QAAQ;QACZ;IACF;IAEA,oFAAoF;IACpF,MAAM,oBAAoB,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,cAAc;IAElD,qBACE,6LAAC;QAAI,WAAU;kBACZ,cAAA,6LAAC,uIAAA,CAAA,WAAQ;YACR,MAAK,QAAQ,kCAAkC;;YAC/C,OAAO;YACP,gBAAgB;YAChB,UAAU;YACV,WAAW;YACX,gBAAgB;YAChB,UAAU;YACV,YAAY;YACZ,eAAe;YACf,WAAU,gCAAgC,yBAAyB;;YAClE,YAAY;gBACT,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,oCACC,iDAAiD;gBACjD;YAGL;;;;;;;;;;;AAIV;KAlEgB","debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/price-utils.ts"],"sourcesContent":["\n// src/lib/price-utils.ts\n\ninterface PriceDetails {\n  basePrice: number; // (pricePerNight * numberOfNights)\n  extraGuestFee: number; // Total extra guest fee for the stay\n  cleaningFee: number;\n  subtotal: number; // (basePrice + extraGuestFee + cleaningFee)\n  discountAmount: number;\n  total: number; // (subtotal - discountAmount)\n}\n\n/**\n * Calculates the booking price details.\n *\n * @param pricePerNight - The base price per night for the property.\n * @param numberOfNights - The total number of nights for the booking.\n * @param cleaningFee - The fixed cleaning fee for the booking.\n * @param numberOfGuests - The total number of guests.\n * @param baseOccupancy - The number of guests included in the base price.\n * @param extraGuestFeePerNight - The fee per extra guest, per night.\n * @param discountPercentage - Optional discount percentage to apply (0-100).\n * @returns An object containing the detailed price breakdown.\n */\nexport function calculatePrice(\n  pricePerNight: number,\n  numberOfNights: number,\n  cleaningFee: number,\n  numberOfGuests: number,\n  baseOccupancy: number,\n  extraGuestFeePerNight: number,\n  discountPercentage: number = 0\n): PriceDetails {\n  if (numberOfNights <= 0) {\n    // Return zero values if nights are invalid\n    return { basePrice: 0, extraGuestFee: 0, cleaningFee: 0, subtotal: 0, discountAmount: 0, total: 0 };\n  }\n\n  const basePrice = pricePerNight * numberOfNights;\n\n  const extraGuests = Math.max(0, numberOfGuests - baseOccupancy);\n  const totalExtraGuestFee = extraGuests * extraGuestFeePerNight * numberOfNights;\n\n  const subtotal = basePrice + totalExtraGuestFee + cleaningFee;\n\n  const discountAmount = subtotal * (discountPercentage / 100);\n\n  const total = subtotal - discountAmount;\n\n  return {\n    basePrice: basePrice,\n    extraGuestFee: totalExtraGuestFee,\n    cleaningFee: cleaningFee,\n    subtotal: subtotal,\n    discountAmount: discountAmount,\n    total: total,\n  };\n}\n"],"names":[],"mappings":"AACA,yBAAyB;;;;AAuBlB,SAAS,eACd,aAAqB,EACrB,cAAsB,EACtB,WAAmB,EACnB,cAAsB,EACtB,aAAqB,EACrB,qBAA6B,EAC7B,qBAA6B,CAAC;IAE9B,IAAI,kBAAkB,GAAG;QACvB,2CAA2C;QAC3C,OAAO;YAAE,WAAW;YAAG,eAAe;YAAG,aAAa;YAAG,UAAU;YAAG,gBAAgB;YAAG,OAAO;QAAE;IACpG;IAEA,MAAM,YAAY,gBAAgB;IAElC,MAAM,cAAc,KAAK,GAAG,CAAC,GAAG,iBAAiB;IACjD,MAAM,qBAAqB,cAAc,wBAAwB;IAEjE,MAAM,WAAW,YAAY,qBAAqB;IAElD,MAAM,iBAAiB,WAAW,CAAC,qBAAqB,GAAG;IAE3D,MAAM,QAAQ,WAAW;IAEzB,OAAO;QACL,WAAW;QACX,eAAe;QACf,aAAa;QACb,UAAU;QACV,gBAAgB;QAChB,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 929, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-session-storage.ts"],"sourcesContent":["\n\"use client\"; // This hook needs access to window.sessionStorage\n\nimport { useState, useEffect, useCallback } from 'react';\n\n// Helper function to safely parse JSON or return primitive if possible\nfunction safeJsonParse<T>(value: string | null): T | string | boolean | number | null { // Return type allows primitives or original string\n  if (value === null || value === undefined) return null;\n  try {\n    // Try parsing as JSON first\n    return JSON.parse(value);\n  } catch (e) {\n    // If JSON parsing fails, check if it might be a primitive stored as a string\n    const trimmedValue = value.trim();\n    if (trimmedValue.toLowerCase() === 'true') return true;\n    if (trimmedValue.toLowerCase() === 'false') return false;\n    if (trimmedValue === 'null') return null;\n    if (trimmedValue === 'undefined') return undefined; // Handle stored 'undefined' string\n\n    // Check if it's a number string (handle potential leading/trailing spaces)\n    // Ensure it's not an empty string before converting to number\n    if (trimmedValue !== '' && !isNaN(Number(trimmedValue))) {\n        // It looks like a number, return it as a number\n        return Number(trimmedValue);\n    }\n\n    // If it's neither valid JSON nor a recognizable primitive string,\n    // return the original string for the caller to potentially handle.\n    // console.warn(`Session storage value for key wasn't JSON, returning raw string: \"${value}\"`);\n    return value;\n  }\n}\n\n// Helper function to potentially parse stored date strings or return other parsed types/strings\nfunction parseStoredValue<T>(storedValue: string | null): T | string | boolean | number | null | undefined { // Return type updated\n    const parsed = safeJsonParse<T>(storedValue); // This now returns T | string | boolean | number | null | undefined\n\n    // If parsed is a string, try parsing as ISO date\n    if (typeof parsed === 'string') {\n        // Basic ISO date check (YYYY-MM-DDTHH:mm:ss.sssZ or YYYY-MM-DD)\n        const isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|([+-]\\d{2}:\\d{2}))?)?$/;\n        if (isoDateRegex.test(parsed)) {\n            const date = new Date(parsed);\n            // Check if the date is valid (Date object handles invalid dates gracefully sometimes)\n            // A more robust check might be needed depending on expected date formats\n            if (!isNaN(date.getTime())) {\n                // Ensure the parsed date string wasn't just YYYY-MM-DD which Date might interpret wrongly depending on timezone\n                // If the original string contains 'T', it's likely a full ISO string\n                if (parsed.includes('T') || parsed.length === 10) { // Accept YYYY-MM-DD too\n                     return date as T; // Return Date object if valid\n                }\n            }\n        }\n    }\n    // Return the parsed value (could be T, string, boolean, number, undefined) or null\n    return parsed;\n}\n\n\n// Hook definition\nexport function useSessionStorage<T>(key: string, initialValue: T): [T, (value: T | ((val: T) => T)) => void] {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n    try {\n      const item = window.sessionStorage.getItem(key);\n      const parsedItem = item ? parseStoredValue<T>(item) : null;\n\n      if (parsedItem !== null && parsedItem !== undefined) {\n          // Now we check the type of parsedItem against initialValue more carefully\n          if (typeof parsedItem === typeof initialValue ||\n              (parsedItem instanceof Date && initialValue instanceof Date) ||\n              (initialValue === null && parsedItem === null) || // Allow null match\n              (initialValue === undefined && parsedItem === undefined) // Allow undefined match\n             ) {\n             return parsedItem as T;\n          } else {\n              // Attempt type coercion if reasonable (e.g., string '1' to number 1)\n               if (typeof initialValue === 'number' && typeof parsedItem === 'number') {\n                  return parsedItem as T;\n              }\n              if (typeof initialValue === 'boolean' && typeof parsedItem === 'boolean') {\n                  return parsedItem as T;\n              }\n               if (typeof initialValue === 'string' && typeof parsedItem === 'string') {\n                  return parsedItem as T;\n              }\n              // If coercion isn't straightforward or types mismatch significantly, warn and fallback\n             console.warn(`Session storage type mismatch for key \"${key}\". Expected ${typeof initialValue}, found ${typeof parsedItem}. Using initial value.`);\n             return initialValue;\n          }\n\n      }\n      return initialValue; // Fallback if item is null or undefined after parsing\n    } catch (error) {\n      console.error(`Error reading sessionStorage key “${key}”:`, error);\n      return initialValue;\n    }\n  });\n\n  const setValue = useCallback((value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      if (typeof window !== 'undefined') {\n         // Convert value to string for storage\n          let stringifiedValue;\n          if (valueToStore === null) {\n              stringifiedValue = 'null';\n          } else if (valueToStore === undefined) {\n              stringifiedValue = 'undefined';\n          } else if (valueToStore instanceof Date) {\n              stringifiedValue = valueToStore.toISOString(); // Store dates as ISO strings\n          } else if (typeof valueToStore === 'object') { // Handle arrays and objects\n              stringifiedValue = JSON.stringify(valueToStore); // Stringify objects/arrays\n          } else {\n              stringifiedValue = String(valueToStore); // Convert other primitives to string\n          }\n          window.sessionStorage.setItem(key, stringifiedValue);\n      }\n    } catch (error) {\n      console.error(`Error setting sessionStorage key “${key}”:`, error);\n    }\n  }, [key, storedValue]);\n\n  // Optional: Listen for storage changes (consider impact on complex state)\n  useEffect(() => {\n    const handleStorageChange = (event: StorageEvent) => {\n      if (event.storageArea === window.sessionStorage && event.key === key) {\n        try {\n          const newValue = event.newValue ? parseStoredValue<T>(event.newValue) : null;\n          // Similar type check as initial load\n           if (newValue !== null && newValue !== undefined) {\n               if (typeof newValue === typeof initialValue ||\n                   (newValue instanceof Date && initialValue instanceof Date) ||\n                   (initialValue === null && newValue === null) ||\n                   (initialValue === undefined && newValue === undefined)) {\n                 setStoredValue(newValue as T);\n               } else {\n                   // Handle potential type mismatch on update, maybe fallback or log\n                    console.warn(`Session storage update type mismatch for key \"${key}\". Ignoring update.`);\n                    // Or fallback: setStoredValue(initialValue);\n               }\n            } else {\n                 // Handle case where value is removed or becomes null/undefined\n                 if (initialValue === null || initialValue === undefined) {\n                    setStoredValue(initialValue);\n                 } else {\n                     // If initial value wasn't null/undefined, but storage becomes so,\n                     // decide if you should revert to initial or accept null/undefined\n                     setStoredValue(newValue as T); // Accept null/undefined if parsed as such\n                 }\n\n            }\n        } catch (error) {\n          console.error(`Error handling storage change for key “${key}”:`, error);\n        }\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [key, initialValue]); // Added initialValue to dependency array\n\n  return [storedValue, setValue];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/availability-check.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\nimport { format, differenceInDays, addDays, parseISO, isValid, isBefore, startOfDay, isAfter, startOfMonth, subMonths } from 'date-fns';\nimport {\n  Loader2,\n  Calendar as CalendarIcon,\n  Users,\n  CheckCircle,\n  XCircle,\n  Info,\n  Mail,\n  Phone,\n  TicketPercent,\n  X,\n  AlertTriangle,\n  ArrowRight,\n  MapPin,\n  BedDouble,\n  Bath,\n  Home,\n  Building,\n  Wind,\n  Minus,\n  Plus,\n} from 'lucide-react';\n\nimport type { Property, Coupon, Availability } from '@/types';\nimport { getUnavailableDatesForProperty } from '@/services/bookingService';\nimport { validateAndApplyCoupon } from '@/services/couponService';\nimport { createPendingBookingAction } from '@/app/actions/booking-actions';\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { useToast } from '@/hooks/use-toast';\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { AvailabilityCalendar } from './availability-calendar';\nimport { calculatePrice } from '@/lib/price-utils';\nimport { useSessionStorage } from '@/hooks/use-session-storage';\nimport { Badge } from '@/components/ui/badge';\n\n\ninterface AvailabilityCheckProps {\n  property: Property;\n  initialCheckIn?: string; // YYYY-MM-DD\n  initialCheckOut?: string; // YYYY-MM-DD\n}\n\n// Function to parse date strings safely\nconst parseDateSafe = (dateStr: string | undefined | null): Date | null => {\n  if (!dateStr) return null;\n  try {\n    const parsed = parseISO(dateStr);\n    return isValid(parsed) ? startOfDay(parsed) : null; // Use startOfDay for consistency\n  } catch {\n    return null;\n  }\n};\n\nexport function AvailabilityCheck({\n  property,\n  initialCheckIn,\n  initialCheckOut,\n}: AvailabilityCheckProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n\n  // --- State Management ---\n  const [checkInDate, setCheckInDate] = useState<Date | null>(parseDateSafe(initialCheckIn));\n  const [checkOutDate, setCheckOutDate] = useState<Date | null>(parseDateSafe(initialCheckOut));\n  const [numberOfGuests, setNumberOfGuests] = useSessionStorage<number>(`booking_${property.id}_guests`, property.baseOccupancy || 1); // Default to base occupancy or 1\n\n  const [isAvailable, setIsAvailable] = useState<boolean | null>(null);\n  const [isLoadingAvailability, setIsLoadingAvailability] = useState(true);\n  const [unavailableDates, setUnavailableDates] = useState<Date[]>([]);\n  const [suggestedDates, setSuggestedDates] = useState<Array<{ from: Date; to: Date; recommendation?: string }>>([]);\n\n  const [firstName, setFirstName] = useSessionStorage<string>(`booking_${property.id}_firstName`, '');\n  const [lastName, setLastName] = useSessionStorage<string>(`booking_${property.id}_lastName`, '');\n  const [email, setEmail] = useSessionStorage<string>(`booking_${property.id}_email`, '');\n  const [phone, setPhone] = useSessionStorage<string>(`booking_${property.id}_phone`, '');\n\n  const [couponCode, setCouponCode] = useState('');\n  const [appliedCoupon, setAppliedCoupon] = useState<{ code: string; discountPercentage: number } | null>(null);\n  const [couponError, setCouponError] = useState<string | null>(null);\n  const [isApplyingCoupon, setIsApplyingCoupon] = useState(false);\n\n  const [notifyAvailability, setNotifyAvailability] = useState(false);\n  const [notificationMethod, setNotificationMethod] = useState<'email' | 'sms'>('email');\n\n  const [isProcessingBooking, setIsProcessingBooking] = useState(false);\n  const [formError, setFormError] = useState<string | null>(null);\n\n  // --- Derived State ---\n  const datesSelected = checkInDate && checkOutDate && isValid(checkInDate) && isValid(checkOutDate) && isAfter(checkOutDate, checkInDate);\n  const numberOfNights = useMemo(() => {\n    if (datesSelected && checkInDate && checkOutDate) { // Added null checks\n      return differenceInDays(checkOutDate, checkInDate);\n    }\n    return 0;\n  }, [checkInDate, checkOutDate, datesSelected]);\n\n  const pricingDetails = useMemo(() => {\n    if (datesSelected && numberOfGuests > 0) {\n      return calculatePrice(\n        property.pricePerNight,\n        numberOfNights,\n        property.cleaningFee,\n        numberOfGuests,\n        property.baseOccupancy,\n        property.extraGuestFee,\n        appliedCoupon?.discountPercentage\n      );\n    }\n    return null;\n  }, [datesSelected, property, numberOfNights, numberOfGuests, appliedCoupon]);\n\n  // --- Availability Check Logic ---\n  const checkPropertyAvailability = useCallback(async () => {\n    if (!datesSelected || !checkInDate || !checkOutDate) { // Added null checks for dates\n      setIsAvailable(null);\n      setIsLoadingAvailability(false);\n      setSuggestedDates([]);\n      return;\n    }\n\n    setIsLoadingAvailability(true);\n    setIsAvailable(null);\n    setSuggestedDates([]);\n\n    try {\n      // console.log(`[AvailabilityCheck] Fetching unavailable dates for property ${property.id}`);\n      const fetchedUnavailableDates = await getUnavailableDatesForProperty(property.id);\n      // console.log(`[AvailabilityCheck] Fetched ${fetchedUnavailableDates.length} unavailable dates`);\n      setUnavailableDates(fetchedUnavailableDates);\n\n      let conflict = false;\n      let current = new Date(checkInDate.getTime()); // Use guaranteed checkInDate\n      while (isBefore(current, checkOutDate)) { // Use guaranteed checkOutDate\n        const dateString = format(startOfDay(current), 'yyyy-MM-dd');\n        if (fetchedUnavailableDates.some(d => format(startOfDay(d), 'yyyy-MM-dd') === dateString)) {\n          // console.log(`[AvailabilityCheck] Conflict found for date: ${dateString}`);\n          conflict = true;\n          break;\n        }\n        current = addDays(current, 1);\n      }\n\n      setIsAvailable(!conflict);\n      // console.log(`[AvailabilityCheck] Dates available: ${!conflict}`);\n\n      if (conflict) {\n        // Placeholder for suggesting alternative dates\n        // TODO: Implement more robust suggestion logic, potentially using AI\n        const suggested = [\n          { from: addDays(checkOutDate!, 1), to: addDays(checkOutDate!, 1 + numberOfNights), recommendation: \"Next Available\" },\n          { from: addDays(checkInDate!, 7), to: addDays(checkInDate!, 7 + numberOfNights) },\n        ];\n        const validSuggestions = suggested.filter(range => {\n          let isValidSuggestion = true;\n          let checkCurrent = new Date(range.from.getTime());\n          while (isBefore(checkCurrent, range.to)) {\n            const checkDateString = format(startOfDay(checkCurrent), 'yyyy-MM-dd');\n            if (fetchedUnavailableDates.some(d => format(startOfDay(d), 'yyyy-MM-dd') === checkDateString)) {\n              isValidSuggestion = false;\n              break;\n            }\n            checkCurrent = addDays(checkCurrent, 1);\n          }\n          // Ensure suggestion start date is not in the past\n          return isValidSuggestion && !isBefore(startOfDay(range.from), startOfDay(new Date()));\n        });\n        // console.log(`[AvailabilityCheck] Generated ${validSuggestions.length} valid suggested date ranges`);\n        setSuggestedDates(validSuggestions.slice(0, 3));\n      }\n\n    } catch (error) {\n      console.error(\"Error checking availability:\", error);\n      toast({\n        title: \"Error Checking Availability\",\n        description: \"Could not check property availability. Please try again.\",\n        variant: \"destructive\",\n      });\n      setIsAvailable(false);\n    } finally {\n      setIsLoadingAvailability(false);\n    }\n  }, [checkInDate, checkOutDate, datesSelected, property.id, numberOfNights, toast]);\n\n  // Re-check availability when dates change\n  useEffect(() => {\n    checkPropertyAvailability();\n  }, [checkPropertyAvailability]);\n\n  // --- Guest Selection Logic ---\n  const handleGuestChange = (change: number) => {\n    setNumberOfGuests((prev) => {\n      const newCount = prev + change;\n      return Math.max(1, Math.min(newCount, property.maxGuests));\n    });\n  };\n\n  // --- Form Submission & Booking Logic ---\n\n  const handleGuestInfoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (name === 'firstName') setFirstName(value);\n    else if (name === 'lastName') setLastName(value);\n    else if (name === 'email') setEmail(value);\n    else if (name === 'phone') setPhone(value);\n  };\n\n  const handleApplyCoupon = async () => {\n    if (!couponCode.trim()) {\n      setCouponError('Please enter a coupon code.');\n      return;\n    }\n    if (!datesSelected || !checkInDate || !checkOutDate) { // Added null checks\n      setCouponError('Please select valid booking dates first.');\n      return;\n    }\n\n    setIsApplyingCoupon(true);\n    setCouponError(null);\n    setAppliedCoupon(null);\n\n    try {\n      const result = await validateAndApplyCoupon(couponCode.trim(), checkInDate, checkOutDate);\n      if (result.error) {\n        setCouponError(result.error);\n      } else if (result.discountPercentage) {\n        setAppliedCoupon({ code: couponCode.trim().toUpperCase(), discountPercentage: result.discountPercentage });\n        toast({\n          title: \"Coupon Applied!\",\n          description: `Successfully applied ${result.discountPercentage}% discount.`,\n        });\n      }\n    } catch (error) {\n      console.error('Error applying coupon:', error);\n      setCouponError('Could not apply coupon. Please try again.');\n    } finally {\n      setIsApplyingCoupon(false);\n    }\n  };\n\n  const handleRemoveCoupon = () => {\n    setAppliedCoupon(null);\n    setCouponCode('');\n    setCouponError(null);\n    toast({ title: \"Coupon Removed\" });\n  };\n\n  const handleSelectAlternativeDate = (range: { from: Date; to: Date }) => {\n    setCheckInDate(range.from);\n    setCheckOutDate(range.to);\n     // Optionally scroll to top or to booking form after selection\n     window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleContinueToPayment = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setFormError(null);\n\n    if (!datesSelected || isAvailable !== true || !checkInDate || !checkOutDate) { // Added null checks\n      setFormError(\"Selected dates are not available or invalid.\");\n      return;\n    }\n    if (!firstName || !lastName || !email) {\n      setFormError(\"Please fill in your first name, last name, and email.\");\n      return;\n    }\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setFormError(\"Please enter a valid email address.\");\n      return;\n    }\n    if (!phone) {\n      setFormError(\"Please enter your phone number.\");\n      return;\n    }\n    if (numberOfGuests < 1 || numberOfGuests > property.maxGuests) {\n      setFormError(`Number of guests must be between 1 and ${property.maxGuests}.`);\n      return;\n    }\n    if (!pricingDetails) {\n      setFormError(\"Could not calculate pricing. Please try again.\");\n      return;\n    }\n\n    setIsProcessingBooking(true);\n\n    try {\n      // console.log(\"[handleContinueToPayment] Creating pending booking...\");\n      const bookingInput = {\n        propertyId: property.id,\n        guestInfo: { firstName, lastName, email, phone },\n        checkInDate: checkInDate.toISOString(), // Use guaranteed dates\n        checkOutDate: checkOutDate.toISOString(), // Use guaranteed dates\n        numberOfGuests: numberOfGuests,\n        pricing: {\n             baseRate: property.pricePerNight, // Store base rate per night\n             numberOfNights: numberOfNights,\n             cleaningFee: pricingDetails.cleaningFee,\n             extraGuestFee: property.extraGuestFee, // Use property's fee definition\n             numberOfExtraGuests: Math.max(0, numberOfGuests - property.baseOccupancy),\n             accommodationTotal: pricingDetails.basePrice + pricingDetails.extraGuestFee, // Base + extra guest total\n             subtotal: pricingDetails.subtotal,\n             taxes: 0, // Assuming no taxes for now\n             discountAmount: pricingDetails.discountAmount,\n             total: pricingDetails.total,\n        },\n        status: 'pending' as const,\n        // Ensure appliedCouponCode is null if no coupon is applied, not undefined\n        appliedCouponCode: appliedCoupon?.code ?? null,\n      };\n      const pendingBookingResult = await createPendingBookingAction(bookingInput);\n\n      if (pendingBookingResult.error || !pendingBookingResult.bookingId) {\n        throw new Error(pendingBookingResult.error || \"Failed to create pending booking.\");\n      }\n\n      const { bookingId } = pendingBookingResult;\n      // console.log(`[handleContinueToPayment] Pending booking created: ${bookingId}. Creating Stripe session...`);\n\n      const checkoutInput = {\n        property: property,\n        checkInDate: checkInDate.toISOString(),\n        checkOutDate: checkOutDate.toISOString(),\n        numberOfGuests: numberOfGuests,\n        totalPrice: pricingDetails!.total,\n        numberOfNights: numberOfNights,\n        appliedCouponCode: appliedCoupon?.code,\n        discountPercentage: appliedCoupon?.discountPercentage,\n        guestFirstName: firstName,\n        guestLastName: lastName,\n        guestEmail: email,\n        pendingBookingId: bookingId,\n      };\n      const stripeResult = await import('@/app/actions/create-checkout-session').then(m => m.createCheckoutSession(checkoutInput));\n\n      if (stripeResult.error || !stripeResult.sessionId) {\n        throw new Error(stripeResult.error || 'Failed to create Stripe session.');\n      }\n\n      // console.log(`[handleContinueToPayment] Stripe session created: ${stripeResult.sessionId}. Redirecting...`);\n\n      const stripe = await import('@stripe/stripe-js').then(m => m.loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY!));\n      // Add a log to check if stripe object is loaded correctly\n      console.log(\"Stripe object loaded:\", stripe);\n\n      if (!stripe) throw new Error('Stripe.js failed to load.');\n\n      const { error } = await stripe.redirectToCheckout({ sessionId: stripeResult.sessionId });\n\n      if (error) {\n        throw new Error(error.message || 'Could not redirect to Stripe.');\n      }\n      // Redirect happens here, code below won't execute on success\n\n    } catch (error) {\n      console.error(\"Error processing booking:\", error);\n      const errorMessage = error instanceof Error ? error.message : \"An unexpected error occurred.\";\n      setFormError(errorMessage);\n      toast({\n        title: \"Booking Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsProcessingBooking(false); // Ensure this runs even on redirect failure\n    }\n  };\n\n  // --- Availability Alert Logic ---\n  const handleNotifyAvailability = async () => {\n    if (!datesSelected || !checkInDate || !checkOutDate) return; // Added null checks\n\n    if (notificationMethod === 'email' && !email) {\n      toast({ title: \"Missing Information\", description: \"Please enter your email address.\", variant: \"destructive\" });\n      return;\n    }\n    if (notificationMethod === 'sms' && !phone) {\n      toast({ title: \"Missing Information\", description: \"Please enter your phone number.\", variant: \"destructive\" });\n      return;\n    }\n\n    setIsProcessingBooking(true); // Reuse state for notification request\n    try {\n      // TODO: Implement server action `createAvailabilityAlertAction`\n      // const result = await createAvailabilityAlertAction({\n      //   propertyId: property.id,\n      //   checkInDate: format(checkInDate, 'yyyy-MM-dd'),\n      //   checkOutDate: format(checkOutDate, 'yyyy-MM-dd'),\n      //   contactMethod: notificationMethod,\n      //   contactInfo: notificationMethod === 'email' ? email : phone,\n      // });\n      // if (result.error) throw new Error(result.error);\n\n      // console.log(\"[handleNotifyAvailability] Simulating availability alert request:\", {\n      //   propertyId: property.id,\n      //   checkInDate: format(checkInDate, 'yyyy-MM-dd'), // Use guaranteed date\n      //   checkOutDate: format(checkOutDate, 'yyyy-MM-dd'), // Use guaranteed date\n      //   method: notificationMethod,\n      //   contact: notificationMethod === 'email' ? email : phone,\n      // });\n      await new Promise(res => setTimeout(res, 500)); // Simulate API call\n\n      toast({\n        title: \"Alert Request Saved\",\n        description: `We'll notify you via ${notificationMethod} if ${format(checkInDate, 'MMM d')} - ${format(checkOutDate, 'MMM d')} becomes available.`,\n      });\n      setNotifyAvailability(false);\n\n    } catch (error) {\n      console.error(\"Error creating availability alert:\", error);\n      toast({\n        title: \"Error Saving Alert\",\n        description: `Could not save your notification request. ${error instanceof Error ? error.message : ''}`,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsProcessingBooking(false);\n    }\n  };\n\n\n  // --- Render Logic ---\n  const renderAvailabilityStatus = () => {\n    if (isLoadingAvailability) {\n      return (\n        <Alert variant=\"default\" className=\"bg-blue-50 border-blue-200\">\n          <Loader2 className=\"h-4 w-4 animate-spin\" />\n          <AlertTitle>Checking Availability...</AlertTitle>\n          <AlertDescription>Please wait while we check the dates.</AlertDescription>\n        </Alert>\n      );\n    }\n    if (isAvailable === true && datesSelected && checkInDate && checkOutDate) { // Added null checks\n      return (\n        <Alert variant=\"default\" className=\"bg-green-50 border-green-200 text-green-800\">\n          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n          <AlertTitle>Dates Available!</AlertTitle>\n          <AlertDescription>\n            Good news! The dates {`${format(checkInDate, 'MMM d')} - ${format(checkOutDate, 'MMM d')} (${numberOfNights} nights)`} are available. Please fill in your details below to proceed.\n          </AlertDescription>\n        </Alert>\n      );\n    }\n    if (isAvailable === false && datesSelected && checkInDate && checkOutDate) { // Added null checks\n      return (\n        <Alert variant=\"destructive\">\n          <XCircle className=\"h-4 w-4\" />\n          <AlertTitle>Dates Unavailable</AlertTitle>\n          <AlertDescription>\n            Unfortunately, the selected dates ({`${format(checkInDate, 'MMM d')} - ${format(checkOutDate, 'MMM d')}`}) are not available.\n          </AlertDescription>\n        </Alert>\n      );\n    }\n    if (!datesSelected) {\n      return (\n        <Alert variant=\"default\" className=\"border-yellow-300 bg-yellow-50 text-yellow-800\">\n          <Info className=\"h-4 w-4 text-yellow-600\" />\n          <AlertTitle>Select Dates</AlertTitle>\n          <AlertDescription>Please select your check-in and check-out dates using the initial form or by selecting alternative dates below.</AlertDescription>\n        </Alert>\n      );\n    }\n    return null;\n  };\n\n  const renderSuggestedDates = () => {\n    if (isLoadingAvailability || isAvailable !== false || suggestedDates.length === 0) {\n      return null;\n    }\n    return (\n      <Card className=\"mt-6 bg-amber-50 border-amber-200\">\n        <CardHeader>\n          <CardTitle className=\"text-lg text-amber-900\">Alternative Dates</CardTitle>\n          <CardDescription className=\"text-amber-800\">\n            The dates you selected are unavailable. Here are some alternatives:\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {suggestedDates.map((range, index) => (\n            <Button\n              key={index}\n              variant=\"outline\"\n              className=\"w-full justify-between bg-white hover:bg-gray-50 border-gray-300\"\n              onClick={() => handleSelectAlternativeDate(range)}\n            >\n              <span>\n                {format(range.from, 'MMM d, yyyy')} - {format(range.to, 'MMM d, yyyy')} ({differenceInDays(range.to, range.from)} nights)\n              </span>\n              {range.recommendation && <Badge variant=\"secondary\">{range.recommendation}</Badge>}\n            </Button>\n          ))}\n        </CardContent>\n      </Card>\n    );\n  };\n\n   const renderAvailabilityCalendar = () => {\n     // Only render calendar if dates are unavailable\n     if (isAvailable === true) {\n       return null;\n     }\n     // console.log(\"[renderAvailabilityCalendar] Rendering calendar. Loading:\", isLoadingAvailability, \"Unavailable Dates:\", unavailableDates.length);\n     if (isLoadingAvailability && unavailableDates.length === 0) {\n       // console.log(\"[renderAvailabilityCalendar] Still loading initial data, skipping render.\");\n       return <div className=\"flex justify-center items-center h-64\"><Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" /></div>;\n     }\n     const calendarCenterMonth = checkInDate ? startOfMonth(checkInDate) : startOfMonth(new Date());\n     // console.log(\"[renderAvailabilityCalendar] Center month:\", format(calendarCenterMonth, 'yyyy-MM'));\n     return (\n       <div className=\"mt-6\">\n         <h3 className=\"text-lg font-semibold mb-3\">Availability Calendar</h3>\n         <AvailabilityCalendar\n           currentMonth={calendarCenterMonth}\n           unavailableDates={unavailableDates}\n           selectedRange={datesSelected ? { from: checkInDate!, to: checkOutDate! } : undefined}\n         />\n       </div>\n     );\n   }\n\n  const renderNotificationForm = () => {\n    if (isLoadingAvailability || isAvailable !== false || !datesSelected || !checkInDate || !checkOutDate) return null; // Added null checks\n    return (\n      <Card className=\"mt-6 bg-blue-50 border-blue-200\">\n        <CardHeader>\n          <CardTitle className=\"text-lg text-blue-900\">Get Notified</CardTitle>\n          <CardDescription className=\"text-blue-800\">\n            Want to know if {`${format(checkInDate, 'MMM d')} - ${format(checkOutDate, 'MMM d')}`} become available?\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"notify-availability\"\n                checked={notifyAvailability}\n                onCheckedChange={(checked) => setNotifyAvailability(checked as boolean)}\n              />\n              <Label htmlFor=\"notify-availability\" className=\"font-medium\">\n                Yes, notify me if these dates become available.\n              </Label>\n          </div>\n\n          {notifyAvailability && (\n            <>\n              <Separator />\n              <p className=\"text-sm font-medium\">How should we notify you?</p>\n              <RadioGroup\n                value={notificationMethod}\n                onValueChange={(value) => setNotificationMethod(value as 'email' | 'sms')}\n                className=\"flex gap-4\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"email\" id=\"notify-email\" />\n                  <Label htmlFor=\"notify-email\" className=\"flex items-center gap-1\"><Mail className=\"h-4 w-4\" /> Email</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"sms\" id=\"notify-sms\" />\n                  <Label htmlFor=\"notify-sms\" className=\"flex items-center gap-1\"><Phone className=\"h-4 w-4\" /> SMS</Label>\n                </div>\n              </RadioGroup>\n              {notificationMethod === 'email' && (\n                <Input\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required={notificationMethod === 'email'}\n                  className=\"bg-white\"\n                />\n              )}\n              {notificationMethod === 'sms' && (\n                <Input\n                  type=\"tel\"\n                  placeholder=\"Enter your phone number\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  required={notificationMethod === 'sms'}\n                   className=\"bg-white\"\n                />\n              )}\n              <Button\n                onClick={handleNotifyAvailability}\n                disabled={isProcessingBooking}\n                size=\"sm\"\n              >\n                {isProcessingBooking ? <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" /> : null}\n                Request Notification\n              </Button>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    )\n  }\n\n\n  return (\n    // Apply responsive width constraints\n    <div className=\"max-w-3xl mx-auto w-full px-4 md:px-0\"> {/* Max width on larger screens, centered, full width on mobile */}\n        {/* Top Section: Availability Info & Alternatives/Calendar */}\n        <div className=\"space-y-6 mb-8\">\n            {/* Availability Status */}\n            {renderAvailabilityStatus()}\n\n            {/* Suggested Dates */}\n            {renderSuggestedDates()}\n\n            {/* Availability Calendar - Conditionally Rendered */}\n            {renderAvailabilityCalendar()}\n\n            {/* Notification Form */}\n            {renderNotificationForm()}\n        </div>\n\n        {/* Bottom Section: Booking Summary & Guest Info Form */}\n        {/* Conditionally render the booking form only if dates are available */}\n        {isAvailable === true && (\n            <Card className=\"w-full\"> {/* Form now takes the constrained width */}\n                <CardHeader>\n                    <CardTitle>Booking Summary & Details</CardTitle>\n                    <CardDescription>Confirm details and proceed to payment.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    {isLoadingAvailability ? (\n                        <div className=\"flex justify-center items-center p-8\">\n                            <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                        </div>\n                    ) : (\n                        // Only show the full booking form if dates are available\n                        <form onSubmit={handleContinueToPayment} className=\"space-y-6\">\n\n                            {/* Selected Dates & Guests on grid */}\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 border-b pb-4\">\n                                {/* Selected Dates Display */}\n                                {datesSelected && checkInDate && checkOutDate && (\n                                    <div className=\"space-y-1\">\n                                        <Label>Selected Dates</Label>\n                                        <div className=\"flex items-center justify-between rounded-md border p-2 mt-1 bg-muted/50\">\n                                            <span className=\"font-medium text-sm\">\n                                                {format(checkInDate, 'MMM dd, yyyy')} - {format(checkOutDate, 'MMM dd, yyyy')}\n                                            </span>\n                                            <span className=\"text-sm text-muted-foreground\">({numberOfNights} nights)</span>\n                                        </div>\n                                    </div>\n                                )}\n\n                                {/* Guest Selector */}\n                                <div className=\"space-y-1\">\n                                    <Label htmlFor=\"guests\">Number of Guests</Label>\n                                    <div className=\"flex items-center justify-between rounded-md border p-2 mt-1\">\n                                        <Button\n                                            type=\"button\"\n                                            variant=\"outline\"\n                                            size=\"icon\"\n                                            className=\"h-7 w-7\"\n                                            onClick={() => handleGuestChange(-1)}\n                                            disabled={numberOfGuests <= 1 || isProcessingBooking}\n                                            aria-label=\"Decrease guests\"\n                                        >\n                                            <Minus className=\"h-4 w-4\" />\n                                        </Button>\n                                        <span className=\"mx-4 font-medium w-8 text-center\" id=\"guests\">\n                                            {numberOfGuests}\n                                        </span>\n                                        <Button\n                                            type=\"button\"\n                                            variant=\"outline\"\n                                            size=\"icon\"\n                                            className=\"h-7 w-7\"\n                                            onClick={() => handleGuestChange(1)}\n                                            disabled={numberOfGuests >= property.maxGuests || isProcessingBooking}\n                                            aria-label=\"Increase guests\"\n                                        >\n                                            <Plus className=\"h-4 w-4\" />\n                                        </Button>\n                                    </div>\n                                     <p className=\"text-xs text-muted-foreground mt-1\">\n                                         Max {property.maxGuests}. Base for {property.baseOccupancy}.\n                                         {property.extraGuestFee > 0 && ` Extra: $${property.extraGuestFee.toFixed(2)}/guest/night.`}\n                                     </p>\n                                </div>\n\n                                 {/* Coupon Code */}\n                                <div className=\"space-y-1 md:col-span-2\"> {/* Span 2 columns on medium screens */}\n                                     <Label htmlFor=\"coupon\">Discount Coupon (Optional)</Label>\n                                     <div className=\"flex gap-2\">\n                                         <Input id=\"coupon\" placeholder=\"Enter code\" value={couponCode} onChange={(e) => setCouponCode(e.target.value)} disabled={isApplyingCoupon || !!appliedCoupon || isProcessingBooking} />\n                                         {!appliedCoupon ? (\n                                         <Button type=\"button\" variant=\"outline\" onClick={handleApplyCoupon} disabled={isApplyingCoupon || !couponCode.trim() || isProcessingBooking}>\n                                             {isApplyingCoupon ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <TicketPercent className=\"h-4 w-4\" />}\n                                         </Button>\n                                         ) : (\n                                         <Button type=\"button\" variant=\"ghost\" size=\"icon\" onClick={handleRemoveCoupon} disabled={isProcessingBooking}><X className=\"h-4 w-4 text-destructive\" /></Button>\n                                         )}\n                                     </div>\n                                     <div className=\"h-4 text-xs mt-1\">\n                                         {couponError && <p className=\"text-destructive\">{couponError}</p>}\n                                         {appliedCoupon && <p className=\"text-green-600\">Applied: {appliedCoupon.code} ({appliedCoupon.discountPercentage}%)</p>}\n                                     </div>\n                                 </div>\n                            </div>\n\n\n                            {/* Price Breakdown */}\n                            {pricingDetails && (\n                            <div className=\"space-y-2 text-sm border-b pb-4\">\n                                <h3 className=\"font-semibold mb-2\">Price Details</h3>\n                                <div className=\"flex justify-between\"><span>Base price ({numberOfNights} nights)</span><span>${pricingDetails.basePrice.toFixed(2)}</span></div>\n                                {pricingDetails.extraGuestFee > 0 && <div className=\"flex justify-between text-muted-foreground\"><span>Extra guest fee</span><span>+${pricingDetails.extraGuestFee.toFixed(2)}</span></div>}\n                                <div className=\"flex justify-between\"><span>Cleaning fee</span><span>+${pricingDetails.cleaningFee.toFixed(2)}</span></div>\n                                <Separator className=\"my-1\" />\n                                <div className=\"flex justify-between font-medium\"><span>Subtotal</span><span>${pricingDetails.subtotal.toFixed(2)}</span></div>\n                                {appliedCoupon && <div className=\"flex justify-between text-green-600\"><span>Discount ({appliedCoupon.code})</span><span>-${pricingDetails.discountAmount.toFixed(2)}</span></div>}\n                                {/* Add taxes if applicable */}\n                                <Separator className=\"my-2 font-bold\" />\n                                <div className=\"flex justify-between font-bold text-base\"><span>Total</span><span>${pricingDetails.total.toFixed(2)}</span></div>\n                            </div>\n                            )}\n\n                            {/* Guest Information */}\n                            <div className=\"space-y-4\">\n                                <h3 className=\"font-semibold\">Your Information</h3>\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <div className=\"space-y-1\">\n                                        <Label htmlFor=\"firstName\">First Name</Label>\n                                        <Input id=\"firstName\" name=\"firstName\" value={firstName} onChange={handleGuestInfoChange} required disabled={isProcessingBooking} />\n                                    </div>\n                                    <div className=\"space-y-1\">\n                                        <Label htmlFor=\"lastName\">Last Name</Label>\n                                        <Input id=\"lastName\" name=\"lastName\" value={lastName} onChange={handleGuestInfoChange} required disabled={isProcessingBooking} />\n                                    </div>\n                                </div>\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <div className=\"space-y-1\">\n                                        <Label htmlFor=\"email\">Email</Label>\n                                        <Input id=\"email\" name=\"email\" type=\"email\" value={email} onChange={handleGuestInfoChange} required disabled={isProcessingBooking} />\n                                    </div>\n                                    <div className=\"space-y-1\">\n                                        <Label htmlFor=\"phone\">Phone Number</Label>\n                                        <Input id=\"phone\" name=\"phone\" type=\"tel\" value={phone} onChange={handleGuestInfoChange} required disabled={isProcessingBooking} />\n                                    </div>\n                                </div>\n                            </div>\n\n\n\n                            {/* Error Message */}\n                            {formError && (\n                            <Alert variant=\"destructive\">\n                                <AlertTriangle className=\"h-4 w-4\" />\n                                <AlertTitle>Error</AlertTitle>\n                                <AlertDescription>{formError}</AlertDescription>\n                            </Alert>\n                            )}\n\n                            {/* Submit Button */}\n                            <Button type=\"submit\" className=\"w-full\" disabled={isProcessingBooking}>\n                            {isProcessingBooking ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <ArrowRight className=\"mr-2 h-4 w-4\" />}\n                            {isProcessingBooking ? 'Processing...' : 'Continue to Payment'}\n                            </Button>\n\n                        </form>\n                    )}\n                </CardContent>\n            </Card>\n        )}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2870, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2918, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/booking/initial-booking-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { format, isAfter } from 'date-fns';\nimport type { DateRange } from 'react-day-picker';\nimport { Calendar as CalendarIcon, SearchCheck, Loader2 } from 'lucide-react'; // Removed Users, Minus, Plus\n\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Property } from '@/types';\n\ninterface InitialBookingFormProps {\n  property: Property;\n}\n\nexport function InitialBookingForm({ property }: InitialBookingFormProps) {\n  const [date, setDate] = useState<DateRange | undefined>(undefined);\n  // Removed guest state: const [numberOfGuests, setNumberOfGuests] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const router = useRouter();\n  const { toast } = useToast();\n\n  // Removed handleGuestChange function\n\n  // Check if date range is valid (end date is after start date)\n  const isDateRangeValid = (): boolean => {\n    if (!date?.from || !date?.to) {\n      return false;\n    }\n    // Ensure end date is strictly after start date\n    return isAfter(date.to, date.from);\n  };\n\n  const handleCheckAvailability = () => {\n    if (!isDateRangeValid()) {\n      toast({\n        title: \"Invalid Dates\",\n        description: \"Please select a valid check-in and check-out date.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsLoading(true);\n\n    // Construct the URL for the availability check page (only dates)\n    const checkIn = format(date!.from!, 'yyyy-MM-dd');\n    const checkOut = format(date!.to!, 'yyyy-MM-dd');\n    const params = new URLSearchParams({\n      checkIn,\n      checkOut,\n      // Removed guests parameter: guests: String(numberOfGuests),\n    });\n\n    // Navigate to the new availability check page\n    router.push(`/booking/check/${property.slug}?${params.toString()}`);\n\n    // Optionally reset loading state if navigation fails, though usually it won't\n    // setTimeout(() => setIsLoading(false), 2000); // Reset after a delay just in case\n  };\n\n  const isButtonDisabled = !isDateRangeValid() || isLoading;\n\n  return (\n    // Reduced vertical spacing for overlay context\n    <div className=\"space-y-4\">\n      {/* Date Range Picker */}\n      <div className={cn('grid gap-2')}>\n         {/* Use text-sm for label in overlay */}\n         <Label htmlFor=\"date\" className=\"text-sm font-medium text-gray-700\">Check-in / Check-out Dates</Label>\n         <Popover>\n          <PopoverTrigger asChild>\n            <Button\n              id=\"date\"\n              variant={'outline'}\n              className={cn(\n                // Adjusted width for overlay form\n                'w-full justify-start text-left font-normal',\n                !date && 'text-muted-foreground'\n              )}\n              disabled={isLoading}\n            >\n              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n              {date?.from ? (\n                date.to ? (\n                  <>\n                    {format(date.from, 'LLL dd, y')} -{' '}\n                    {format(date.to, 'LLL dd, y')}\n                  </>\n                ) : (\n                  format(date.from, 'LLL dd, y')\n                )\n              ) : (\n                <span>Pick a date range</span>\n              )}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-auto p-0\" align=\"start\">\n              <Calendar\n                  initialFocus\n                  mode=\"range\"\n                  defaultMonth={date?.from || new Date()}\n                  selected={date}\n                  onSelect={setDate}\n                  numberOfMonths={1}\n                  disabled={{ before: new Date(new Date().setHours(0, 0, 0, 0)) }} // Only disable past dates\n              />\n          </PopoverContent>\n        </Popover>\n      </div>\n\n      {/* Guest Selector Removed */}\n\n      {/* Check Availability Button */}\n      <Button\n        type=\"button\"\n        onClick={handleCheckAvailability}\n        // Use primary color defined in globals.css\n        className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\"\n        disabled={isButtonDisabled}\n      >\n        {isLoading ? (\n           <>\n             <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n             Checking...\n           </>\n         ) : (\n           <>\n             <SearchCheck className=\"mr-2 h-4 w-4\" />\n             Check Availability\n           </>\n         )}\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}