{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["// src/lib/firebase.ts\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from \"firebase/auth\"; // Added for Firebase Auth\n\n// Load environment variables from .env.local at the project root\n// This is automatically handled by Next.js in the app runtime.\n// Scripts like load-properties.ts need to load .env.local explicitly.\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase Client SDK\nlet app;\nif (getApps().length === 0) {\n  if (!firebaseConfig.apiKey || !firebaseConfig.projectId) {\n    console.error(\n      \"❌ Client Firebase Config Missing: NEXT_PUBLIC_FIREBASE_API_KEY or NEXT_PUBLIC_FIREBASE_PROJECT_ID is missing. Client SDK cannot initialize.\"\n    );\n    // Potentially throw an error or handle this case as critical\n  } else {\n    try {\n      app = initializeApp(firebaseConfig);\n      // console.log(\"✅ Firebase Client SDK initialized successfully.\");\n    } catch (initError) {\n      console.error(\"❌ Firebase Client SDK initialization failed:\", initError);\n    }\n  }\n} else {\n  app = getApp();\n  // console.log(\"ℹ️ Firebase Client SDK app already initialized.\");\n}\n\nlet db;\nlet auth; // Declare auth\n\nif (app) {\n  try {\n    db = getFirestore(app);\n    auth = getAuth(app); // Initialize auth\n    // console.log(\"✅ Firestore and Auth Client SDKs initialized successfully.\");\n  } catch (sdkError) {\n    console.error(\"❌ Firestore or Auth Client SDK initialization failed:\", sdkError);\n  }\n} else {\n  console.error(\"❌ Cannot initialize Firestore/Auth Client SDKs because Firebase app is not available.\");\n}\n\nexport { app, db, auth }; // Export auth\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;;AAUZ;AATV;AAAA;AACA;AAAA;AACA,0UAAyC,0BAA0B;AAAnE;;;;AAEA,iEAAiE;AACjE,+DAA+D;AAC/D,sEAAsE;AAEtE,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,iCAAiC;AACjC,IAAI;AACJ,IAAI,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI,CAAC,eAAe,MAAM,IAAI,CAAC,eAAe,SAAS,EAAE;QACvD,QAAQ,KAAK,CACX;IAEF,6DAA6D;IAC/D,OAAO;QACL,IAAI;YACF,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,kEAAkE;QACpE,EAAE,OAAO,WAAW;YAClB,QAAQ,KAAK,CAAC,gDAAgD;QAChE;IACF;AACF,OAAO;IACL,MAAM,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;AACX,kEAAkE;AACpE;AAEA,IAAI;AACJ,IAAI,MAAM,eAAe;AAEzB,IAAI,KAAK;IACP,IAAI;QACF,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE,MAAM,kBAAkB;IACvC,6EAA6E;IAC/E,EAAE,OAAO,UAAU;QACjB,QAAQ,KAAK,CAAC,yDAAyD;IACzE;AACF,OAAO;IACL,QAAQ,KAAK,CAAC;AAChB;;;;;CAE0B,cAAc","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/AuthContext.tsx"],"sourcesContent":["// src/contexts/AuthContext.tsx\n'use client';\n\nimport type { ReactNode } from 'react';\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport {\n  onAuthStateChanged,\n  signInWithRedirect,\n  getRedirectResult,\n  GoogleAuthProvider,\n  signOut as firebaseSignOut,\n  type User as FirebaseUser,\n  AuthErrorCodes,\n} from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { useRouter } from 'next/navigation';\n\ninterface AuthContextType {\n  user: FirebaseUser | null;\n  loading: boolean;\n  signInWithGoogle: () => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<FirebaseUser | null>(null);\n  const [authInitializing, setAuthInitializing] = useState(true); // Tracks initial onAuthStateChanged\n  const [redirectResultProcessing, setRedirectResultProcessing] = useState(true); // Tracks getRedirectResult\n  const router = useRouter();\n\n  // Effect for onAuthStateChanged\n  useEffect(() => {\n    if (!auth) {\n      console.error(\"[AuthProvider] Firebase Auth is not initialized for onAuthStateChanged.\");\n      setAuthInitializing(false);\n      setRedirectResultProcessing(false); // If auth fails, no redirect to process\n      return;\n    }\n\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      console.log(\"[AuthProvider] onAuthStateChanged. User:\", currentUser ? currentUser.uid : null);\n      setUser(currentUser);\n      setAuthInitializing(false); // Initial auth state determined\n    });\n\n    return () => unsubscribe();\n  }, []); // Runs once on mount\n\n  // Effect for getRedirectResult\n  useEffect(() => {\n    if (!auth) {\n      console.error(\"[AuthProvider] Firebase Auth is not initialized for getRedirectResult.\");\n      setRedirectResultProcessing(false);\n      return;\n    }\n    \n    // Only process redirect if auth has initialized (to avoid race conditions)\n    // and redirect processing hasn't been marked as complete yet.\n    if (!authInitializing) {\n        getRedirectResult(auth)\n        .then((result) => {\n            if (result) {\n            console.log(\"[AuthProvider] Google sign-in via redirect processed. User (from result):\", result.user.uid);\n            // setUser(result.user); // Not strictly necessary, onAuthStateChanged will update.\n            } else {\n            console.log(\"[AuthProvider] No pending redirect result.\");\n            }\n        })\n        .catch((error: any) => {\n            if (error.code === AuthErrorCodes.UNAUTHORIZED_DOMAIN) {\n            console.error(\n                '❌ Error processing Google Sign-In redirect: Unauthorized domain. ' +\n                'Ensure your current domain is added to the list of authorized domains ' +\n                'in your Firebase project settings (Authentication -> Sign-in method -> Google -> Authorized domains). ' +\n                `Current domain is likely: ${typeof window !== 'undefined' ? window.location.hostname : 'unknown'}`\n            );\n            } else if (error.code === 'auth/no-auth-event' || error.code === 'auth/redirect-cancelled' || error.code === 'auth/redirect-error') {\n            console.log(`[AuthProvider] Redirect status/error: ${error.code} - ${error.message}`);\n            } else {\n            console.error('❌ Error processing Google Sign-In redirect result:', error);\n            }\n        })\n        .finally(() => {\n            console.log(\"[AuthProvider] Finished processing redirect result.\");\n            setRedirectResultProcessing(false); // Redirect processing is complete\n        });\n    }\n  }, [auth, authInitializing]); // Rerun if auth or authInitializing changes\n\n  const signInWithGoogle = async () => {\n    if (!auth) {\n      console.error(\"[AuthProvider] Firebase Auth is not initialized for signInWithGoogle.\");\n      return;\n    }\n    setAuthInitializing(true); // Reset flags when initiating a new sign-in\n    setRedirectResultProcessing(true);\n    try {\n      const provider = new GoogleAuthProvider();\n      await signInWithRedirect(auth, provider);\n      // Page will redirect.\n    } catch (error: any) {\n      if (error.code === AuthErrorCodes.UNAUTHORIZED_DOMAIN) {\n         console.error(/* ... existing error message ... */);\n      } else {\n        console.error('❌ Error initiating Google sign-in with redirect:', error);\n      }\n      setAuthInitializing(false); // If initiation fails, stop loading states\n      setRedirectResultProcessing(false);\n    }\n  };\n\n  const logout = async () => {\n    if (!auth) {\n      console.error(\"[AuthProvider] Firebase Auth is not initialized for logout.\");\n      return;\n    }\n    setAuthInitializing(true); // Indicate an auth state change is about to happen\n    setRedirectResultProcessing(true); // Not a redirect, but reset to ensure loading state is correct\n    try {\n      await firebaseSignOut(auth);\n      // setUser(null) and loading states will be handled by onAuthStateChanged and subsequent effects\n      router.push('/login');\n    } catch (error) {\n      console.error('❌ Error signing out:', error);\n      setAuthInitializing(false); // Reset if logout fails\n      setRedirectResultProcessing(false);\n    }\n  };\n\n  const overallLoading = authInitializing || redirectResultProcessing;\n\n  if (overallLoading && !auth) { // If still \"loading\" but auth object itself failed\n    return (\n      <div className=\"flex min-h-screen items-center justify-center\">\n        <p className=\"text-red-500\">Error: Firebase Authentication failed to initialize properly.</p>\n      </div>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, loading: overallLoading, signInWithGoogle, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}